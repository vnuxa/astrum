[
    {
        "defines": [
            {
                "desc": "```lua\nAlignment:\n    | \"start\" -- Alignment at the start of the axis\n    | \"center\" -- Alignment at the center of the axis\n    | \"end\" -- Alignment at the end of the axis\n```",
                "finish": [
                    52,
                    12
                ],
                "rawdesc": "```lua\nAlignment:\n    | \"start\" -- Alignment at the start of the axis\n    | \"center\" -- Alignment at the center of the axis\n    | \"end\" -- Alignment at the end of the axis\n```",
                "start": [
                    49,
                    10
                ],
                "type": "doc.alias",
                "view": "\"center\"|\"end\"|\"start\""
            }
        ],
        "fields": [],
        "name": "Alignment",
        "type": "type",
        "view": "Alignment"
    },
    {
        "defines": [
            {
                "desc": "```lua\nAnchor:\n    | \"left\"\n    | \"right\"\n    | \"top\"\n    | \"bottom\"\n```",
                "finish": [
                    50,
                    15
                ],
                "rawdesc": "```lua\nAnchor:\n    | \"left\"\n    | \"right\"\n    | \"top\"\n    | \"bottom\"\n```",
                "start": [
                    46,
                    10
                ],
                "type": "doc.alias",
                "view": "\"bottom\"|\"left\"|\"right\"|\"top\""
            }
        ],
        "fields": [],
        "name": "Anchor",
        "type": "type",
        "view": "Anchor"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "animations/init.lua",
                "finish": [
                    46,
                    20
                ],
                "start": [
                    46,
                    11
                ],
                "type": "doc.class",
                "view": "Animation",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Animates all of the tables number values, based on the animation's state\n\n@*param* `false_table` — The table to go to when the `animation state` is `false`\n\n@*param* `true_table` — The table to go to when the `animation state` is `true`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                58,
                                9
                            ],
                            "name": "self",
                            "start": [
                                58,
                                9
                            ],
                            "type": "self",
                            "view": "Animation"
                        },
                        {
                            "desc": "The table to go to when the `animation state` is `false`",
                            "finish": [
                                58,
                                45
                            ],
                            "name": "false_table",
                            "rawdesc": "The table to go to when the `animation state` is `false`",
                            "start": [
                                58,
                                34
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "The table to go to when the `animation state` is `true`",
                            "finish": [
                                58,
                                57
                            ],
                            "name": "true_table",
                            "rawdesc": "The table to go to when the `animation state` is `true`",
                            "start": [
                                58,
                                47
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Animates all of the tables number values, based on the animation's state\n\n@*param* `false_table` — The table to go to when the `animation state` is `false`\n\n@*param* `true_table` — The table to go to when the `animation state` is `true`",
                    "finish": [
                        58,
                        62
                    ],
                    "rawdesc": "Animates all of the tables number values, based on the animation's state",
                    "start": [
                        58,
                        1
                    ],
                    "type": "function",
                    "view": "(method) Animation:animate_table(false_table: table, true_table: table)"
                },
                "file": "animations/init.lua",
                "finish": [
                    58,
                    33
                ],
                "name": "animate_table",
                "rawdesc": "Animates all of the tables number values, based on the animation's state",
                "start": [
                    58,
                    10
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Animates any number value, based on the animation state\n\n@*param* `false_value` — The value to transition to when the `animation state` is `false`\n\n@*param* `true_value` — The value to transition to when the `animation state` is `true`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                53,
                                9
                            ],
                            "name": "self",
                            "start": [
                                53,
                                9
                            ],
                            "type": "self",
                            "view": "Animation"
                        },
                        {
                            "desc": "The value to transition to when the `animation state` is `false`",
                            "finish": [
                                53,
                                45
                            ],
                            "name": "false_value",
                            "rawdesc": "The value to transition to when the `animation state` is `false`",
                            "start": [
                                53,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "The value to transition to when the `animation state` is `true`",
                            "finish": [
                                53,
                                57
                            ],
                            "name": "true_value",
                            "rawdesc": "The value to transition to when the `animation state` is `true`",
                            "start": [
                                53,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Animates any number value, based on the animation state\n\n@*param* `false_value` — The value to transition to when the `animation state` is `false`\n\n@*param* `true_value` — The value to transition to when the `animation state` is `true`",
                    "finish": [
                        53,
                        62
                    ],
                    "rawdesc": "Animates any number value, based on the animation state",
                    "start": [
                        53,
                        1
                    ],
                    "type": "function",
                    "view": "(method) Animation:animate_value(false_value: number, true_value: number)"
                },
                "file": "animations/init.lua",
                "finish": [
                    53,
                    33
                ],
                "name": "animate_value",
                "rawdesc": "Animates any number value, based on the animation state",
                "start": [
                    53,
                    10
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The animation's ID, used for interracting with lilt animations",
                "extends": {
                    "finish": [
                        47,
                        30
                    ],
                    "start": [
                        47,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                47,
                                30
                            ],
                            "start": [
                                47,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "animations/init.lua",
                "finish": [
                    47,
                    30
                ],
                "name": "animation_id",
                "rawdesc": "The animation's ID, used for interracting with lilt animations",
                "start": [
                    47,
                    11
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Gets the current animation state",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                69,
                                9
                            ],
                            "name": "self",
                            "start": [
                                69,
                                9
                            ],
                            "type": "self",
                            "view": "Animation"
                        }
                    ],
                    "desc": "Gets the current animation state",
                    "finish": [
                        69,
                        35
                    ],
                    "rawdesc": "Gets the current animation state",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        69,
                        1
                    ],
                    "type": "function",
                    "view": "(method) Animation:get_state()\n  -> boolean"
                },
                "file": "animations/init.lua",
                "finish": [
                    69,
                    29
                ],
                "name": "get_state",
                "rawdesc": "Gets the current animation state",
                "start": [
                    69,
                    10
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Plays an animation  and toggles the state",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                65,
                                9
                            ],
                            "name": "self",
                            "start": [
                                65,
                                9
                            ],
                            "type": "self",
                            "view": "Animation"
                        }
                    ],
                    "desc": "Plays an animation  and toggles the state",
                    "finish": [
                        65,
                        30
                    ],
                    "rawdesc": "Plays an animation  and toggles the state",
                    "start": [
                        65,
                        1
                    ],
                    "type": "function",
                    "view": "(method) Animation:play()"
                },
                "file": "animations/init.lua",
                "finish": [
                    65,
                    24
                ],
                "name": "play",
                "rawdesc": "Plays an animation  and toggles the state",
                "start": [
                    65,
                    10
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Changes the animation state without playing an animation\n\n@*param* `state` — If provided, change to a specific state",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                62,
                                9
                            ],
                            "name": "self",
                            "start": [
                                62,
                                9
                            ],
                            "type": "self",
                            "view": "Animation"
                        },
                        {
                            "desc": "If provided, change to a specific state",
                            "finish": [
                                62,
                                32
                            ],
                            "name": "state",
                            "rawdesc": "If provided, change to a specific state",
                            "start": [
                                62,
                                27
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Changes the animation state without playing an animation\n\n@*param* `state` — If provided, change to a specific state",
                    "finish": [
                        62,
                        37
                    ],
                    "rawdesc": "Changes the animation state without playing an animation",
                    "start": [
                        62,
                        1
                    ],
                    "type": "function",
                    "view": "(method) Animation:toggle(state?: boolean)"
                },
                "file": "animations/init.lua",
                "finish": [
                    62,
                    26
                ],
                "name": "toggle",
                "rawdesc": "Changes the animation state without playing an animation",
                "start": [
                    62,
                    10
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Animation",
        "type": "type",
        "view": "Animation"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "animations/init.lua",
                "finish": [
                    2,
                    20
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "Animations",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Animates a widget's style, based on the animation's state. Both provided styles must have a number value in order to animate it\n\n@*param* `false_style` — The classname of the requested style to go to when the `animation` is `false`.\n\n@*param* `true_style` — The classname of the requested style to go to when the `animation` is `true`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                78,
                                8
                            ],
                            "name": "self",
                            "start": [
                                78,
                                8
                            ],
                            "type": "self",
                            "view": "Animations"
                        },
                        {
                            "finish": [
                                78,
                                43
                            ],
                            "name": "animation",
                            "start": [
                                78,
                                34
                            ],
                            "type": "local",
                            "view": "Animation"
                        },
                        {
                            "desc": "The classname of the requested style to go to when the `animation` is `false`.",
                            "finish": [
                                78,
                                56
                            ],
                            "name": "false_style",
                            "rawdesc": "The classname of the requested style to go to when the `animation` is `false`.",
                            "start": [
                                78,
                                45
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "The classname of the requested style to go to when the `animation` is `true`.",
                            "finish": [
                                78,
                                68
                            ],
                            "name": "true_style",
                            "rawdesc": "The classname of the requested style to go to when the `animation` is `true`.",
                            "start": [
                                78,
                                58
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Animates a widget's style, based on the animation's state. Both provided styles must have a number value in order to animate it\n\n@*param* `false_style` — The classname of the requested style to go to when the `animation` is `false`.\n\n@*param* `true_style` — The classname of the requested style to go to when the `animation` is `true`.",
                    "finish": [
                        78,
                        73
                    ],
                    "rawdesc": "Animates a widget's style, based on the animation's state. Both provided styles must have a number value in order to animate it",
                    "start": [
                        78,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Animations:animate_style(animation: Animation, false_style: string, true_style: string)"
                },
                "file": "animations/init.lua",
                "finish": [
                    78,
                    33
                ],
                "name": "animate_style",
                "rawdesc": "Animates a widget's style, based on the animation's state. Both provided styles must have a number value in order to animate it",
                "start": [
                    78,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Makes a new animation based on the provided settings\n\n@*param* `starting_value` — The state of the animation, default is `false`\n\n@*param* `time` — The amount of seconds it takes for the animation to complete. Default is `1`\n\n@*param* `easing` — The easing style of the animation, default is `\"linear\"`\n\n@*param* `repeat_amount` — The amount of times the animation will repeat itself, default is `nil`\n\n@*param* `reverse` — Will the animation reverse itself, default is `false`\n\n@*param* `delay` — The delay until the animation will start, in seconds. Default is `0`\n\n```lua\neasing:\n    | \"linear\"\n    | \"ease_in\"\n    | \"ease_out\"\n    | \"ease_in_out\"\n    | \"ease_in_quad\"\n    | \"ease_out_quad\"\n    | \"ease_in_out_quad\"\n    | \"ease_in_cubic\"\n    | \"ease_out_cubic\"\n    | \"ease_in_out_cubic\"\n    | \"ease_in_quart\"\n    | \"ease_out_quart\"\n    | \"ease_in_out_quart\"\n    | \"ease_in_quint\"\n    | \"ease_out_quint\"\n    | \"ease_in_out_quint\"\n    | \"ease_in_expo\"\n    | \"ease_out_expo\"\n    | \"ease_in_out_expo\"\n    | \"ease_in_circ\"\n    | \"ease_out_circ\"\n    | \"ease_in_out_circ\"\n    | \"ease_in_back\"\n    | \"ease_out_back\"\n    | \"ease_in_out_back\"\n    | \"ease_in_elastic\"\n    | \"ease_out_elastic\"\n    | \"ease_in_out_elastic\"\n    | \"ease_in_bounce\"\n    | \"ease_out_bounce\"\n    | \"ease_in_out_bounce\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                45,
                                8
                            ],
                            "name": "self",
                            "start": [
                                45,
                                8
                            ],
                            "type": "self",
                            "view": "Animations"
                        },
                        {
                            "desc": "The state of the animation, default is `false`",
                            "finish": [
                                45,
                                38
                            ],
                            "name": "starting_value",
                            "rawdesc": "The state of the animation, default is `false`",
                            "start": [
                                45,
                                24
                            ],
                            "type": "local",
                            "view": "boolean|nil"
                        },
                        {
                            "desc": "The amount of seconds it takes for the animation to complete. Default is `1`",
                            "finish": [
                                45,
                                44
                            ],
                            "name": "time",
                            "rawdesc": "The amount of seconds it takes for the animation to complete. Default is `1`",
                            "start": [
                                45,
                                40
                            ],
                            "type": "local",
                            "view": "number|nil"
                        },
                        {
                            "desc": "The easing style of the animation, default is `\"linear\"`",
                            "finish": [
                                45,
                                52
                            ],
                            "name": "easing",
                            "rawdesc": "The easing style of the animation, default is `\"linear\"`",
                            "start": [
                                45,
                                46
                            ],
                            "type": "local",
                            "view": "\"ease_in\"|\"ease_in_back\"|\"ease_in_bounce\"|\"ease_in_circ\"|\"ease_in_cubic\"...(+27)"
                        },
                        {
                            "desc": "The amount of times the animation will repeat itself, default is `nil`",
                            "finish": [
                                45,
                                67
                            ],
                            "name": "repeat_amount",
                            "rawdesc": "The amount of times the animation will repeat itself, default is `nil`",
                            "start": [
                                45,
                                54
                            ],
                            "type": "local",
                            "view": "number|nil"
                        },
                        {
                            "desc": "Will the animation reverse itself, default is `false`",
                            "finish": [
                                45,
                                76
                            ],
                            "name": "reverse",
                            "rawdesc": "Will the animation reverse itself, default is `false`",
                            "start": [
                                45,
                                69
                            ],
                            "type": "local",
                            "view": "boolean|nil"
                        },
                        {
                            "desc": "The delay until the animation will start, in seconds. Default is `0`",
                            "finish": [
                                45,
                                83
                            ],
                            "name": "delay",
                            "rawdesc": "The delay until the animation will start, in seconds. Default is `0`",
                            "start": [
                                45,
                                78
                            ],
                            "type": "local",
                            "view": "number|nil"
                        }
                    ],
                    "desc": "Makes a new animation based on the provided settings\n\n@*param* `starting_value` — The state of the animation, default is `false`\n\n@*param* `time` — The amount of seconds it takes for the animation to complete. Default is `1`\n\n@*param* `easing` — The easing style of the animation, default is `\"linear\"`\n\n@*param* `repeat_amount` — The amount of times the animation will repeat itself, default is `nil`\n\n@*param* `reverse` — Will the animation reverse itself, default is `false`\n\n@*param* `delay` — The delay until the animation will start, in seconds. Default is `0`\n\n```lua\neasing:\n    | \"linear\"\n    | \"ease_in\"\n    | \"ease_out\"\n    | \"ease_in_out\"\n    | \"ease_in_quad\"\n    | \"ease_out_quad\"\n    | \"ease_in_out_quad\"\n    | \"ease_in_cubic\"\n    | \"ease_out_cubic\"\n    | \"ease_in_out_cubic\"\n    | \"ease_in_quart\"\n    | \"ease_out_quart\"\n    | \"ease_in_out_quart\"\n    | \"ease_in_quint\"\n    | \"ease_out_quint\"\n    | \"ease_in_out_quint\"\n    | \"ease_in_expo\"\n    | \"ease_out_expo\"\n    | \"ease_in_out_expo\"\n    | \"ease_in_circ\"\n    | \"ease_out_circ\"\n    | \"ease_in_out_circ\"\n    | \"ease_in_back\"\n    | \"ease_out_back\"\n    | \"ease_in_out_back\"\n    | \"ease_in_elastic\"\n    | \"ease_out_elastic\"\n    | \"ease_in_out_elastic\"\n    | \"ease_in_bounce\"\n    | \"ease_out_bounce\"\n    | \"ease_in_out_bounce\"\n```",
                    "finish": [
                        72,
                        3
                    ],
                    "rawdesc": "Makes a new animation based on the provided settings\n\n```lua\neasing:\n    | \"linear\"\n    | \"ease_in\"\n    | \"ease_out\"\n    | \"ease_in_out\"\n    | \"ease_in_quad\"\n    | \"ease_out_quad\"\n    | \"ease_in_out_quad\"\n    | \"ease_in_cubic\"\n    | \"ease_out_cubic\"\n    | \"ease_in_out_cubic\"\n    | \"ease_in_quart\"\n    | \"ease_out_quart\"\n    | \"ease_in_out_quart\"\n    | \"ease_in_quint\"\n    | \"ease_out_quint\"\n    | \"ease_in_out_quint\"\n    | \"ease_in_expo\"\n    | \"ease_out_expo\"\n    | \"ease_in_out_expo\"\n    | \"ease_in_circ\"\n    | \"ease_out_circ\"\n    | \"ease_in_out_circ\"\n    | \"ease_in_back\"\n    | \"ease_out_back\"\n    | \"ease_in_out_back\"\n    | \"ease_in_elastic\"\n    | \"ease_out_elastic\"\n    | \"ease_in_out_elastic\"\n    | \"ease_in_bounce\"\n    | \"ease_out_bounce\"\n    | \"ease_in_out_bounce\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Animation"
                        }
                    ],
                    "start": [
                        45,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Animations:new(starting_value: boolean|nil, time: number|nil, easing: \"ease_in\"|\"ease_in_back\"|\"ease_in_bounce\"|\"ease_in_circ\"|\"ease_in_cubic\"...(+27), repeat_amount: number|nil, reverse: boolean|nil, delay: number|nil)\n  -> Animation"
                },
                "file": "animations/init.lua",
                "finish": [
                    45,
                    23
                ],
                "name": "new",
                "rawdesc": "Makes a new animation based on the provided settings\n\n```lua\neasing:\n    | \"linear\"\n    | \"ease_in\"\n    | \"ease_out\"\n    | \"ease_in_out\"\n    | \"ease_in_quad\"\n    | \"ease_out_quad\"\n    | \"ease_in_out_quad\"\n    | \"ease_in_cubic\"\n    | \"ease_out_cubic\"\n    | \"ease_in_out_cubic\"\n    | \"ease_in_quart\"\n    | \"ease_out_quart\"\n    | \"ease_in_out_quart\"\n    | \"ease_in_quint\"\n    | \"ease_out_quint\"\n    | \"ease_in_out_quint\"\n    | \"ease_in_expo\"\n    | \"ease_out_expo\"\n    | \"ease_in_out_expo\"\n    | \"ease_in_circ\"\n    | \"ease_out_circ\"\n    | \"ease_in_out_circ\"\n    | \"ease_in_back\"\n    | \"ease_out_back\"\n    | \"ease_in_out_back\"\n    | \"ease_in_elastic\"\n    | \"ease_out_elastic\"\n    | \"ease_in_out_elastic\"\n    | \"ease_in_bounce\"\n    | \"ease_out_bounce\"\n    | \"ease_in_out_bounce\"\n```",
                "start": [
                    45,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Animations",
        "type": "type",
        "view": "Animations"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    97,
                    26
                ],
                "start": [
                    97,
                    18
                ],
                "type": "doc.class",
                "view": "AppModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The description of the app, if it has one",
                "extends": {
                    "finish": [
                        103,
                        28
                    ],
                    "start": [
                        103,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                103,
                                28
                            ],
                            "start": [
                                103,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    103,
                    28
                ],
                "name": "description",
                "rawdesc": "The description of the app, if it has one",
                "start": [
                    103,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The .desktop file path",
                "extends": {
                    "finish": [
                        102,
                        24
                    ],
                    "start": [
                        102,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                102,
                                24
                            ],
                            "start": [
                                102,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    102,
                    24
                ],
                "name": "desktop",
                "rawdesc": "The .desktop file path",
                "start": [
                    102,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The apps executable binary path",
                "extends": {
                    "finish": [
                        99,
                        27
                    ],
                    "start": [
                        99,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                99,
                                27
                            ],
                            "start": [
                                99,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    99,
                    27
                ],
                "name": "executable",
                "rawdesc": "The apps executable binary path",
                "start": [
                    99,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The icon name of the app",
                "extends": {
                    "finish": [
                        100,
                        21
                    ],
                    "start": [
                        100,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                100,
                                21
                            ],
                            "start": [
                                100,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    100,
                    21
                ],
                "name": "icon",
                "rawdesc": "The icon name of the app",
                "start": [
                    100,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The id of the app. The id is oobtained by the desktop file name",
                "extends": {
                    "finish": [
                        101,
                        19
                    ],
                    "start": [
                        101,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                101,
                                19
                            ],
                            "start": [
                                101,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    101,
                    19
                ],
                "name": "id",
                "rawdesc": "The id of the app. The id is oobtained by the desktop file name",
                "start": [
                    101,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The name of the app",
                "extends": {
                    "finish": [
                        98,
                        21
                    ],
                    "start": [
                        98,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                98,
                                21
                            ],
                            "start": [
                                98,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    98,
                    21
                ],
                "name": "name",
                "rawdesc": "The name of the app",
                "start": [
                    98,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "AppModel",
        "type": "type",
        "view": "AppModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    94,
                    29
                ],
                "start": [
                    94,
                    10
                ],
                "type": "doc.class",
                "view": "ApplicationsService",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Gets all applications within .desktop",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                107,
                                8
                            ],
                            "name": "self",
                            "start": [
                                107,
                                8
                            ],
                            "type": "self",
                            "view": "ApplicationsService"
                        }
                    ],
                    "desc": "Gets all applications within .desktop",
                    "finish": [
                        107,
                        49
                    ],
                    "rawdesc": "Gets all applications within .desktop",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "AppModel[]"
                        }
                    ],
                    "start": [
                        107,
                        0
                    ],
                    "type": "function",
                    "view": "(method) ApplicationsService:get_all_apps()\n  -> AppModel[]"
                },
                "file": "services/init.lua",
                "finish": [
                    107,
                    43
                ],
                "name": "get_all_apps",
                "rawdesc": "Gets all applications within .desktop",
                "start": [
                    107,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Launches an application, using the executable path",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                111,
                                8
                            ],
                            "name": "self",
                            "start": [
                                111,
                                8
                            ],
                            "type": "self",
                            "view": "ApplicationsService"
                        },
                        {
                            "finish": [
                                111,
                                57
                            ],
                            "name": "executable_path",
                            "start": [
                                111,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Launches an application, using the executable path",
                    "finish": [
                        111,
                        62
                    ],
                    "rawdesc": "Launches an application, using the executable path",
                    "start": [
                        111,
                        0
                    ],
                    "type": "function",
                    "view": "(method) ApplicationsService:launch_app(executable_path: string)"
                },
                "file": "services/init.lua",
                "finish": [
                    111,
                    41
                ],
                "name": "launch_app",
                "rawdesc": "Launches an application, using the executable path",
                "start": [
                    111,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ApplicationsService",
        "type": "type",
        "view": "ApplicationsService"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "init.lua",
                "finish": [
                    2,
                    16
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "Astrum",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Makes an astrum application that is to be returned",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                29,
                                8
                            ],
                            "name": "self",
                            "start": [
                                29,
                                8
                            ],
                            "type": "self",
                            "view": "Astrum"
                        }
                    ],
                    "desc": "Makes an astrum application that is to be returned",
                    "finish": [
                        39,
                        3
                    ],
                    "rawdesc": "Makes an astrum application that is to be returned",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "AstrumApp"
                        }
                    ],
                    "start": [
                        29,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Astrum:application()\n  -> AstrumApp"
                },
                "file": "init.lua",
                "finish": [
                    29,
                    27
                ],
                "name": "application",
                "rawdesc": "Makes an astrum application that is to be returned",
                "start": [
                    29,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Astrum",
        "type": "type",
        "view": "Astrum"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "init.lua",
                "finish": [
                    30,
                    20
                ],
                "start": [
                    30,
                    11
                ],
                "type": "doc.class",
                "view": "AstrumApp",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Creates a toplevel surface, that holds and processes signals and widgets\n\n@*param* `window_name` — The unique name of the window\n\n@*param* `window_model` — The model of the window",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                36,
                                9
                            ],
                            "name": "self",
                            "start": [
                                36,
                                9
                            ],
                            "type": "self",
                            "view": "AstrumApp"
                        },
                        {
                            "desc": "The unique name of the window",
                            "finish": [
                                36,
                                32
                            ],
                            "name": "window_name",
                            "rawdesc": "The unique name of the window",
                            "start": [
                                36,
                                21
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "The model of the window",
                            "finish": [
                                36,
                                46
                            ],
                            "name": "window_model",
                            "rawdesc": "The model of the window",
                            "start": [
                                36,
                                34
                            ],
                            "type": "local",
                            "view": "WindowModel"
                        }
                    ],
                    "desc": "Creates a toplevel surface, that holds and processes signals and widgets\n\n@*param* `window_name` — The unique name of the window\n\n@*param* `window_model` — The model of the window",
                    "finish": [
                        36,
                        51
                    ],
                    "rawdesc": "Creates a toplevel surface, that holds and processes signals and widgets",
                    "start": [
                        36,
                        1
                    ],
                    "type": "function",
                    "view": "(method) AstrumApp:window(window_name: string, window_model: WindowModel)"
                },
                "file": "init.lua",
                "finish": [
                    36,
                    20
                ],
                "name": "window",
                "rawdesc": "Creates a toplevel surface, that holds and processes signals and widgets",
                "start": [
                    36,
                    10
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AstrumApp",
        "type": "type",
        "view": "AstrumApp"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            12,
                            40
                        ],
                        "start": [
                            12,
                            23
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    12,
                    40
                ],
                "start": [
                    12,
                    10
                ],
                "type": "doc.class",
                "view": "ButtonModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "A widget that will be displayed within the button",
                "extends": {
                    "finish": [
                        13,
                        23
                    ],
                    "start": [
                        13,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                13,
                                23
                            ],
                            "start": [
                                13,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "Widget"
                        }
                    ],
                    "view": "Widget?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    13,
                    23
                ],
                "name": "child",
                "rawdesc": "A widget that will be displayed within the button",
                "start": [
                    13,
                    10
                ],
                "type": "doc.field",
                "view": "Widget?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the button is pressed. If a string is provided, it will send no data",
                "extends": {
                    "finish": [
                        15,
                        41
                    ],
                    "start": [
                        15,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                15,
                                32
                            ],
                            "start": [
                                15,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "CustomSignal"
                        },
                        {
                            "finish": [
                                15,
                                41
                            ],
                            "start": [
                                15,
                                35
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "(string|CustomSignal)?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    15,
                    41
                ],
                "name": "on_press",
                "rawdesc": "Sends a signal whenever the button is pressed. If a string is provided, it will send no data",
                "start": [
                    15,
                    10
                ],
                "type": "doc.field",
                "view": "(string|CustomSignal)?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        14,
                        26
                    ],
                    "start": [
                        14,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                14,
                                26
                            ],
                            "start": [
                                14,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number|[number, number, number, number]|[number, number]"
                        }
                    ],
                    "view": "(number|[number, number, number, number]|[number, number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    14,
                    26
                ],
                "name": "padding",
                "start": [
                    14,
                    10
                ],
                "type": "doc.field",
                "view": "(number|[number, number, number, number]|[number, number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "ButtonModel",
        "type": "type",
        "view": "ButtonModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            47,
                            43
                        ],
                        "start": [
                            47,
                            26
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    47,
                    43
                ],
                "start": [
                    47,
                    10
                ],
                "type": "doc.class",
                "view": "CenterboxModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        53,
                        32
                    ],
                    "start": [
                        53,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                53,
                                32
                            ],
                            "start": [
                                53,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "\"center\"|\"end\"|\"start\""
                        }
                    ],
                    "view": "(\"center\"|\"end\"|\"start\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    53,
                    32
                ],
                "name": "align_items",
                "start": [
                    53,
                    10
                ],
                "type": "doc.field",
                "view": "(\"center\"|\"end\"|\"start\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Element to be displayed on the left side of the centerbox",
                "extends": {
                    "finish": [
                        48,
                        28
                    ],
                    "start": [
                        48,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                48,
                                28
                            ],
                            "start": [
                                48,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "Widget"
                        }
                    ],
                    "view": "Widget?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    48,
                    28
                ],
                "name": "left_child",
                "rawdesc": "Element to be displayed on the left side of the centerbox",
                "start": [
                    48,
                    10
                ],
                "type": "doc.field",
                "view": "Widget?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Element to be displayed in the middle of the centerbox",
                "extends": {
                    "finish": [
                        49,
                        30
                    ],
                    "start": [
                        49,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                49,
                                30
                            ],
                            "start": [
                                49,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "Widget"
                        }
                    ],
                    "view": "Widget?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    49,
                    30
                ],
                "name": "middle_child",
                "rawdesc": "Element to be displayed in the middle of the centerbox",
                "start": [
                    49,
                    10
                ],
                "type": "doc.field",
                "view": "Widget?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        51,
                        26
                    ],
                    "start": [
                        51,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                51,
                                26
                            ],
                            "start": [
                                51,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number|[number, number, number, number]|[number, number]"
                        }
                    ],
                    "view": "(number|[number, number, number, number]|[number, number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    51,
                    26
                ],
                "name": "padding",
                "start": [
                    51,
                    10
                ],
                "type": "doc.field",
                "view": "(number|[number, number, number, number]|[number, number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Element to be displayed on the right side of the centerbox",
                "extends": {
                    "finish": [
                        50,
                        29
                    ],
                    "start": [
                        50,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                50,
                                29
                            ],
                            "start": [
                                50,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "Widget"
                        }
                    ],
                    "view": "Widget?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    50,
                    29
                ],
                "name": "right_child",
                "rawdesc": "Element to be displayed on the right side of the centerbox",
                "start": [
                    50,
                    10
                ],
                "type": "doc.field",
                "view": "Widget?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The spacing of elements in pixels",
                "extends": {
                    "finish": [
                        52,
                        25
                    ],
                    "start": [
                        52,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                52,
                                25
                            ],
                            "start": [
                                52,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    52,
                    25
                ],
                "name": "spacing",
                "rawdesc": "The spacing of elements in pixels",
                "start": [
                    52,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "CenterboxModel",
        "type": "type",
        "view": "CenterboxModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            39,
                            40
                        ],
                        "start": [
                            39,
                            23
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    39,
                    40
                ],
                "start": [
                    39,
                    10
                ],
                "type": "doc.class",
                "view": "ColumnModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the vertical alignments of the contents of the `column`",
                "extends": {
                    "finish": [
                        43,
                        29
                    ],
                    "start": [
                        43,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                43,
                                29
                            ],
                            "start": [
                                43,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "\"center\"|\"left\"|\"right\""
                        }
                    ],
                    "view": "(\"center\"|\"left\"|\"right\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    43,
                    29
                ],
                "name": "align_x",
                "rawdesc": "Sets the vertical alignments of the contents of the `column`",
                "start": [
                    43,
                    10
                ],
                "type": "doc.field",
                "view": "(\"center\"|\"left\"|\"right\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "List of widgets to be rendered within the `column`",
                "extends": {
                    "finish": [
                        40,
                        28
                    ],
                    "start": [
                        40,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                40,
                                28
                            ],
                            "start": [
                                40,
                                20
                            ],
                            "type": "doc.type.array",
                            "view": "Widget[]"
                        }
                    ],
                    "view": "Widget[]?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    40,
                    28
                ],
                "name": "children",
                "rawdesc": "List of widgets to be rendered within the `column`",
                "start": [
                    40,
                    10
                ],
                "type": "doc.field",
                "view": "Widget[]?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets whether the contents of the `column` should be clipped on overflow",
                "extends": {
                    "finish": [
                        44,
                        23
                    ],
                    "start": [
                        44,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                44,
                                23
                            ],
                            "start": [
                                44,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    44,
                    23
                ],
                "name": "clip",
                "rawdesc": "Sets whether the contents of the `column` should be clipped on overflow",
                "start": [
                    44,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Maximum width of the `column` in pixels",
                "extends": {
                    "finish": [
                        45,
                        27
                    ],
                    "start": [
                        45,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                45,
                                27
                            ],
                            "start": [
                                45,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    45,
                    27
                ],
                "name": "max_width",
                "rawdesc": "Maximum width of the `column` in pixels",
                "start": [
                    45,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        42,
                        26
                    ],
                    "start": [
                        42,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                26
                            ],
                            "start": [
                                42,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number|[number, number, number, number]|[number, number]"
                        }
                    ],
                    "view": "(number|[number, number, number, number]|[number, number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    42,
                    26
                ],
                "name": "padding",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "(number|[number, number, number, number]|[number, number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The spacing between elements in pixels",
                "extends": {
                    "finish": [
                        41,
                        25
                    ],
                    "start": [
                        41,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                41,
                                25
                            ],
                            "start": [
                                41,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    41,
                    25
                ],
                "name": "spacing",
                "rawdesc": "The spacing between elements in pixels",
                "start": [
                    41,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "ColumnModel",
        "type": "type",
        "view": "ColumnModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            69,
                            43
                        ],
                        "start": [
                            69,
                            26
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    69,
                    43
                ],
                "start": [
                    69,
                    10
                ],
                "type": "doc.class",
                "view": "ContainerModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the alignment of content on the horizontal axis",
                "extends": {
                    "finish": [
                        76,
                        29
                    ],
                    "start": [
                        76,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                76,
                                29
                            ],
                            "start": [
                                76,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "\"center\"|\"left\"|\"right\""
                        }
                    ],
                    "view": "(\"center\"|\"left\"|\"right\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    76,
                    29
                ],
                "name": "align_x",
                "rawdesc": "Sets the alignment of content on the horizontal axis",
                "start": [
                    76,
                    10
                ],
                "type": "doc.field",
                "view": "(\"center\"|\"left\"|\"right\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the alignment of content on the vertical axis",
                "extends": {
                    "finish": [
                        77,
                        27
                    ],
                    "start": [
                        77,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                77,
                                27
                            ],
                            "start": [
                                77,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "\"bottom\"|\"center\"|\"top\""
                        }
                    ],
                    "view": "(\"bottom\"|\"center\"|\"top\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    77,
                    27
                ],
                "name": "align_y",
                "rawdesc": "Sets the alignment of content on the vertical axis",
                "start": [
                    77,
                    10
                ],
                "type": "doc.field",
                "view": "(\"bottom\"|\"center\"|\"top\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the `container` and centers the content horizontally",
                "extends": {
                    "finish": [
                        70,
                        26
                    ],
                    "start": [
                        70,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                70,
                                26
                            ],
                            "start": [
                                70,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    70,
                    26
                ],
                "name": "center_x",
                "rawdesc": "Sets the width of the `container` and centers the content horizontally",
                "start": [
                    70,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the `container` and centers the content vertically",
                "extends": {
                    "finish": [
                        71,
                        26
                    ],
                    "start": [
                        71,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                71,
                                26
                            ],
                            "start": [
                                71,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    71,
                    26
                ],
                "name": "center_y",
                "rawdesc": "Sets the height of the `container` and centers the content vertically",
                "start": [
                    71,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Element to be displayed within the `container`",
                "extends": {
                    "finish": [
                        72,
                        23
                    ],
                    "start": [
                        72,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                72,
                                23
                            ],
                            "start": [
                                72,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "Widget"
                        }
                    ],
                    "view": "Widget?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    72,
                    23
                ],
                "name": "child",
                "rawdesc": "Element to be displayed within the `container`",
                "start": [
                    72,
                    10
                ],
                "type": "doc.field",
                "view": "Widget?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Maximum height of the `container` in pixels",
                "extends": {
                    "finish": [
                        75,
                        28
                    ],
                    "start": [
                        75,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                75,
                                28
                            ],
                            "start": [
                                75,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    75,
                    28
                ],
                "name": "max_height",
                "rawdesc": "Maximum height of the `container` in pixels",
                "start": [
                    75,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Maximum width of the `container` in pixels",
                "extends": {
                    "finish": [
                        74,
                        27
                    ],
                    "start": [
                        74,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                74,
                                27
                            ],
                            "start": [
                                74,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    74,
                    27
                ],
                "name": "max_width",
                "rawdesc": "Maximum width of the `container` in pixels",
                "start": [
                    74,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        73,
                        26
                    ],
                    "start": [
                        73,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                73,
                                26
                            ],
                            "start": [
                                73,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number|[number, number, number, number]|[number, number]"
                        }
                    ],
                    "view": "(number|[number, number, number, number]|[number, number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    73,
                    26
                ],
                "name": "padding",
                "start": [
                    73,
                    10
                ],
                "type": "doc.field",
                "view": "(number|[number, number, number, number]|[number, number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "ContainerModel",
        "type": "type",
        "view": "ContainerModel"
    },
    {
        "defines": [
            {
                "desc": "```lua\nContentFit:\n    | \"contain\" -- Scale as big as it can be without needing to crop or hide parts. Doesnt distort the image, but there may be whitespaces\n    | \"cover\" -- Scale the image to cover all of the bounding box, cropping off if needed. Doesnt distort the image, but it might crop off certain edges\n    | \"fill\" -- Distort the image so that the widget is 100% covered without cropping\n    | \"none\" -- Dont resize or scale the image at all\n    | \"scale_down\" -- Scale the image down, if its too big for the space, but never scale it up\n```",
                "finish": [
                    61,
                    19
                ],
                "rawdesc": "```lua\nContentFit:\n    | \"contain\" -- Scale as big as it can be without needing to crop or hide parts. Doesnt distort the image, but there may be whitespaces\n    | \"cover\" -- Scale the image to cover all of the bounding box, cropping off if needed. Doesnt distort the image, but it might crop off certain edges\n    | \"fill\" -- Distort the image so that the widget is 100% covered without cropping\n    | \"none\" -- Dont resize or scale the image at all\n    | \"scale_down\" -- Scale the image down, if its too big for the space, but never scale it up\n```",
                "start": [
                    56,
                    10
                ],
                "type": "doc.alias",
                "view": "\"contain\"|\"cover\"|\"fill\"|\"none\"|\"scale_down\""
            }
        ],
        "fields": [],
        "name": "ContentFit",
        "type": "type",
        "view": "ContentFit"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "widgets/models.lua",
                "finish": [
                    28,
                    22
                ],
                "start": [
                    28,
                    10
                ],
                "type": "doc.class",
                "view": "CustomSignal",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        30,
                        27
                    ],
                    "start": [
                        30,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                30,
                                27
                            ],
                            "start": [
                                30,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        }
                    ],
                    "view": "table"
                },
                "file": "widgets/models.lua",
                "finish": [
                    30,
                    27
                ],
                "name": "signal_data",
                "start": [
                    30,
                    10
                ],
                "type": "doc.field",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        29,
                        28
                    ],
                    "start": [
                        29,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                29,
                                28
                            ],
                            "start": [
                                29,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "widgets/models.lua",
                "finish": [
                    29,
                    28
                ],
                "name": "signal_name",
                "start": [
                    29,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "CustomSignal",
        "type": "type",
        "view": "CustomSignal"
    },
    {
        "defines": [
            {
                "desc": "```lua\nEasingStyle:\n    | \"linear\"\n    | \"ease_in\"\n    | \"ease_out\"\n    | \"ease_in_out\"\n    | \"ease_in_quad\"\n    | \"ease_out_quad\"\n    | \"ease_in_out_quad\"\n    | \"ease_in_cubic\"\n    | \"ease_out_cubic\"\n    | \"ease_in_out_cubic\"\n    | \"ease_in_quart\"\n    | \"ease_out_quart\"\n    | \"ease_in_out_quart\"\n    | \"ease_in_quint\"\n    | \"ease_out_quint\"\n    | \"ease_in_out_quint\"\n    | \"ease_in_expo\"\n    | \"ease_out_expo\"\n    | \"ease_in_out_expo\"\n    | \"ease_in_circ\"\n    | \"ease_out_circ\"\n    | \"ease_in_out_circ\"\n    | \"ease_in_back\"\n    | \"ease_out_back\"\n    | \"ease_in_out_back\"\n    | \"ease_in_elastic\"\n    | \"ease_out_elastic\"\n    | \"ease_in_out_elastic\"\n    | \"ease_in_bounce\"\n    | \"ease_out_bounce\"\n    | \"ease_in_out_bounce\"\n```",
                "finish": [
                    36,
                    27
                ],
                "rawdesc": "```lua\nEasingStyle:\n    | \"linear\"\n    | \"ease_in\"\n    | \"ease_out\"\n    | \"ease_in_out\"\n    | \"ease_in_quad\"\n    | \"ease_out_quad\"\n    | \"ease_in_out_quad\"\n    | \"ease_in_cubic\"\n    | \"ease_out_cubic\"\n    | \"ease_in_out_cubic\"\n    | \"ease_in_quart\"\n    | \"ease_out_quart\"\n    | \"ease_in_out_quart\"\n    | \"ease_in_quint\"\n    | \"ease_out_quint\"\n    | \"ease_in_out_quint\"\n    | \"ease_in_expo\"\n    | \"ease_out_expo\"\n    | \"ease_in_out_expo\"\n    | \"ease_in_circ\"\n    | \"ease_out_circ\"\n    | \"ease_in_out_circ\"\n    | \"ease_in_back\"\n    | \"ease_out_back\"\n    | \"ease_in_out_back\"\n    | \"ease_in_elastic\"\n    | \"ease_out_elastic\"\n    | \"ease_in_out_elastic\"\n    | \"ease_in_bounce\"\n    | \"ease_out_bounce\"\n    | \"ease_in_out_bounce\"\n```",
                "start": [
                    5,
                    10
                ],
                "type": "doc.alias",
                "view": "\"ease_in\"|\"ease_in_back\"|\"ease_in_bounce\"|\"ease_in_circ\"|\"ease_in_cubic\"...(+26)"
            }
        ],
        "fields": [],
        "name": "EasingStyle",
        "type": "type",
        "view": "EasingStyle"
    },
    {
        "defines": [
            {
                "desc": "```lua\nFilterMethod:\n    | \"linear\" -- Bilinear interpolation\n    | \"nearest\" -- Nearest neighbor\n```",
                "finish": [
                    65,
                    16
                ],
                "rawdesc": "```lua\nFilterMethod:\n    | \"linear\" -- Bilinear interpolation\n    | \"nearest\" -- Nearest neighbor\n```",
                "start": [
                    63,
                    10
                ],
                "type": "doc.alias",
                "view": "\"linear\"|\"nearest\""
            }
        ],
        "fields": [],
        "name": "FilterMethod",
        "type": "type",
        "view": "FilterMethod"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "widgets/misc.lua",
                "finish": [
                    20,
                    14
                ],
                "start": [
                    20,
                    10
                ],
                "type": "doc.class",
                "view": "Font",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The font's name",
                "extends": {
                    "finish": [
                        21,
                        21
                    ],
                    "start": [
                        21,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                21
                            ],
                            "start": [
                                21,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "widgets/misc.lua",
                "finish": [
                    21,
                    21
                ],
                "name": "name",
                "rawdesc": "The font's name",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The style of the font",
                "extends": {
                    "finish": [
                        23,
                        26
                    ],
                    "start": [
                        23,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                26
                            ],
                            "start": [
                                23,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"italic\"|\"normal\"|\"oblique\""
                        }
                    ],
                    "view": "(\"italic\"|\"normal\"|\"oblique\")?"
                },
                "file": "widgets/misc.lua",
                "finish": [
                    23,
                    26
                ],
                "name": "style",
                "rawdesc": "The style of the font",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "(\"italic\"|\"normal\"|\"oblique\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The font's weight",
                "extends": {
                    "finish": [
                        22,
                        28
                    ],
                    "start": [
                        22,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                22,
                                28
                            ],
                            "start": [
                                22,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"black\"|\"bold\"|\"extrabold\"|\"extralight\"|\"light\"...(+4)"
                        }
                    ],
                    "view": "(\"black\"|\"bold\"|\"extrabold\"|\"extralight\"|\"light\"...(+4))?"
                },
                "file": "widgets/misc.lua",
                "finish": [
                    22,
                    28
                ],
                "name": "weight",
                "rawdesc": "The font's weight",
                "start": [
                    22,
                    10
                ],
                "type": "doc.field",
                "view": "(\"black\"|\"bold\"|\"extrabold\"|\"extralight\"|\"light\"...(+4))?",
                "visible": "public"
            }
        ],
        "name": "Font",
        "type": "type",
        "view": "Font"
    },
    {
        "defines": [
            {
                "desc": "```lua\nFontStyle:\n    | \"normal\"\n    | \"italic\"\n    | \"oblique\"\n```",
                "finish": [
                    18,
                    16
                ],
                "rawdesc": "```lua\nFontStyle:\n    | \"normal\"\n    | \"italic\"\n    | \"oblique\"\n```",
                "start": [
                    15,
                    10
                ],
                "type": "doc.alias",
                "view": "\"italic\"|\"normal\"|\"oblique\""
            }
        ],
        "fields": [],
        "name": "FontStyle",
        "type": "type",
        "view": "FontStyle"
    },
    {
        "defines": [
            {
                "desc": "```lua\nFontWeight:\n    | \"thin\"\n    | \"extralight\"\n    | \"light\"\n    | \"normal\"\n    | \"medium\"\n    | \"semibold\"\n    | \"bold\"\n    | \"extrabold\"\n    | \"black\"\n```",
                "finish": [
                    13,
                    14
                ],
                "rawdesc": "```lua\nFontWeight:\n    | \"thin\"\n    | \"extralight\"\n    | \"light\"\n    | \"normal\"\n    | \"medium\"\n    | \"semibold\"\n    | \"bold\"\n    | \"extrabold\"\n    | \"black\"\n```",
                "start": [
                    4,
                    10
                ],
                "type": "doc.alias",
                "view": "\"black\"|\"bold\"|\"extrabold\"|\"extralight\"|\"light\"...(+4)"
            }
        ],
        "fields": [],
        "name": "FontWeight",
        "type": "type",
        "view": "FontWeight"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    113,
                    16
                ],
                "start": [
                    113,
                    10
                ],
                "type": "doc.class",
                "view": "Greetd",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Attempts to login via greetd\n\n@*param* `username` — The username to log in with\n\n@*param* `attempt` — The password you need to loog in with\n\n@*param* `command` — The command to run if login was successfull\n\n```lua\nreturn #1:\n    | \"login_success\"\n    | \"login_failure\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                121,
                                8
                            ],
                            "name": "self",
                            "start": [
                                121,
                                8
                            ],
                            "type": "self",
                            "view": "Greetd"
                        },
                        {
                            "desc": "The username to log in with",
                            "finish": [
                                121,
                                39
                            ],
                            "name": "username",
                            "rawdesc": "The username to log in with",
                            "start": [
                                121,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "The password you need to loog in with",
                            "finish": [
                                121,
                                48
                            ],
                            "name": "attempt",
                            "rawdesc": "The password you need to loog in with",
                            "start": [
                                121,
                                41
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "The command to run if login was successfull",
                            "finish": [
                                121,
                                57
                            ],
                            "name": "command",
                            "rawdesc": "The command to run if login was successfull",
                            "start": [
                                121,
                                50
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Attempts to login via greetd\n\n@*param* `username` — The username to log in with\n\n@*param* `attempt` — The password you need to loog in with\n\n@*param* `command` — The command to run if login was successfull\n\n```lua\nreturn #1:\n    | \"login_success\"\n    | \"login_failure\"\n```",
                    "finish": [
                        121,
                        62
                    ],
                    "rawdesc": "Attempts to login via greetd\n\n```lua\nreturn #1:\n    | \"login_success\"\n    | \"login_failure\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"login_failure\"|\"login_success\""
                        }
                    ],
                    "start": [
                        121,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Greetd:login(username: string, attempt: string, command: string)\n  -> \"login_failure\"|\"login_success\""
                },
                "file": "services/init.lua",
                "finish": [
                    121,
                    30
                ],
                "name": "login",
                "rawdesc": "Attempts to login via greetd\n\n```lua\nreturn #1:\n    | \"login_success\"\n    | \"login_failure\"\n```",
                "start": [
                    121,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Greetd",
        "type": "type",
        "view": "Greetd"
    },
    {
        "defines": [
            {
                "desc": "```lua\nHorizontal:\n    | \"left\"\n    | \"center\"\n    | \"right\"\n```",
                "finish": [
                    42,
                    14
                ],
                "rawdesc": "```lua\nHorizontal:\n    | \"left\"\n    | \"center\"\n    | \"right\"\n```",
                "start": [
                    39,
                    11
                ],
                "type": "doc.alias",
                "view": "\"center\"|\"left\"|\"right\""
            }
        ],
        "fields": [],
        "name": "Horizontal",
        "type": "type",
        "view": "Horizontal"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    12,
                    32
                ],
                "start": [
                    12,
                    18
                ],
                "type": "doc.class",
                "view": "HyprlandClient",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The x and y position where the client is on",
                "extends": {
                    "finish": [
                        14,
                        37
                    ],
                    "start": [
                        14,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        14,
                                        24
                                    ],
                                    "name": {
                                        "[1]": "x",
                                        "finish": [
                                            14,
                                            16
                                        ],
                                        "start": [
                                            14,
                                            15
                                        ],
                                        "type": "doc.field.name",
                                        "view": "x"
                                    },
                                    "start": [
                                        14,
                                        15
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        14,
                                        35
                                    ],
                                    "name": {
                                        "[1]": "y",
                                        "finish": [
                                            14,
                                            27
                                        ],
                                        "start": [
                                            14,
                                            26
                                        ],
                                        "type": "doc.field.name",
                                        "view": "y"
                                    },
                                    "start": [
                                        14,
                                        26
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                14,
                                37
                            ],
                            "start": [
                                14,
                                13
                            ],
                            "type": "doc.type.table",
                            "view": "{ x: number, y: number }"
                        }
                    ],
                    "view": "{ x: number, y: number }"
                },
                "file": "services/init.lua",
                "finish": [
                    14,
                    37
                ],
                "name": "at",
                "rawdesc": "The x and y position where the client is on",
                "start": [
                    14,
                    10
                ],
                "type": "doc.field",
                "view": "{ x: number, y: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The class name of the client",
                "extends": {
                    "finish": [
                        18,
                        22
                    ],
                    "start": [
                        18,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                18,
                                22
                            ],
                            "start": [
                                18,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    18,
                    22
                ],
                "name": "class",
                "rawdesc": "The class name of the client",
                "start": [
                    18,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Is this window floating or not",
                "extends": {
                    "finish": [
                        21,
                        26
                    ],
                    "start": [
                        21,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                26
                            ],
                            "start": [
                                21,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "services/init.lua",
                "finish": [
                    21,
                    26
                ],
                "name": "floating",
                "rawdesc": "Is this window floating or not",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The `initial_title` of the client",
                "extends": {
                    "finish": [
                        17,
                        30
                    ],
                    "start": [
                        17,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                17,
                                30
                            ],
                            "start": [
                                17,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    17,
                    30
                ],
                "name": "initial_class",
                "rawdesc": "The `initial_title` of the client",
                "start": [
                    17,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The `initial_title` of the client",
                "extends": {
                    "finish": [
                        16,
                        30
                    ],
                    "start": [
                        16,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                16,
                                30
                            ],
                            "start": [
                                16,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    16,
                    30
                ],
                "name": "initial_title",
                "rawdesc": "The `initial_title` of the client",
                "start": [
                    16,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The process id of the client",
                "extends": {
                    "finish": [
                        20,
                        27
                    ],
                    "start": [
                        20,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                20,
                                27
                            ],
                            "start": [
                                20,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "services/init.lua",
                "finish": [
                    20,
                    27
                ],
                "name": "process_id",
                "rawdesc": "The process id of the client",
                "start": [
                    20,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "the x and y size of the client",
                "extends": {
                    "finish": [
                        15,
                        39
                    ],
                    "start": [
                        15,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        15,
                                        26
                                    ],
                                    "name": {
                                        "[1]": "x",
                                        "finish": [
                                            15,
                                            18
                                        ],
                                        "start": [
                                            15,
                                            17
                                        ],
                                        "type": "doc.field.name",
                                        "view": "x"
                                    },
                                    "start": [
                                        15,
                                        17
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        15,
                                        37
                                    ],
                                    "name": {
                                        "[1]": "y",
                                        "finish": [
                                            15,
                                            29
                                        ],
                                        "start": [
                                            15,
                                            28
                                        ],
                                        "type": "doc.field.name",
                                        "view": "y"
                                    },
                                    "start": [
                                        15,
                                        28
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                15,
                                39
                            ],
                            "start": [
                                15,
                                15
                            ],
                            "type": "doc.type.table",
                            "view": "{ x: number, y: number }"
                        }
                    ],
                    "view": "{ x: number, y: number }"
                },
                "file": "services/init.lua",
                "finish": [
                    15,
                    39
                ],
                "name": "size",
                "rawdesc": "the x and y size of the client",
                "start": [
                    15,
                    10
                ],
                "type": "doc.field",
                "view": "{ x: number, y: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The title of the client",
                "extends": {
                    "finish": [
                        19,
                        22
                    ],
                    "start": [
                        19,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                19,
                                22
                            ],
                            "start": [
                                19,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    19,
                    22
                ],
                "name": "title",
                "rawdesc": "The title of the client",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The id of the workspace that the client/window is on",
                "extends": {
                    "finish": [
                        13,
                        29
                    ],
                    "start": [
                        13,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                13,
                                29
                            ],
                            "start": [
                                13,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "services/init.lua",
                "finish": [
                    13,
                    29
                ],
                "name": "workspace_id",
                "rawdesc": "The id of the workspace that the client/window is on",
                "start": [
                    13,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "HyprlandClient",
        "type": "type",
        "view": "HyprlandClient"
    },
    {
        "defines": [
            {
                "finish": [
                    23,
                    55
                ],
                "start": [
                    23,
                    10
                ],
                "type": "doc.alias",
                "view": "table<number, HyprlandClient>"
            }
        ],
        "fields": [],
        "name": "HyprlandClients",
        "type": "type",
        "view": "HyprlandClients"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "subscriptions/init.lua",
                "finish": [
                    11,
                    38
                ],
                "start": [
                    11,
                    18
                ],
                "type": "doc.class",
                "view": "HyprlandSubscription",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the active hyprland client (window) was changed (e.g. active window focus has changed). Outputs a singular `HyprlandClient` or `nil` if there is no focus",
                "extends": {
                    "finish": [
                        14,
                        31
                    ],
                    "start": [
                        14,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                14,
                                31
                            ],
                            "start": [
                                14,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    14,
                    31
                ],
                "name": "active_client",
                "rawdesc": "Sends a signal whenever the active hyprland client (window) was changed (e.g. active window focus has changed). Outputs a singular `HyprlandClient` or `nil` if there is no focus",
                "start": [
                    14,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever a hyprland client (window) was changed (for example: window closed, window opened, window moved). All of the clients ordered by their workspace is provided",
                "extends": {
                    "finish": [
                        13,
                        25
                    ],
                    "start": [
                        13,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                13,
                                25
                            ],
                            "start": [
                                13,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    13,
                    25
                ],
                "name": "clients",
                "rawdesc": "Sends a signal whenever a hyprland client (window) was changed (for example: window closed, window opened, window moved). All of the clients ordered by their workspace is provided",
                "start": [
                    13,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends an signal whenever hyprland workspaces change (e.g. workspace is added, workspace is moved, workspace is destroyed). All of the workspaces are provided",
                "extends": {
                    "finish": [
                        12,
                        28
                    ],
                    "start": [
                        12,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                12,
                                28
                            ],
                            "start": [
                                12,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    12,
                    28
                ],
                "name": "workspaces",
                "rawdesc": "Sends an signal whenever hyprland workspaces change (e.g. workspace is added, workspace is moved, workspace is destroyed). All of the workspaces are provided",
                "start": [
                    12,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            }
        ],
        "name": "HyprlandSubscription",
        "type": "type",
        "view": "HyprlandSubscription"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    6,
                    35
                ],
                "start": [
                    6,
                    18
                ],
                "type": "doc.class",
                "view": "HyprlandWorkspace",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        8,
                        24
                    ],
                    "start": [
                        8,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                8,
                                24
                            ],
                            "start": [
                                8,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "services/init.lua",
                "finish": [
                    8,
                    24
                ],
                "name": "active",
                "start": [
                    8,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        7,
                        19
                    ],
                    "start": [
                        7,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                19
                            ],
                            "start": [
                                7,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "services/init.lua",
                "finish": [
                    7,
                    19
                ],
                "name": "id",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "HyprlandWorkspace",
        "type": "type",
        "view": "HyprlandWorkspace"
    },
    {
        "defines": [
            {
                "finish": [
                    10,
                    48
                ],
                "start": [
                    10,
                    10
                ],
                "type": "doc.alias",
                "view": "HyprlandWorkspace[]"
            }
        ],
        "fields": [],
        "name": "HyprlandWorkspaces",
        "type": "type",
        "view": "HyprlandWorkspaces"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            63,
                            38
                        ],
                        "start": [
                            63,
                            21
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    63,
                    38
                ],
                "start": [
                    63,
                    10
                ],
                "type": "doc.class",
                "view": "IconModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets how the content should be fit.",
                "extends": {
                    "finish": [
                        67,
                        33
                    ],
                    "start": [
                        67,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                67,
                                33
                            ],
                            "start": [
                                67,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "\"contain\"|\"cover\"|\"fill\"|\"none\"|\"scale_down\""
                        }
                    ],
                    "view": "(\"contain\"|\"cover\"|\"fill\"|\"none\"|\"scale_down\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    67,
                    33
                ],
                "name": "content_fit",
                "rawdesc": "Sets how the content should be fit.",
                "start": [
                    67,
                    10
                ],
                "type": "doc.field",
                "view": "(\"contain\"|\"cover\"|\"fill\"|\"none\"|\"scale_down\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The name of the icon. `icon_name` or `icon_path` is required.",
                "extends": {
                    "finish": [
                        64,
                        27
                    ],
                    "start": [
                        64,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                64,
                                27
                            ],
                            "start": [
                                64,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    64,
                    27
                ],
                "name": "icon_name",
                "rawdesc": "The name of the icon. `icon_name` or `icon_path` is required.",
                "start": [
                    64,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The path to the icon. `icon_name` or `icon_path` is required.",
                "extends": {
                    "finish": [
                        65,
                        27
                    ],
                    "start": [
                        65,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                65,
                                27
                            ],
                            "start": [
                                65,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    65,
                    27
                ],
                "name": "icon_path",
                "rawdesc": "The path to the icon. `icon_name` or `icon_path` is required.",
                "start": [
                    65,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The size of the icon.",
                "extends": {
                    "finish": [
                        66,
                        23
                    ],
                    "start": [
                        66,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                66,
                                23
                            ],
                            "start": [
                                66,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    66,
                    23
                ],
                "name": "size",
                "rawdesc": "The size of the icon.",
                "start": [
                    66,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "IconModel",
        "type": "type",
        "view": "IconModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            55,
                            39
                        ],
                        "start": [
                            55,
                            22
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    55,
                    39
                ],
                "start": [
                    55,
                    10
                ],
                "type": "doc.class",
                "view": "ImageModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The border radius of the image",
                "extends": {
                    "finish": [
                        59,
                        68
                    ],
                    "start": [
                        59,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                59,
                                31
                            ],
                            "start": [
                                59,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        },
                        {
                            "fields": [
                                {
                                    "finish": [
                                        59,
                                        42
                                    ],
                                    "name": {
                                        "finish": [
                                            59,
                                            35
                                        ],
                                        "start": [
                                            59,
                                            35
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    59,
                                                    35
                                                ],
                                                "start": [
                                                    59,
                                                    35
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "1"
                                            }
                                        ],
                                        "view": "1"
                                    },
                                    "start": [
                                        59,
                                        36
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        59,
                                        50
                                    ],
                                    "name": {
                                        "finish": [
                                            59,
                                            43
                                        ],
                                        "start": [
                                            59,
                                            43
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    59,
                                                    43
                                                ],
                                                "start": [
                                                    59,
                                                    43
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "2"
                                            }
                                        ],
                                        "view": "2"
                                    },
                                    "start": [
                                        59,
                                        44
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        59,
                                        58
                                    ],
                                    "name": {
                                        "finish": [
                                            59,
                                            51
                                        ],
                                        "start": [
                                            59,
                                            51
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    59,
                                                    51
                                                ],
                                                "start": [
                                                    59,
                                                    51
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "3"
                                            }
                                        ],
                                        "view": "3"
                                    },
                                    "start": [
                                        59,
                                        52
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        59,
                                        66
                                    ],
                                    "name": {
                                        "finish": [
                                            59,
                                            59
                                        ],
                                        "start": [
                                            59,
                                            59
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    59,
                                                    59
                                                ],
                                                "start": [
                                                    59,
                                                    59
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "4"
                                            }
                                        ],
                                        "view": "4"
                                    },
                                    "start": [
                                        59,
                                        60
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                59,
                                68
                            ],
                            "start": [
                                59,
                                34
                            ],
                            "type": "doc.type.table",
                            "view": "[number, number, number, number]"
                        }
                    ],
                    "view": "(number|[number, number, number, number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    59,
                    68
                ],
                "name": "border_radius",
                "rawdesc": "The border radius of the image",
                "start": [
                    59,
                    10
                ],
                "type": "doc.field",
                "view": "(number|[number, number, number, number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A path to an image, this field is required",
                "extends": {
                    "finish": [
                        56,
                        25
                    ],
                    "start": [
                        56,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                56,
                                25
                            ],
                            "start": [
                                56,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    56,
                    25
                ],
                "name": "content",
                "rawdesc": "A path to an image, this field is required",
                "start": [
                    56,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets how the content should be fit. Defaults to `contain`",
                "extends": {
                    "finish": [
                        57,
                        33
                    ],
                    "start": [
                        57,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                57,
                                33
                            ],
                            "start": [
                                57,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "\"contain\"|\"cover\"|\"fill\"|\"none\"|\"scale_down\""
                        }
                    ],
                    "view": "(\"contain\"|\"cover\"|\"fill\"|\"none\"|\"scale_down\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    57,
                    33
                ],
                "name": "content_fit",
                "rawdesc": "Sets how the content should be fit. Defaults to `contain`",
                "start": [
                    57,
                    10
                ],
                "type": "doc.field",
                "view": "(\"contain\"|\"cover\"|\"fill\"|\"none\"|\"scale_down\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        58,
                        37
                    ],
                    "start": [
                        58,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                58,
                                37
                            ],
                            "start": [
                                58,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "\"linear\"|\"nearest\""
                        }
                    ],
                    "view": "(\"linear\"|\"nearest\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    58,
                    37
                ],
                "name": "filter_method",
                "start": [
                    58,
                    10
                ],
                "type": "doc.field",
                "view": "(\"linear\"|\"nearest\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the opacity of an image. It should be in `0.0 - 1.0` range",
                "extends": {
                    "finish": [
                        61,
                        25
                    ],
                    "start": [
                        61,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                61,
                                25
                            ],
                            "start": [
                                61,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    61,
                    25
                ],
                "name": "opacity",
                "rawdesc": "Sets the opacity of an image. It should be in `0.0 - 1.0` range",
                "start": [
                    61,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the rotation of the image. `floating` - element will float while rotating, layout will be the same prior to rotation (default). `solid` - element will be solid while rotating, layout will be adjusted to fit rotated content",
                "extends": {
                    "finish": [
                        60,
                        68
                    ],
                    "start": [
                        60,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        60,
                                        34
                                    ],
                                    "name": {
                                        "finish": [
                                            60,
                                            21
                                        ],
                                        "start": [
                                            60,
                                            21
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    60,
                                                    21
                                                ],
                                                "start": [
                                                    60,
                                                    21
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "1"
                                            }
                                        ],
                                        "view": "1"
                                    },
                                    "start": [
                                        60,
                                        22
                                    ],
                                    "type": "doc.type.field",
                                    "view": "\"floating\""
                                },
                                {
                                    "finish": [
                                        60,
                                        42
                                    ],
                                    "name": {
                                        "finish": [
                                            60,
                                            35
                                        ],
                                        "start": [
                                            60,
                                            35
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    60,
                                                    35
                                                ],
                                                "start": [
                                                    60,
                                                    35
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "2"
                                            }
                                        ],
                                        "view": "2"
                                    },
                                    "start": [
                                        60,
                                        36
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                60,
                                44
                            ],
                            "start": [
                                60,
                                20
                            ],
                            "type": "doc.type.table",
                            "view": "[\"floating\", number]"
                        },
                        {
                            "fields": [
                                {
                                    "finish": [
                                        60,
                                        58
                                    ],
                                    "name": {
                                        "finish": [
                                            60,
                                            48
                                        ],
                                        "start": [
                                            60,
                                            48
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    60,
                                                    48
                                                ],
                                                "start": [
                                                    60,
                                                    48
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "1"
                                            }
                                        ],
                                        "view": "1"
                                    },
                                    "start": [
                                        60,
                                        49
                                    ],
                                    "type": "doc.type.field",
                                    "view": "\"solid\""
                                },
                                {
                                    "finish": [
                                        60,
                                        66
                                    ],
                                    "name": {
                                        "finish": [
                                            60,
                                            59
                                        ],
                                        "start": [
                                            60,
                                            59
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    60,
                                                    59
                                                ],
                                                "start": [
                                                    60,
                                                    59
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "2"
                                            }
                                        ],
                                        "view": "2"
                                    },
                                    "start": [
                                        60,
                                        60
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                60,
                                68
                            ],
                            "start": [
                                60,
                                47
                            ],
                            "type": "doc.type.table",
                            "view": "[\"solid\", number]"
                        }
                    ],
                    "view": "([\"floating\", number]|[\"solid\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    60,
                    68
                ],
                "name": "rotation",
                "rawdesc": "Sets the rotation of the image. `floating` - element will float while rotating, layout will be the same prior to rotation (default). `solid` - element will be solid while rotating, layout will be adjusted to fit rotated content",
                "start": [
                    60,
                    10
                ],
                "type": "doc.field",
                "view": "([\"floating\", number]|[\"solid\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "ImageModel",
        "type": "type",
        "view": "ImageModel"
    },
    {
        "defines": [
            {
                "desc": "```lua\nKeymode:\n    | \"none\" -- Keyboard input cannot be recieved\n    | \"on_demand\" -- Can recieve keyboard input if focused\n    | \"exclusive\" -- Steal keyboard input on top and overlay layers\n```",
                "finish": [
                    44,
                    18
                ],
                "rawdesc": "```lua\nKeymode:\n    | \"none\" -- Keyboard input cannot be recieved\n    | \"on_demand\" -- Can recieve keyboard input if focused\n    | \"exclusive\" -- Steal keyboard input on top and overlay layers\n```",
                "start": [
                    41,
                    10
                ],
                "type": "doc.alias",
                "view": "\"exclusive\"|\"none\"|\"on_demand\""
            }
        ],
        "fields": [],
        "name": "Keymode",
        "type": "type",
        "view": "Keymode"
    },
    {
        "defines": [
            {
                "desc": "```lua\nLayer:\n    | \"top\"\n    | \"bottom\"\n    | \"background\"\n```",
                "finish": [
                    55,
                    19
                ],
                "rawdesc": "```lua\nLayer:\n    | \"top\"\n    | \"bottom\"\n    | \"background\"\n```",
                "start": [
                    52,
                    10
                ],
                "type": "doc.alias",
                "view": "\"background\"|\"bottom\"|\"top\""
            }
        ],
        "fields": [],
        "name": "Layer",
        "type": "type",
        "view": "Layer"
    },
    {
        "defines": [
            {
                "desc": "```lua\nLength:\n    | \"fill\" -- Fill all the remaining space\n    | \"shrink\" -- Fill the least amount of space\n```",
                "finish": [
                    35,
                    24
                ],
                "rawdesc": "```lua\nLength:\n    | \"fill\" -- Fill all the remaining space\n    | \"shrink\" -- Fill the least amount of space\n```",
                "start": [
                    29,
                    10
                ],
                "type": "doc.alias",
                "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
            }
        ],
        "fields": [],
        "name": "Length",
        "type": "type",
        "view": "Length"
    },
    {
        "defines": [
            {
                "finish": [
                    71,
                    27
                ],
                "start": [
                    69,
                    10
                ],
                "type": "doc.alias",
                "view": "[\"absolute\", number]|[\"relative\", number]"
            }
        ],
        "fields": [],
        "name": "LineHeight",
        "type": "type",
        "view": "LineHeight"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "utils/init.lua",
                "finish": [
                    31,
                    19
                ],
                "start": [
                    31,
                    10
                ],
                "type": "doc.class",
                "view": "MatchUtil",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is equal to the condition (`==`)",
                "extends": {
                    "finish": [
                        32,
                        57
                    ],
                    "start": [
                        32,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        32,
                                        32
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            32,
                                            27
                                        ],
                                        "start": [
                                            32,
                                            18
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        32,
                                        18
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        32,
                                        45
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            32,
                                            40
                                        ],
                                        "start": [
                                            32,
                                            34
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        32,
                                        34
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                32,
                                57
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        32,
                                        57
                                    ],
                                    "start": [
                                        32,
                                        48
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                32,
                                                57
                                            ],
                                            "start": [
                                                32,
                                                48
                                            ],
                                            "type": "doc.type.name",
                                            "view": "MatchUtil"
                                        }
                                    ],
                                    "view": "MatchUtil"
                                }
                            ],
                            "start": [
                                32,
                                14
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: any):MatchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: any):MatchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    32,
                    57
                ],
                "name": "arm",
                "rawdesc": "Checks if the `scrutinee` is equal to the condition (`==`)",
                "start": [
                    32,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: any):MatchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is less than or equal to the condition (`<=`)",
                "extends": {
                    "finish": [
                        33,
                        65
                    ],
                    "start": [
                        33,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        33,
                                        40
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            33,
                                            35
                                        ],
                                        "start": [
                                            33,
                                            26
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        33,
                                        26
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        33,
                                        53
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            33,
                                            48
                                        ],
                                        "start": [
                                            33,
                                            42
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        33,
                                        42
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                33,
                                65
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        33,
                                        65
                                    ],
                                    "start": [
                                        33,
                                        56
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                33,
                                                65
                                            ],
                                            "start": [
                                                33,
                                                56
                                            ],
                                            "type": "doc.type.name",
                                            "view": "MatchUtil"
                                        }
                                    ],
                                    "view": "MatchUtil"
                                }
                            ],
                            "start": [
                                33,
                                22
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: any):MatchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: any):MatchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    33,
                    65
                ],
                "name": "arm_less_eq",
                "rawdesc": "Checks if the `scrutinee` is less than or equal to the condition (`<=`)",
                "start": [
                    33,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: any):MatchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is less than to the condition (`<`)",
                "extends": {
                    "finish": [
                        35,
                        67
                    ],
                    "start": [
                        35,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        35,
                                        42
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            35,
                                            37
                                        ],
                                        "start": [
                                            35,
                                            28
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        35,
                                        28
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        35,
                                        55
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            35,
                                            50
                                        ],
                                        "start": [
                                            35,
                                            44
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        35,
                                        44
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                35,
                                67
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        35,
                                        67
                                    ],
                                    "start": [
                                        35,
                                        58
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                35,
                                                67
                                            ],
                                            "start": [
                                                35,
                                                58
                                            ],
                                            "type": "doc.type.name",
                                            "view": "MatchUtil"
                                        }
                                    ],
                                    "view": "MatchUtil"
                                }
                            ],
                            "start": [
                                35,
                                24
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: any):MatchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: any):MatchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    35,
                    67
                ],
                "name": "arm_less_than",
                "rawdesc": "Checks if the `scrutinee` is less than to the condition (`<`)",
                "start": [
                    35,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: any):MatchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is more than or equal to the condition (`>=`)",
                "extends": {
                    "finish": [
                        34,
                        65
                    ],
                    "start": [
                        34,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        34,
                                        40
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            34,
                                            35
                                        ],
                                        "start": [
                                            34,
                                            26
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        34,
                                        26
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        34,
                                        53
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            34,
                                            48
                                        ],
                                        "start": [
                                            34,
                                            42
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        34,
                                        42
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                34,
                                65
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        34,
                                        65
                                    ],
                                    "start": [
                                        34,
                                        56
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                34,
                                                65
                                            ],
                                            "start": [
                                                34,
                                                56
                                            ],
                                            "type": "doc.type.name",
                                            "view": "MatchUtil"
                                        }
                                    ],
                                    "view": "MatchUtil"
                                }
                            ],
                            "start": [
                                34,
                                22
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: any):MatchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: any):MatchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    34,
                    65
                ],
                "name": "arm_more_eq",
                "rawdesc": "Checks if the `scrutinee` is more than or equal to the condition (`>=`)",
                "start": [
                    34,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: any):MatchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is more than to the condition (`>`)",
                "extends": {
                    "finish": [
                        36,
                        67
                    ],
                    "start": [
                        36,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        36,
                                        42
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            36,
                                            37
                                        ],
                                        "start": [
                                            36,
                                            28
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        36,
                                        28
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        36,
                                        55
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            36,
                                            50
                                        ],
                                        "start": [
                                            36,
                                            44
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        36,
                                        44
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                36,
                                67
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        36,
                                        67
                                    ],
                                    "start": [
                                        36,
                                        58
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                36,
                                                67
                                            ],
                                            "start": [
                                                36,
                                                58
                                            ],
                                            "type": "doc.type.name",
                                            "view": "MatchUtil"
                                        }
                                    ],
                                    "view": "MatchUtil"
                                }
                            ],
                            "start": [
                                36,
                                24
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: any):MatchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: any):MatchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    36,
                    67
                ],
                "name": "arm_more_than",
                "rawdesc": "Checks if the `scrutinee` is more than to the condition (`>`)",
                "start": [
                    36,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: any):MatchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Collapses the entire match arm, returning either a result, the fallback if no match was found or nothing",
                "extends": {
                    "finish": [
                        38,
                        29
                    ],
                    "start": [
                        38,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": {
                                "view": "unknown"
                            },
                            "finish": [
                                38,
                                29
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        38,
                                        29
                                    ],
                                    "start": [
                                        38,
                                        26
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                38,
                                                29
                                            ],
                                            "start": [
                                                38,
                                                26
                                            ],
                                            "type": "doc.type.name",
                                            "view": "any"
                                        }
                                    ],
                                    "view": "any"
                                }
                            ],
                            "start": [
                                38,
                                19
                            ],
                            "type": "doc.type.function",
                            "view": "fun():any"
                        }
                    ],
                    "view": "fun():any"
                },
                "file": "utils/init.lua",
                "finish": [
                    38,
                    29
                ],
                "name": "collapse",
                "rawdesc": "Collapses the entire match arm, returning either a result, the fallback if no match was found or nothing",
                "start": [
                    38,
                    10
                ],
                "type": "doc.field",
                "view": "fun():any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "If none of the arms have a match, it will fallback to this result",
                "extends": {
                    "finish": [
                        37,
                        45
                    ],
                    "start": [
                        37,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        37,
                                        33
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            37,
                                            28
                                        ],
                                        "start": [
                                            37,
                                            22
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        37,
                                        22
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                37,
                                45
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        37,
                                        45
                                    ],
                                    "start": [
                                        37,
                                        36
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                37,
                                                45
                                            ],
                                            "start": [
                                                37,
                                                36
                                            ],
                                            "type": "doc.type.name",
                                            "view": "MatchUtil"
                                        }
                                    ],
                                    "view": "MatchUtil"
                                }
                            ],
                            "start": [
                                37,
                                18
                            ],
                            "type": "doc.type.function",
                            "view": "fun(result: any):MatchUtil"
                        }
                    ],
                    "view": "fun(result: any):MatchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    37,
                    45
                ],
                "name": "default",
                "rawdesc": "If none of the arms have a match, it will fallback to this result",
                "start": [
                    37,
                    10
                ],
                "type": "doc.field",
                "view": "fun(result: any):MatchUtil",
                "visible": "public"
            }
        ],
        "name": "MatchUtil",
        "type": "type",
        "view": "MatchUtil"
    },
    {
        "defines": [
            {
                "desc": "```lua\nModifier:\n    | \"ctrl\"\n    | \"shift\"\n    | \"alt\"\n    | \"super\"\n```",
                "finish": [
                    53,
                    11
                ],
                "rawdesc": "```lua\nModifier:\n    | \"ctrl\"\n    | \"shift\"\n    | \"alt\"\n    | \"super\"\n```",
                "start": [
                    48,
                    10
                ],
                "type": "doc.alias",
                "view": "string|\"alt\"|\"ctrl\"|\"shift\"|\"super\""
            }
        ],
        "fields": [],
        "name": "Modifier",
        "type": "type",
        "view": "Modifier"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            56,
                            50
                        ],
                        "start": [
                            56,
                            39
                        ],
                        "type": "doc.extends.name",
                        "view": "MprisOutput"
                    }
                ],
                "file": "services/init.lua",
                "finish": [
                    56,
                    50
                ],
                "start": [
                    56,
                    18
                ],
                "type": "doc.class",
                "view": "MprisLoopingChanged",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        57,
                        57
                    ],
                    "start": [
                        57,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                57,
                                30
                            ],
                            "start": [
                                57,
                                22
                            ],
                            "type": "doc.type.string",
                            "view": "\"None\""
                        },
                        {
                            "finish": [
                                57,
                                42
                            ],
                            "start": [
                                57,
                                33
                            ],
                            "type": "doc.type.string",
                            "view": "\"Track\""
                        },
                        {
                            "finish": [
                                57,
                                57
                            ],
                            "start": [
                                57,
                                45
                            ],
                            "type": "doc.type.string",
                            "view": "\"Playlist\""
                        }
                    ],
                    "view": "\"None\"|\"Playlist\"|\"Track\""
                },
                "file": "services/init.lua",
                "finish": [
                    57,
                    57
                ],
                "name": "loop_status",
                "start": [
                    57,
                    10
                ],
                "type": "doc.field",
                "view": "\"None\"|\"Playlist\"|\"Track\"",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The players name",
                "extends": {
                    "finish": [
                        42,
                        23
                    ],
                    "start": [
                        42,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                23
                            ],
                            "start": [
                                42,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    42,
                    23
                ],
                "name": "player",
                "rawdesc": "The players name",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "MprisLoopingChanged",
        "type": "type",
        "view": "MprisLoopingChanged"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    41,
                    29
                ],
                "start": [
                    41,
                    18
                ],
                "type": "doc.class",
                "view": "MprisOutput",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The players name",
                "extends": {
                    "finish": [
                        42,
                        23
                    ],
                    "start": [
                        42,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                23
                            ],
                            "start": [
                                42,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    42,
                    23
                ],
                "name": "player",
                "rawdesc": "The players name",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "MprisOutput",
        "type": "type",
        "view": "MprisOutput"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    62,
                    21
                ],
                "start": [
                    62,
                    10
                ],
                "type": "doc.class",
                "view": "MprisPlayer",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Gets the volume of the player",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                88,
                                8
                            ],
                            "name": "self",
                            "start": [
                                88,
                                8
                            ],
                            "type": "self",
                            "view": "MprisPlayer"
                        }
                    ],
                    "desc": "Gets the volume of the player",
                    "finish": [
                        88,
                        32
                    ],
                    "rawdesc": "Gets the volume of the player",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        88,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisPlayer:get_volume()\n  -> number"
                },
                "file": "services/init.lua",
                "finish": [
                    88,
                    26
                ],
                "name": "get_volume",
                "rawdesc": "Gets the volume of the player",
                "start": [
                    88,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a `next` signal to the player",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                69,
                                8
                            ],
                            "name": "self",
                            "start": [
                                69,
                                8
                            ],
                            "type": "self",
                            "view": "MprisPlayer"
                        }
                    ],
                    "desc": "Sends a `next` signal to the player",
                    "finish": [
                        69,
                        26
                    ],
                    "rawdesc": "Sends a `next` signal to the player",
                    "start": [
                        69,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisPlayer:next()"
                },
                "file": "services/init.lua",
                "finish": [
                    69,
                    20
                ],
                "name": "next",
                "rawdesc": "Sends a `next` signal to the player",
                "start": [
                    69,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a `play_pause` signal to the player",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                66,
                                8
                            ],
                            "name": "self",
                            "start": [
                                66,
                                8
                            ],
                            "type": "self",
                            "view": "MprisPlayer"
                        }
                    ],
                    "desc": "Sends a `play_pause` signal to the player",
                    "finish": [
                        66,
                        32
                    ],
                    "rawdesc": "Sends a `play_pause` signal to the player",
                    "start": [
                        66,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisPlayer:play_pause()"
                },
                "file": "services/init.lua",
                "finish": [
                    66,
                    26
                ],
                "name": "play_pause",
                "rawdesc": "Sends a `play_pause` signal to the player",
                "start": [
                    66,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a `previous` signal to the player",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                72,
                                8
                            ],
                            "name": "self",
                            "start": [
                                72,
                                8
                            ],
                            "type": "self",
                            "view": "MprisPlayer"
                        }
                    ],
                    "desc": "Sends a `previous` signal to the player",
                    "finish": [
                        72,
                        30
                    ],
                    "rawdesc": "Sends a `previous` signal to the player",
                    "start": [
                        72,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisPlayer:previous()"
                },
                "file": "services/init.lua",
                "finish": [
                    72,
                    24
                ],
                "name": "previous",
                "rawdesc": "Sends a `previous` signal to the player",
                "start": [
                    72,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the looping of the player\n\n```lua\nstatus:\n    | \"Playlist\"\n    | \"Track\"\n    | \"None\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                80,
                                8
                            ],
                            "name": "self",
                            "start": [
                                80,
                                8
                            ],
                            "type": "self",
                            "view": "MprisPlayer"
                        },
                        {
                            "finish": [
                                80,
                                31
                            ],
                            "name": "status",
                            "start": [
                                80,
                                25
                            ],
                            "type": "local",
                            "view": "\"None\"|\"Playlist\"|\"Track\""
                        }
                    ],
                    "desc": "Sets the looping of the player\n\n```lua\nstatus:\n    | \"Playlist\"\n    | \"Track\"\n    | \"None\"\n```",
                    "finish": [
                        80,
                        36
                    ],
                    "rawdesc": "Sets the looping of the player\n\n```lua\nstatus:\n    | \"Playlist\"\n    | \"Track\"\n    | \"None\"\n```",
                    "start": [
                        80,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisPlayer:set_loop(status: \"None\"|\"Playlist\"|\"Track\")"
                },
                "file": "services/init.lua",
                "finish": [
                    80,
                    24
                ],
                "name": "set_loop",
                "rawdesc": "Sets the looping of the player\n\n```lua\nstatus:\n    | \"Playlist\"\n    | \"Track\"\n    | \"None\"\n```",
                "start": [
                    80,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the shuffle of the player",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                8
                            ],
                            "name": "self",
                            "start": [
                                84,
                                8
                            ],
                            "type": "self",
                            "view": "MprisPlayer"
                        },
                        {
                            "finish": [
                                84,
                                35
                            ],
                            "name": "shuffle",
                            "start": [
                                84,
                                28
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Sets the shuffle of the player",
                    "finish": [
                        84,
                        40
                    ],
                    "rawdesc": "Sets the shuffle of the player",
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisPlayer:set_shuffle(shuffle: boolean)"
                },
                "file": "services/init.lua",
                "finish": [
                    84,
                    27
                ],
                "name": "set_shuffle",
                "rawdesc": "Sets the shuffle of the player",
                "start": [
                    84,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the volume of the player",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                76,
                                8
                            ],
                            "name": "self",
                            "start": [
                                76,
                                8
                            ],
                            "type": "self",
                            "view": "MprisPlayer"
                        },
                        {
                            "finish": [
                                76,
                                33
                            ],
                            "name": "volume",
                            "start": [
                                76,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sets the volume of the player",
                    "finish": [
                        76,
                        38
                    ],
                    "rawdesc": "Sets the volume of the player",
                    "start": [
                        76,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisPlayer:set_volume(volume: number)"
                },
                "file": "services/init.lua",
                "finish": [
                    76,
                    26
                ],
                "name": "set_volume",
                "rawdesc": "Sets the volume of the player",
                "start": [
                    76,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MprisPlayer",
        "type": "type",
        "view": "MprisPlayer"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    38,
                    22
                ],
                "start": [
                    38,
                    10
                ],
                "type": "doc.class",
                "view": "MprisService",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Gets a player by its name, allowing you to manage it",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                92,
                                8
                            ],
                            "name": "self",
                            "start": [
                                92,
                                8
                            ],
                            "type": "self",
                            "view": "MprisService"
                        },
                        {
                            "finish": [
                                92,
                                46
                            ],
                            "name": "player_name",
                            "start": [
                                92,
                                35
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Gets a player by its name, allowing you to manage it",
                    "finish": [
                        92,
                        51
                    ],
                    "rawdesc": "Gets a player by its name, allowing you to manage it",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "MprisPlayer"
                        }
                    ],
                    "start": [
                        92,
                        0
                    ],
                    "type": "function",
                    "view": "(method) MprisService:get_player(player_name: string)\n  -> MprisPlayer"
                },
                "file": "services/init.lua",
                "finish": [
                    92,
                    34
                ],
                "name": "get_player",
                "rawdesc": "Gets a player by its name, allowing you to manage it",
                "start": [
                    92,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MprisService",
        "type": "type",
        "view": "MprisService"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            59,
                            50
                        ],
                        "start": [
                            59,
                            39
                        ],
                        "type": "doc.extends.name",
                        "view": "MprisOutput"
                    }
                ],
                "file": "services/init.lua",
                "finish": [
                    59,
                    50
                ],
                "start": [
                    59,
                    18
                ],
                "type": "doc.class",
                "view": "MprisShuffleToggled",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The players name",
                "extends": {
                    "finish": [
                        42,
                        23
                    ],
                    "start": [
                        42,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                23
                            ],
                            "start": [
                                42,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    42,
                    23
                ],
                "name": "player",
                "rawdesc": "The players name",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        60,
                        25
                    ],
                    "start": [
                        60,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                60,
                                25
                            ],
                            "start": [
                                60,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "services/init.lua",
                "finish": [
                    60,
                    25
                ],
                "name": "shuffle",
                "start": [
                    60,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            }
        ],
        "name": "MprisShuffleToggled",
        "type": "type",
        "view": "MprisShuffleToggled"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "subscriptions/init.lua",
                "finish": [
                    16,
                    35
                ],
                "start": [
                    16,
                    18
                ],
                "type": "doc.class",
                "view": "MprisSubscription",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the player's loop status was changed. New loop status is provided",
                "extends": {
                    "finish": [
                        21,
                        33
                    ],
                    "start": [
                        21,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                33
                            ],
                            "start": [
                                21,
                                27
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    21,
                    33
                ],
                "name": "looping_changed",
                "rawdesc": "Sends a signal whenever the player's loop status was changed. New loop status is provided",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the player was paused",
                "extends": {
                    "finish": [
                        18,
                        24
                    ],
                    "start": [
                        18,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                18,
                                24
                            ],
                            "start": [
                                18,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    18,
                    24
                ],
                "name": "paused",
                "rawdesc": "Sends a signal whenever the player was paused",
                "start": [
                    18,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the player started playing",
                "extends": {
                    "finish": [
                        17,
                        25
                    ],
                    "start": [
                        17,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                17,
                                25
                            ],
                            "start": [
                                17,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    17,
                    25
                ],
                "name": "playing",
                "rawdesc": "Sends a signal whenever the player started playing",
                "start": [
                    17,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the player's shuffle status was changed. New shuffle status is provided",
                "extends": {
                    "finish": [
                        22,
                        33
                    ],
                    "start": [
                        22,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                22,
                                33
                            ],
                            "start": [
                                22,
                                27
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    22,
                    33
                ],
                "name": "shuffle_toggled",
                "rawdesc": "Sends a signal whenever the player's shuffle status was changed. New shuffle status is provided",
                "start": [
                    22,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the player was stopped",
                "extends": {
                    "finish": [
                        19,
                        25
                    ],
                    "start": [
                        19,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                19,
                                25
                            ],
                            "start": [
                                19,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    19,
                    25
                ],
                "name": "stopped",
                "rawdesc": "Sends a signal whenever the player was stopped",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the player's track has changed. New metadata is provided",
                "extends": {
                    "finish": [
                        23,
                        31
                    ],
                    "start": [
                        23,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                31
                            ],
                            "start": [
                                23,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    23,
                    31
                ],
                "name": "track_changed",
                "rawdesc": "Sends a signal whenever the player's track has changed. New metadata is provided",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever the player's volume was changed. New volume is provided",
                "extends": {
                    "finish": [
                        20,
                        32
                    ],
                    "start": [
                        20,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                20,
                                32
                            ],
                            "start": [
                                20,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    20,
                    32
                ],
                "name": "volume_changed",
                "rawdesc": "Sends a signal whenever the player's volume was changed. New volume is provided",
                "start": [
                    20,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            }
        ],
        "name": "MprisSubscription",
        "type": "type",
        "view": "MprisSubscription"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            44,
                            48
                        ],
                        "start": [
                            44,
                            37
                        ],
                        "type": "doc.extends.name",
                        "view": "MprisOutput"
                    }
                ],
                "file": "services/init.lua",
                "finish": [
                    44,
                    48
                ],
                "start": [
                    44,
                    18
                ],
                "type": "doc.class",
                "view": "MprisTrackChanged",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The players name",
                "extends": {
                    "finish": [
                        42,
                        23
                    ],
                    "start": [
                        42,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                23
                            ],
                            "start": [
                                42,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    42,
                    23
                ],
                "name": "player",
                "rawdesc": "The players name",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        45,
                        50
                    ],
                    "start": [
                        45,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                45,
                                29
                            ],
                            "start": [
                                45,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "TrackMetadata"
                        },
                        {
                            "fields": [
                                {
                                    "finish": [
                                        45,
                                        48
                                    ],
                                    "name": {
                                        "[1]": "empty",
                                        "finish": [
                                            45,
                                            39
                                        ],
                                        "start": [
                                            45,
                                            34
                                        ],
                                        "type": "doc.field.name",
                                        "view": "empty"
                                    },
                                    "start": [
                                        45,
                                        34
                                    ],
                                    "type": "doc.type.field",
                                    "view": "boolean"
                                }
                            ],
                            "finish": [
                                45,
                                50
                            ],
                            "start": [
                                45,
                                32
                            ],
                            "type": "doc.type.table",
                            "view": "{ empty: boolean }"
                        }
                    ],
                    "view": "TrackMetadata|{ empty: boolean }"
                },
                "file": "services/init.lua",
                "finish": [
                    45,
                    50
                ],
                "name": "track",
                "start": [
                    45,
                    10
                ],
                "type": "doc.field",
                "view": "TrackMetadata|{ empty: boolean }",
                "visible": "public"
            }
        ],
        "name": "MprisTrackChanged",
        "type": "type",
        "view": "MprisTrackChanged"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            53,
                            49
                        ],
                        "start": [
                            53,
                            38
                        ],
                        "type": "doc.extends.name",
                        "view": "MprisOutput"
                    }
                ],
                "file": "services/init.lua",
                "finish": [
                    53,
                    49
                ],
                "start": [
                    53,
                    18
                ],
                "type": "doc.class",
                "view": "MprisVolumeChanged",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The players name",
                "extends": {
                    "finish": [
                        42,
                        23
                    ],
                    "start": [
                        42,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                23
                            ],
                            "start": [
                                42,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    42,
                    23
                ],
                "name": "player",
                "rawdesc": "The players name",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        54,
                        23
                    ],
                    "start": [
                        54,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                54,
                                23
                            ],
                            "start": [
                                54,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "services/init.lua",
                "finish": [
                    54,
                    23
                ],
                "name": "volume",
                "start": [
                    54,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "MprisVolumeChanged",
        "type": "type",
        "view": "MprisVolumeChanged"
    },
    {
        "defines": [
            {
                "desc": "```lua\nNamedKeys:\n    | \"alt\"\n    | \"backspace\"\n    | \"caps_lock\"\n    | \"ctrl\"\n    | \"enter\"\n    | \"super\"\n    | \"shift\"\n    | \"space\"\n    | \"tab\"\n    | \"delete\"\n    | \"end\"\n    | \"help\"\n    | \"home\"\n    | \"insert\"\n    | \"page_up\"\n    | \"page_down\"\n    | \"arrow_down\"\n    | \"arrow_up\"\n    | \"arrow_left\"\n    | \"arrow_right\"\n    | \"numlock\"\n    | \"escape\"\n    | \"pause\"\n    | \"print_screen\"\n    | \"scroll_lock\"\n    | \"meta\"\n    | \"f1\"\n    | \"f2\"\n    | \"f3\"\n    | \"f4\"\n    | \"f5\"\n    | \"f6\"\n    | \"f7\"\n    | \"f8\"\n    | \"f9\"\n    | \"f10\"\n    | \"f11\"\n    | \"f12\"\n```",
                "finish": [
                    94,
                    11
                ],
                "rawdesc": "```lua\nNamedKeys:\n    | \"alt\"\n    | \"backspace\"\n    | \"caps_lock\"\n    | \"ctrl\"\n    | \"enter\"\n    | \"super\"\n    | \"shift\"\n    | \"space\"\n    | \"tab\"\n    | \"delete\"\n    | \"end\"\n    | \"help\"\n    | \"home\"\n    | \"insert\"\n    | \"page_up\"\n    | \"page_down\"\n    | \"arrow_down\"\n    | \"arrow_up\"\n    | \"arrow_left\"\n    | \"arrow_right\"\n    | \"numlock\"\n    | \"escape\"\n    | \"pause\"\n    | \"print_screen\"\n    | \"scroll_lock\"\n    | \"meta\"\n    | \"f1\"\n    | \"f2\"\n    | \"f3\"\n    | \"f4\"\n    | \"f5\"\n    | \"f6\"\n    | \"f7\"\n    | \"f8\"\n    | \"f9\"\n    | \"f10\"\n    | \"f11\"\n    | \"f12\"\n```",
                "start": [
                    55,
                    10
                ],
                "type": "doc.alias",
                "view": "string|\"alt\"|\"arrow_down\"|\"arrow_left\"|\"arrow_right\"...(+34)"
            }
        ],
        "fields": [],
        "name": "NamedKeys",
        "type": "type",
        "view": "NamedKeys"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "subscriptions/init.lua",
                "finish": [
                    99,
                    22
                ],
                "start": [
                    99,
                    10
                ],
                "type": "doc.class",
                "view": "Notification",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Actions are sent over as a list of pairs. Each even element in the list represents the identifier of the action. Each odd element in the list is the localized string that will be displayed to the user",
                "extends": {
                    "finish": [
                        105,
                        26
                    ],
                    "start": [
                        105,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                105,
                                26
                            ],
                            "start": [
                                105,
                                18
                            ],
                            "type": "doc.type.array",
                            "view": "string[]"
                        }
                    ],
                    "view": "string[]"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    105,
                    26
                ],
                "name": "actions",
                "rawdesc": "Actions are sent over as a list of pairs. Each even element in the list represents the identifier of the action. Each odd element in the list is the localized string that will be displayed to the user",
                "start": [
                    105,
                    10
                ],
                "type": "doc.field",
                "view": "string[]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The optional program icon of the calling application. Can be blank, indicating no icon.",
                "extends": {
                    "finish": [
                        102,
                        25
                    ],
                    "start": [
                        102,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                102,
                                25
                            ],
                            "start": [
                                102,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    102,
                    25
                ],
                "name": "app_icon",
                "rawdesc": "The optional program icon of the calling application. Can be blank, indicating no icon.",
                "start": [
                    102,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The optional name of the application sending the notification. Can be blank",
                "extends": {
                    "finish": [
                        100,
                        25
                    ],
                    "start": [
                        100,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                100,
                                25
                            ],
                            "start": [
                                100,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    100,
                    25
                ],
                "name": "app_name",
                "rawdesc": "The optional name of the application sending the notification. Can be blank",
                "start": [
                    100,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The optional detailed body text. Can be blank",
                "extends": {
                    "finish": [
                        104,
                        21
                    ],
                    "start": [
                        104,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                104,
                                21
                            ],
                            "start": [
                                104,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    104,
                    21
                ],
                "name": "body",
                "rawdesc": "The optional detailed body text. Can be blank",
                "start": [
                    104,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The timeout in milliseconds since the display of the notification and at which the notification should automatically close. If it is `-1` it means that there is predefined expire timeout (up to you). If `0` then it never expires.",
                "extends": {
                    "finish": [
                        106,
                        31
                    ],
                    "start": [
                        106,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                106,
                                31
                            ],
                            "start": [
                                106,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    106,
                    31
                ],
                "name": "expire_timeout",
                "rawdesc": "The timeout in milliseconds since the display of the notification and at which the notification should automatically close. If it is `-1` it means that there is predefined expire timeout (up to you). If `0` then it never expires.",
                "start": [
                    106,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The optional notification ID that this notification replaces. It is reccomended that the server must atomically (i.e. with no visual cues or flicker) replace the given notification with this one, so that applications can modify noitifications while they still are active. A value of 0 means that it will not replace notifications",
                "extends": {
                    "finish": [
                        101,
                        28
                    ],
                    "start": [
                        101,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                101,
                                28
                            ],
                            "start": [
                                101,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    101,
                    28
                ],
                "name": "replaces_id",
                "rawdesc": "The optional notification ID that this notification replaces. It is reccomended that the server must atomically (i.e. with no visual cues or flicker) replace the given notification with this one, so that applications can modify noitifications while they still are active. A value of 0 means that it will not replace notifications",
                "start": [
                    101,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The summary text briefly describing the notification",
                "extends": {
                    "finish": [
                        103,
                        24
                    ],
                    "start": [
                        103,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                103,
                                24
                            ],
                            "start": [
                                103,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    103,
                    24
                ],
                "name": "summary",
                "rawdesc": "The summary text briefly describing the notification",
                "start": [
                    103,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "Notification",
        "type": "type",
        "view": "Notification"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "subscriptions/init.lua",
                "finish": [
                    96,
                    42
                ],
                "start": [
                    96,
                    18
                ],
                "type": "doc.class",
                "view": "NotificationSubscription",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever a notification is recieved. The `signal_data` is of type `Notification` and contains the data of the notification.",
                "extends": {
                    "finish": [
                        97,
                        32
                    ],
                    "start": [
                        97,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                97,
                                32
                            ],
                            "start": [
                                97,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    97,
                    32
                ],
                "name": "on_notification",
                "rawdesc": "Sends a signal whenever a notification is recieved. The `signal_data` is of type `Notification` and contains the data of the notification.",
                "start": [
                    97,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "NotificationSubscription",
        "type": "type",
        "view": "NotificationSubscription"
    },
    {
        "defines": [
            {
                "finish": [
                    27,
                    78
                ],
                "start": [
                    27,
                    10
                ],
                "type": "doc.alias",
                "view": "number|[number, number, number, number]|[number, number]"
            }
        ],
        "fields": [],
        "name": "Padding",
        "type": "type",
        "view": "Padding"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            32,
                            37
                        ],
                        "start": [
                            32,
                            20
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    32,
                    37
                ],
                "start": [
                    32,
                    10
                ],
                "type": "doc.class",
                "view": "RowModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the vertical alignments of the contents of the `row`",
                "extends": {
                    "finish": [
                        36,
                        27
                    ],
                    "start": [
                        36,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                36,
                                27
                            ],
                            "start": [
                                36,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "\"bottom\"|\"center\"|\"top\""
                        }
                    ],
                    "view": "(\"bottom\"|\"center\"|\"top\")?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    36,
                    27
                ],
                "name": "align_y",
                "rawdesc": "Sets the vertical alignments of the contents of the `row`",
                "start": [
                    36,
                    10
                ],
                "type": "doc.field",
                "view": "(\"bottom\"|\"center\"|\"top\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "List of widgets to be rendered within the `row`",
                "extends": {
                    "finish": [
                        33,
                        28
                    ],
                    "start": [
                        33,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                33,
                                28
                            ],
                            "start": [
                                33,
                                20
                            ],
                            "type": "doc.type.array",
                            "view": "Widget[]"
                        }
                    ],
                    "view": "Widget[]?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    33,
                    28
                ],
                "name": "children",
                "rawdesc": "List of widgets to be rendered within the `row`",
                "start": [
                    33,
                    10
                ],
                "type": "doc.field",
                "view": "Widget[]?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets whether the contents of the `row` should be clipped on overflow",
                "extends": {
                    "finish": [
                        37,
                        23
                    ],
                    "start": [
                        37,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                37,
                                23
                            ],
                            "start": [
                                37,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    37,
                    23
                ],
                "name": "clip",
                "rawdesc": "Sets whether the contents of the `row` should be clipped on overflow",
                "start": [
                    37,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        35,
                        26
                    ],
                    "start": [
                        35,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                35,
                                26
                            ],
                            "start": [
                                35,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number|[number, number, number, number]|[number, number]"
                        }
                    ],
                    "view": "(number|[number, number, number, number]|[number, number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    35,
                    26
                ],
                "name": "padding",
                "start": [
                    35,
                    10
                ],
                "type": "doc.field",
                "view": "(number|[number, number, number, number]|[number, number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The spacing between elements in pixels",
                "extends": {
                    "finish": [
                        34,
                        25
                    ],
                    "start": [
                        34,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                34,
                                25
                            ],
                            "start": [
                                34,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    34,
                    25
                ],
                "name": "spacing",
                "rawdesc": "The spacing between elements in pixels",
                "start": [
                    34,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "RowModel",
        "type": "type",
        "view": "RowModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "subscriptions/init.lua",
                "finish": [
                    2,
                    23
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "Subscriptions",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        3,
                        40
                    ],
                    "start": [
                        3,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                3,
                                40
                            ],
                            "start": [
                                3,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "HyprlandSubscription"
                        }
                    ],
                    "view": "HyprlandSubscription?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    3,
                    40
                ],
                "name": "hyprland",
                "start": [
                    3,
                    10
                ],
                "type": "doc.field",
                "view": "HyprlandSubscription?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "List of signal names (the `key` of the table) that will be sent when pressing down the specified modifiers and a character. The first parameter of the value tuple is `modifiers`, which are seperated by commas (i.e. `\"shift,super\"` would work when `shift` and `super` are being pressed). The 2nd parameter is a single character or lowercase name for the keybind",
                "extends": {
                    "finish": [
                        7,
                        56
                    ],
                    "start": [
                        7,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                56
                            ],
                            "start": [
                                7,
                                20
                            ],
                            "type": "doc.type.sign",
                            "view": "table<string, [string|\"alt\"|\"ctrl\"|\"shift\"|\"super\", string|\"alt\"|\"arrow_down\"|\"arrow_left\"|\"arrow_right\"...(+34)]>"
                        }
                    ],
                    "view": "table<string, [string|\"alt\"|\"ctrl\"|\"shift\"|\"super\", string|\"alt\"|\"arrow_down\"|\"arrow_left\"|\"arrow_right\"...(+34)]>?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    7,
                    56
                ],
                "name": "keybinds",
                "rawdesc": "List of signal names (the `key` of the table) that will be sent when pressing down the specified modifiers and a character. The first parameter of the value tuple is `modifiers`, which are seperated by commas (i.e. `\"shift,super\"` would work when `shift` and `super` are being pressed). The 2nd parameter is a single character or lowercase name for the keybind",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "table<string, [string|\"alt\"|\"ctrl\"|\"shift\"|\"super\", string|\"alt\"|\"arrow_down\"|\"arrow_left\"|\"arrow_right\"...(+34)]>?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        34
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                34
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "MprisSubscription"
                        }
                    ],
                    "view": "MprisSubscription?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    4,
                    34
                ],
                "name": "mpris",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "MprisSubscription?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        8,
                        49
                    ],
                    "start": [
                        8,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                8,
                                49
                            ],
                            "start": [
                                8,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "NotificationSubscription"
                        }
                    ],
                    "view": "NotificationSubscription?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    8,
                    49
                ],
                "name": "notifications",
                "start": [
                    8,
                    10
                ],
                "type": "doc.field",
                "view": "NotificationSubscription?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        45
                    ],
                    "start": [
                        5,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                45
                            ],
                            "start": [
                                5,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "SystemTraySubscription"
                        }
                    ],
                    "view": "SystemTraySubscription?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    5,
                    45
                ],
                "name": "system_tray",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "SystemTraySubscription?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal whenever a specified amount (the `key` of the table) is passed",
                "extends": {
                    "finish": [
                        6,
                        37
                    ],
                    "start": [
                        6,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                37
                            ],
                            "start": [
                                6,
                                16
                            ],
                            "type": "doc.type.sign",
                            "view": "table<number, string>"
                        }
                    ],
                    "view": "table<number, string>?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    6,
                    37
                ],
                "name": "time",
                "rawdesc": "Sends a signal whenever a specified amount (the `key` of the table) is passed",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "table<number, string>?",
                "visible": "public"
            }
        ],
        "name": "Subscriptions",
        "type": "type",
        "view": "Subscriptions"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "utils/init.lua",
                "finish": [
                    45,
                    20
                ],
                "start": [
                    45,
                    10
                ],
                "type": "doc.class",
                "view": "SwitchUtil",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is equal to the condition (`==`)",
                "extends": {
                    "finish": [
                        46,
                        66
                    ],
                    "start": [
                        46,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        46,
                                        33
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            46,
                                            28
                                        ],
                                        "start": [
                                            46,
                                            19
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        46,
                                        19
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        46,
                                        53
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            46,
                                            41
                                        ],
                                        "start": [
                                            46,
                                            35
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        46,
                                        35
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "fun():any"
                                }
                            ],
                            "finish": [
                                46,
                                66
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        46,
                                        66
                                    ],
                                    "start": [
                                        46,
                                        56
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                46,
                                                66
                                            ],
                                            "start": [
                                                46,
                                                56
                                            ],
                                            "type": "doc.type.name",
                                            "view": "SwitchUtil"
                                        }
                                    ],
                                    "view": "SwitchUtil"
                                }
                            ],
                            "start": [
                                46,
                                15
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: fun():any):SwitchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: fun():any):SwitchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    46,
                    66
                ],
                "name": "case",
                "rawdesc": "Checks if the `scrutinee` is equal to the condition (`==`)",
                "start": [
                    46,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: fun():any):SwitchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is less than or equal to the condition (`<=`)",
                "extends": {
                    "finish": [
                        47,
                        74
                    ],
                    "start": [
                        47,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        47,
                                        41
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            47,
                                            36
                                        ],
                                        "start": [
                                            47,
                                            27
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        47,
                                        27
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        47,
                                        61
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            47,
                                            49
                                        ],
                                        "start": [
                                            47,
                                            43
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        47,
                                        43
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "fun():any"
                                }
                            ],
                            "finish": [
                                47,
                                74
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        47,
                                        74
                                    ],
                                    "start": [
                                        47,
                                        64
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                47,
                                                74
                                            ],
                                            "start": [
                                                47,
                                                64
                                            ],
                                            "type": "doc.type.name",
                                            "view": "SwitchUtil"
                                        }
                                    ],
                                    "view": "SwitchUtil"
                                }
                            ],
                            "start": [
                                47,
                                23
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: fun():any):SwitchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: fun():any):SwitchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    47,
                    74
                ],
                "name": "case_less_eq",
                "rawdesc": "Checks if the `scrutinee` is less than or equal to the condition (`<=`)",
                "start": [
                    47,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: fun():any):SwitchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is less than to the condition (`<`)",
                "extends": {
                    "finish": [
                        49,
                        76
                    ],
                    "start": [
                        49,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        49,
                                        43
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            49,
                                            38
                                        ],
                                        "start": [
                                            49,
                                            29
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        49,
                                        29
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        49,
                                        63
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            49,
                                            51
                                        ],
                                        "start": [
                                            49,
                                            45
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        49,
                                        45
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "fun():any"
                                }
                            ],
                            "finish": [
                                49,
                                76
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        49,
                                        76
                                    ],
                                    "start": [
                                        49,
                                        66
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                49,
                                                76
                                            ],
                                            "start": [
                                                49,
                                                66
                                            ],
                                            "type": "doc.type.name",
                                            "view": "SwitchUtil"
                                        }
                                    ],
                                    "view": "SwitchUtil"
                                }
                            ],
                            "start": [
                                49,
                                25
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: fun():any):SwitchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: fun():any):SwitchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    49,
                    76
                ],
                "name": "case_less_than",
                "rawdesc": "Checks if the `scrutinee` is less than to the condition (`<`)",
                "start": [
                    49,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: fun():any):SwitchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is more than or equal to the condition (`>=`)",
                "extends": {
                    "finish": [
                        48,
                        74
                    ],
                    "start": [
                        48,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        48,
                                        41
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            48,
                                            36
                                        ],
                                        "start": [
                                            48,
                                            27
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        48,
                                        27
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        48,
                                        61
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            48,
                                            49
                                        ],
                                        "start": [
                                            48,
                                            43
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        48,
                                        43
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "fun():any"
                                }
                            ],
                            "finish": [
                                48,
                                74
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        48,
                                        74
                                    ],
                                    "start": [
                                        48,
                                        64
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                48,
                                                74
                                            ],
                                            "start": [
                                                48,
                                                64
                                            ],
                                            "type": "doc.type.name",
                                            "view": "SwitchUtil"
                                        }
                                    ],
                                    "view": "SwitchUtil"
                                }
                            ],
                            "start": [
                                48,
                                23
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: fun():any):SwitchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: fun():any):SwitchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    48,
                    74
                ],
                "name": "case_more_eq",
                "rawdesc": "Checks if the `scrutinee` is more than or equal to the condition (`>=`)",
                "start": [
                    48,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: fun():any):SwitchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if the `scrutinee` is more than to the condition (`>`)",
                "extends": {
                    "finish": [
                        50,
                        76
                    ],
                    "start": [
                        50,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        50,
                                        43
                                    ],
                                    "name": {
                                        "[1]": "condition",
                                        "finish": [
                                            50,
                                            38
                                        ],
                                        "start": [
                                            50,
                                            29
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "condition"
                                    },
                                    "start": [
                                        50,
                                        29
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        50,
                                        63
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            50,
                                            51
                                        ],
                                        "start": [
                                            50,
                                            45
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        50,
                                        45
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "fun():any"
                                }
                            ],
                            "finish": [
                                50,
                                76
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        50,
                                        76
                                    ],
                                    "start": [
                                        50,
                                        66
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                50,
                                                76
                                            ],
                                            "start": [
                                                50,
                                                66
                                            ],
                                            "type": "doc.type.name",
                                            "view": "SwitchUtil"
                                        }
                                    ],
                                    "view": "SwitchUtil"
                                }
                            ],
                            "start": [
                                50,
                                25
                            ],
                            "type": "doc.type.function",
                            "view": "fun(condition: any, result: fun():any):SwitchUtil"
                        }
                    ],
                    "view": "fun(condition: any, result: fun():any):SwitchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    50,
                    76
                ],
                "name": "case_more_than",
                "rawdesc": "Checks if the `scrutinee` is more than to the condition (`>`)",
                "start": [
                    50,
                    10
                ],
                "type": "doc.field",
                "view": "fun(condition: any, result: fun():any):SwitchUtil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Evaluates the found case, if no case was found then evaluate the fallback if it is provided",
                "extends": {
                    "finish": [
                        52,
                        24
                    ],
                    "start": [
                        52,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": {
                                "view": "unknown"
                            },
                            "finish": [
                                52,
                                24
                            ],
                            "returns": {
                                "view": "unknown"
                            },
                            "start": [
                                52,
                                19
                            ],
                            "type": "doc.type.function",
                            "view": "fun()"
                        }
                    ],
                    "view": "fun()"
                },
                "file": "utils/init.lua",
                "finish": [
                    52,
                    24
                ],
                "name": "collapse",
                "rawdesc": "Evaluates the found case, if no case was found then evaluate the fallback if it is provided",
                "start": [
                    52,
                    10
                ],
                "type": "doc.field",
                "view": "fun()",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "If none of the arms have a match, it will fallback to this result",
                "extends": {
                    "finish": [
                        51,
                        52
                    ],
                    "start": [
                        51,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        51,
                                        40
                                    ],
                                    "name": {
                                        "[1]": "result",
                                        "finish": [
                                            51,
                                            28
                                        ],
                                        "start": [
                                            51,
                                            22
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "result"
                                    },
                                    "start": [
                                        51,
                                        22
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "fun():any"
                                }
                            ],
                            "finish": [
                                51,
                                52
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        51,
                                        52
                                    ],
                                    "start": [
                                        51,
                                        43
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                51,
                                                52
                                            ],
                                            "start": [
                                                51,
                                                43
                                            ],
                                            "type": "doc.type.name",
                                            "view": "MatchUtil"
                                        }
                                    ],
                                    "view": "MatchUtil"
                                }
                            ],
                            "start": [
                                51,
                                18
                            ],
                            "type": "doc.type.function",
                            "view": "fun(result: fun():any):MatchUtil"
                        }
                    ],
                    "view": "fun(result: fun():any):MatchUtil"
                },
                "file": "utils/init.lua",
                "finish": [
                    51,
                    52
                ],
                "name": "default",
                "rawdesc": "If none of the arms have a match, it will fallback to this result",
                "start": [
                    51,
                    10
                ],
                "type": "doc.field",
                "view": "fun(result: fun():any):MatchUtil",
                "visible": "public"
            }
        ],
        "name": "SwitchUtil",
        "type": "type",
        "view": "SwitchUtil"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "subscriptions/init.lua",
                "finish": [
                    40,
                    32
                ],
                "start": [
                    40,
                    18
                ],
                "type": "doc.class",
                "view": "SystemTrayItem",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The category for this item",
                "extends": {
                    "finish": [
                        42,
                        31
                    ],
                    "start": [
                        42,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                31
                            ],
                            "start": [
                                42,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "\"application_status\"|\"communications\"|\"hardware\"|\"system_services\""
                        }
                    ],
                    "view": "\"application_status\"|\"communications\"|\"hardware\"|\"system_services\""
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    42,
                    31
                ],
                "name": "category",
                "rawdesc": "The category for this item",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "\"application_status\"|\"communications\"|\"hardware\"|\"system_services\"",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The name of the icon that should visualise the tray item",
                "extends": {
                    "finish": [
                        45,
                        27
                    ],
                    "start": [
                        45,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                45,
                                27
                            ],
                            "start": [
                                45,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    45,
                    27
                ],
                "name": "icon_name",
                "rawdesc": "The name of the icon that should visualise the tray item",
                "start": [
                    45,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The id of the pixmap to use.",
                "extends": {
                    "finish": [
                        46,
                        29
                    ],
                    "start": [
                        46,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                46,
                                29
                            ],
                            "start": [
                                46,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    46,
                    29
                ],
                "name": "icon_pixmap",
                "rawdesc": "The id of the pixmap to use.",
                "start": [
                    46,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A name that is unique for this application",
                "extends": {
                    "finish": [
                        41,
                        19
                    ],
                    "start": [
                        41,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                41,
                                19
                            ],
                            "start": [
                                41,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    41,
                    19
                ],
                "name": "id",
                "rawdesc": "A name that is unique for this application",
                "start": [
                    41,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Describes the status for this item or of the associated application",
                "extends": {
                    "finish": [
                        43,
                        27
                    ],
                    "start": [
                        43,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                43,
                                27
                            ],
                            "start": [
                                43,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"active\"|\"needs_attention\"|\"passive\"|\"unknown\""
                        }
                    ],
                    "view": "\"active\"|\"needs_attention\"|\"passive\"|\"unknown\""
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    43,
                    27
                ],
                "name": "status",
                "rawdesc": "Describes the status for this item or of the associated application",
                "start": [
                    43,
                    10
                ],
                "type": "doc.field",
                "view": "\"active\"|\"needs_attention\"|\"passive\"|\"unknown\"",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A name that describes the application, can be more descriptive than `id`, but it is also not nesscessary.",
                "extends": {
                    "finish": [
                        44,
                        23
                    ],
                    "start": [
                        44,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                44,
                                23
                            ],
                            "start": [
                                44,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    44,
                    23
                ],
                "name": "title",
                "rawdesc": "A name that describes the application, can be more descriptive than `id`, but it is also not nesscessary.",
                "start": [
                    44,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            }
        ],
        "name": "SystemTrayItem",
        "type": "type",
        "view": "SystemTrayItem"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "subscriptions/init.lua",
                "finish": [
                    25,
                    40
                ],
                "start": [
                    25,
                    18
                ],
                "type": "doc.class",
                "view": "SystemTraySubscription",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal every time items in the tray get updated",
                "extends": {
                    "finish": [
                        26,
                        24
                    ],
                    "start": [
                        26,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                26,
                                24
                            ],
                            "start": [
                                26,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "subscriptions/init.lua",
                "finish": [
                    26,
                    24
                ],
                "name": "update",
                "rawdesc": "Sends a signal every time items in the tray get updated",
                "start": [
                    26,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            }
        ],
        "name": "SystemTraySubscription",
        "type": "type",
        "view": "SystemTraySubscription"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "widgets/models.lua",
                "finish": [
                    17,
                    24
                ],
                "start": [
                    17,
                    10
                ],
                "type": "doc.class",
                "view": "TextInputModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "If enabled, makes it behave as if it were always focused",
                "extends": {
                    "finish": [
                        20,
                        32
                    ],
                    "start": [
                        20,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                20,
                                32
                            ],
                            "start": [
                                20,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    20,
                    32
                ],
                "name": "always_active",
                "rawdesc": "If enabled, makes it behave as if it were always focused",
                "start": [
                    20,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the line height of the",
                "extends": {
                    "finish": [
                        22,
                        33
                    ],
                    "start": [
                        22,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                22,
                                33
                            ],
                            "start": [
                                22,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "[\"absolute\", number]|[\"relative\", number]"
                        }
                    ],
                    "view": "([\"absolute\", number]|[\"relative\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    22,
                    33
                ],
                "name": "line_height",
                "rawdesc": "Sets the line height of the",
                "start": [
                    22,
                    10
                ],
                "type": "doc.field",
                "view": "([\"absolute\", number]|[\"relative\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Runs a signal when some text is typed in the text input, sends `text` in the signal data which contains the new text. Cannot pass through custom signals",
                "extends": {
                    "finish": [
                        24,
                        26
                    ],
                    "start": [
                        24,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                24,
                                26
                            ],
                            "start": [
                                24,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    24,
                    26
                ],
                "name": "on_input",
                "rawdesc": "Runs a signal when some text is typed in the text input, sends `text` in the signal data which contains the new text. Cannot pass through custom signals",
                "start": [
                    24,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a custom signal when the text input is focused and the enter key is pressed",
                "extends": {
                    "finish": [
                        25,
                        42
                    ],
                    "start": [
                        25,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                25,
                                27
                            ],
                            "start": [
                                25,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        },
                        {
                            "finish": [
                                25,
                                42
                            ],
                            "start": [
                                25,
                                30
                            ],
                            "type": "doc.type.name",
                            "view": "CustomSignal"
                        }
                    ],
                    "view": "(string|CustomSignal)?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    25,
                    42
                ],
                "name": "on_submit",
                "rawdesc": "Sends a custom signal when the text input is focused and the enter key is pressed",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "(string|CustomSignal)?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "If the text input should be a secure password input",
                "extends": {
                    "finish": [
                        23,
                        27
                    ],
                    "start": [
                        23,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                27
                            ],
                            "start": [
                                23,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    23,
                    27
                ],
                "name": "password",
                "rawdesc": "If the text input should be a secure password input",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Placeholder text for the text input",
                "extends": {
                    "finish": [
                        19,
                        29
                    ],
                    "start": [
                        19,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                19,
                                29
                            ],
                            "start": [
                                19,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    19,
                    29
                ],
                "name": "placeholder",
                "rawdesc": "Placeholder text for the text input",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the text size of the text input",
                "extends": {
                    "finish": [
                        26,
                        22
                    ],
                    "start": [
                        26,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                26,
                                22
                            ],
                            "start": [
                                26,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    26,
                    22
                ],
                "name": "size",
                "rawdesc": "Sets the text size of the text input",
                "start": [
                    26,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The text of the text input. Needs an external variable paired with `on_input` in order to change",
                "extends": {
                    "finish": [
                        18,
                        23
                    ],
                    "start": [
                        18,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                18,
                                23
                            ],
                            "start": [
                                18,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    18,
                    23
                ],
                "name": "value",
                "rawdesc": "The text of the text input. Needs an external variable paired with `on_input` in order to change",
                "start": [
                    18,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        21,
                        23
                    ],
                    "start": [
                        21,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                23
                            ],
                            "start": [
                                21,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    21,
                    23
                ],
                "name": "width",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "TextInputModel",
        "type": "type",
        "view": "TextInputModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            7,
                            38
                        ],
                        "start": [
                            7,
                            21
                        ],
                        "type": "doc.extends.name",
                        "view": "WidthHeightWidget"
                    }
                ],
                "file": "widgets/models.lua",
                "finish": [
                    7,
                    38
                ],
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "TextModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The text that should be displayed",
                "extends": {
                    "finish": [
                        8,
                        25
                    ],
                    "start": [
                        8,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                8,
                                25
                            ],
                            "start": [
                                8,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    8,
                    25
                ],
                "name": "content",
                "rawdesc": "The text that should be displayed",
                "start": [
                    8,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The font of the text",
                "extends": {
                    "finish": [
                        10,
                        20
                    ],
                    "start": [
                        10,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                10,
                                20
                            ],
                            "start": [
                                10,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "Font"
                        }
                    ],
                    "view": "Font?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    10,
                    20
                ],
                "name": "font",
                "rawdesc": "The font of the text",
                "start": [
                    10,
                    10
                ],
                "type": "doc.field",
                "view": "Font?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The font size of the text",
                "extends": {
                    "finish": [
                        9,
                        22
                    ],
                    "start": [
                        9,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                9,
                                22
                            ],
                            "start": [
                                9,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    9,
                    22
                ],
                "name": "size",
                "rawdesc": "The font size of the text",
                "start": [
                    9,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "TextModel",
        "type": "type",
        "view": "TextModel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    123,
                    21
                ],
                "start": [
                    123,
                    10
                ],
                "type": "doc.class",
                "view": "TimeService",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sends a signal after a specificed amount of time\n\n@*param* `duration` — How much time (in seconds) needs to pass until sending the signal\n\n@*param* `signal` — The signal to send once the specified amount of time has passed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                129,
                                8
                            ],
                            "name": "self",
                            "start": [
                                129,
                                8
                            ],
                            "type": "self",
                            "view": "TimeService"
                        },
                        {
                            "desc": "How much time (in seconds) needs to pass until sending the signal",
                            "finish": [
                                129,
                                37
                            ],
                            "name": "duration",
                            "rawdesc": "How much time (in seconds) needs to pass until sending the signal",
                            "start": [
                                129,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "The signal to send once the specified amount of time has passed",
                            "finish": [
                                129,
                                45
                            ],
                            "name": "signal",
                            "rawdesc": "The signal to send once the specified amount of time has passed",
                            "start": [
                                129,
                                39
                            ],
                            "type": "local",
                            "view": "CustomSignal"
                        }
                    ],
                    "desc": "Sends a signal after a specificed amount of time\n\n@*param* `duration` — How much time (in seconds) needs to pass until sending the signal\n\n@*param* `signal` — The signal to send once the specified amount of time has passed",
                    "finish": [
                        129,
                        50
                    ],
                    "rawdesc": "Sends a signal after a specificed amount of time",
                    "start": [
                        129,
                        0
                    ],
                    "type": "function",
                    "view": "(method) TimeService:delay(duration: number, signal: CustomSignal)"
                },
                "file": "services/init.lua",
                "finish": [
                    129,
                    28
                ],
                "name": "delay",
                "rawdesc": "Sends a signal after a specificed amount of time",
                "start": [
                    129,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "TimeService",
        "type": "type",
        "view": "TimeService"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "services/init.lua",
                "finish": [
                    47,
                    31
                ],
                "start": [
                    47,
                    18
                ],
                "type": "doc.class",
                "view": "TrackMetadata",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "List of artists of the song",
                "extends": {
                    "finish": [
                        50,
                        32
                    ],
                    "start": [
                        50,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                50,
                                32
                            ],
                            "start": [
                                50,
                                24
                            ],
                            "type": "doc.type.array",
                            "view": "string[]"
                        }
                    ],
                    "view": "string[]"
                },
                "file": "services/init.lua",
                "finish": [
                    50,
                    32
                ],
                "name": "album_artists",
                "rawdesc": "List of artists of the song",
                "start": [
                    50,
                    10
                ],
                "type": "doc.field",
                "view": "string[]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The album name of the song playing",
                "extends": {
                    "finish": [
                        49,
                        27
                    ],
                    "start": [
                        49,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                49,
                                27
                            ],
                            "start": [
                                49,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    49,
                    27
                ],
                "name": "album_name",
                "rawdesc": "The album name of the song playing",
                "start": [
                    49,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The length of the song in seconds",
                "extends": {
                    "finish": [
                        51,
                        23
                    ],
                    "start": [
                        51,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                51,
                                23
                            ],
                            "start": [
                                51,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "services/init.lua",
                "finish": [
                    51,
                    23
                ],
                "name": "length",
                "rawdesc": "The length of the song in seconds",
                "start": [
                    51,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The title of the song playing",
                "extends": {
                    "finish": [
                        48,
                        22
                    ],
                    "start": [
                        48,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                48,
                                22
                            ],
                            "start": [
                                48,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "services/init.lua",
                "finish": [
                    48,
                    22
                ],
                "name": "title",
                "rawdesc": "The title of the song playing",
                "start": [
                    48,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "TrackMetadata",
        "type": "type",
        "view": "TrackMetadata"
    },
    {
        "defines": [
            {
                "desc": "```lua\nTrayCategory:\n    | \"application_status\"\n    | \"communications\"\n    | \"system_services\"\n    | \"hardware\"\n```",
                "finish": [
                    32,
                    17
                ],
                "rawdesc": "```lua\nTrayCategory:\n    | \"application_status\"\n    | \"communications\"\n    | \"system_services\"\n    | \"hardware\"\n```",
                "start": [
                    28,
                    10
                ],
                "type": "doc.alias",
                "view": "\"application_status\"|\"communications\"|\"hardware\"|\"system_services\""
            }
        ],
        "fields": [],
        "name": "TrayCategory",
        "type": "type",
        "view": "TrayCategory"
    },
    {
        "defines": [
            {
                "desc": "```lua\nTrayStatus:\n    | \"active\"\n    | \"passive\"\n    | \"needs_attention\"\n    | \"unknown\"\n```",
                "finish": [
                    38,
                    16
                ],
                "rawdesc": "```lua\nTrayStatus:\n    | \"active\"\n    | \"passive\"\n    | \"needs_attention\"\n    | \"unknown\"\n```",
                "start": [
                    34,
                    10
                ],
                "type": "doc.alias",
                "view": "\"active\"|\"needs_attention\"|\"passive\"|\"unknown\""
            }
        ],
        "fields": [],
        "name": "TrayStatus",
        "type": "type",
        "view": "TrayStatus"
    },
    {
        "defines": [
            {
                "desc": "```lua\nVertical:\n    | \"top\"\n    | \"center\"\n    | \"bottom\"\n```",
                "finish": [
                    47,
                    15
                ],
                "rawdesc": "```lua\nVertical:\n    | \"top\"\n    | \"center\"\n    | \"bottom\"\n```",
                "start": [
                    44,
                    10
                ],
                "type": "doc.alias",
                "view": "\"bottom\"|\"center\"|\"top\""
            }
        ],
        "fields": [],
        "name": "Vertical",
        "type": "type",
        "view": "Vertical"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "widgets/models.lua",
                "finish": [
                    0,
                    16
                ],
                "start": [
                    0,
                    10
                ],
                "type": "doc.class",
                "view": "Widget",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1,
                        28
                    ],
                    "start": [
                        1,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1,
                                28
                            ],
                            "start": [
                                1,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "widgets/models.lua",
                "finish": [
                    1,
                    28
                ],
                "name": "widget_name",
                "start": [
                    1,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "Widget",
        "type": "type",
        "view": "Widget"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "widgets/init.lua",
                "finish": [
                    2,
                    17
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "Widgets",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "A container that emits a signal when pressed on\n\n@*param* `content_or_model` — The text to be displayed (shorthand) or the model for the button\n\n@*param* `extra_model` — The params for the shorthand. You do not need this if you provide a model in the first argument",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                21,
                                8
                            ],
                            "name": "self",
                            "start": [
                                21,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "desc": "The text to be displayed (shorthand) or the model for the button",
                            "finish": [
                                21,
                                40
                            ],
                            "name": "content_or_model",
                            "rawdesc": "The text to be displayed (shorthand) or the model for the button",
                            "start": [
                                21,
                                24
                            ],
                            "type": "local",
                            "view": "(string|ButtonModel)?"
                        },
                        {
                            "desc": "The params for the shorthand. You do not need this if you provide a model in the first argument",
                            "finish": [
                                21,
                                53
                            ],
                            "name": "extra_model",
                            "rawdesc": "The params for the shorthand. You do not need this if you provide a model in the first argument",
                            "start": [
                                21,
                                42
                            ],
                            "type": "local",
                            "view": "ButtonModel?"
                        }
                    ],
                    "desc": "A container that emits a signal when pressed on\n\n@*param* `content_or_model` — The text to be displayed (shorthand) or the model for the button\n\n@*param* `extra_model` — The params for the shorthand. You do not need this if you provide a model in the first argument",
                    "finish": [
                        21,
                        58
                    ],
                    "rawdesc": "A container that emits a signal when pressed on",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Widget"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:button(content_or_model?: string|ButtonModel, extra_model?: ButtonModel)\n  -> Widget"
                },
                "file": "widgets/init.lua",
                "finish": [
                    21,
                    23
                ],
                "name": "button",
                "rawdesc": "A container that emits a signal when pressed on",
                "start": [
                    21,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A container that can distribute content on the left, middle and right sides",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                65,
                                8
                            ],
                            "name": "self",
                            "start": [
                                65,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "finish": [
                                65,
                                32
                            ],
                            "name": "model",
                            "start": [
                                65,
                                27
                            ],
                            "type": "local",
                            "view": "CenterboxModel?"
                        }
                    ],
                    "desc": "A container that can distribute content on the left, middle and right sides",
                    "finish": [
                        65,
                        37
                    ],
                    "rawdesc": "A container that can distribute content on the left, middle and right sides",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Widget"
                        }
                    ],
                    "start": [
                        65,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:centerbox(model?: CenterboxModel)\n  -> Widget"
                },
                "file": "widgets/init.lua",
                "finish": [
                    65,
                    26
                ],
                "name": "centerbox",
                "rawdesc": "A container that can distribute content on the left, middle and right sides",
                "start": [
                    65,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A container that distributes content horizontally",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                51,
                                8
                            ],
                            "name": "self",
                            "start": [
                                51,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "finish": [
                                51,
                                29
                            ],
                            "name": "model",
                            "start": [
                                51,
                                24
                            ],
                            "type": "local",
                            "view": "ColumnModel?"
                        }
                    ],
                    "desc": "A container that distributes content horizontally",
                    "finish": [
                        60,
                        3
                    ],
                    "rawdesc": "A container that distributes content horizontally",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:column(model?: ColumnModel)\n  -> table"
                },
                "file": "widgets/init.lua",
                "finish": [
                    51,
                    23
                ],
                "name": "column",
                "rawdesc": "A container that distributes content horizontally",
                "start": [
                    51,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " A container that can be decorated or used for alignment",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                82,
                                8
                            ],
                            "name": "self",
                            "start": [
                                82,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "finish": [
                                82,
                                32
                            ],
                            "name": "model",
                            "start": [
                                82,
                                27
                            ],
                            "type": "local",
                            "view": "ContainerModel"
                        }
                    ],
                    "desc": " A container that can be decorated or used for alignment",
                    "finish": [
                        82,
                        37
                    ],
                    "rawdesc": " A container that can be decorated or used for alignment",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Widget"
                        }
                    ],
                    "start": [
                        82,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:container(model: ContainerModel)\n  -> Widget"
                },
                "file": "widgets/init.lua",
                "finish": [
                    82,
                    26
                ],
                "name": "container",
                "rawdesc": " A container that can be decorated or used for alignment",
                "start": [
                    82,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " A lazily generated, generic icon\n\n@*param* `icon_name_or_model` — The icon name (shorthand) or the model for the icon\n\n@*param* `extra_model` — Extra params for the shorthand. You do not need this if you already provided a model in the first argument",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                77,
                                8
                            ],
                            "name": "self",
                            "start": [
                                77,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "desc": "The icon name (shorthand) or the model for the icon",
                            "finish": [
                                77,
                                40
                            ],
                            "name": "icon_name_or_model",
                            "rawdesc": "The icon name (shorthand) or the model for the icon",
                            "start": [
                                77,
                                22
                            ],
                            "type": "local",
                            "view": "(string|IconModel)?"
                        },
                        {
                            "desc": "Extra params for the shorthand. You do not need this if you already provided a model in the first argument",
                            "finish": [
                                77,
                                53
                            ],
                            "name": "extra_model",
                            "rawdesc": "Extra params for the shorthand. You do not need this if you already provided a model in the first argument",
                            "start": [
                                77,
                                42
                            ],
                            "type": "local",
                            "view": "IconModel?"
                        }
                    ],
                    "desc": " A lazily generated, generic icon\n\n@*param* `icon_name_or_model` — The icon name (shorthand) or the model for the icon\n\n@*param* `extra_model` — Extra params for the shorthand. You do not need this if you already provided a model in the first argument",
                    "finish": [
                        77,
                        58
                    ],
                    "rawdesc": " A lazily generated, generic icon",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Widget"
                        }
                    ],
                    "start": [
                        77,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:icon(icon_name_or_model?: string|IconModel, extra_model?: IconModel)\n  -> Widget"
                },
                "file": "widgets/init.lua",
                "finish": [
                    77,
                    21
                ],
                "name": "icon",
                "rawdesc": " A lazily generated, generic icon",
                "start": [
                    77,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " A frame that displays an iamge while keeping a speciifed aspect ratio\n\n@*param* `content_or_model` — The text to be displayed (shorthand) or the model for the image\n\n@*param* `extra_model` — The params for the shorthand. You do not need this if you provide a model in the first argument",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                71,
                                8
                            ],
                            "name": "self",
                            "start": [
                                71,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "desc": "The text to be displayed (shorthand) or the model for the image",
                            "finish": [
                                71,
                                39
                            ],
                            "name": "content_or_model",
                            "rawdesc": "The text to be displayed (shorthand) or the model for the image",
                            "start": [
                                71,
                                23
                            ],
                            "type": "local",
                            "view": "(string|ImageModel)?"
                        },
                        {
                            "desc": "The params for the shorthand. You do not need this if you provide a model in the first argument",
                            "finish": [
                                71,
                                52
                            ],
                            "name": "extra_model",
                            "rawdesc": "The params for the shorthand. You do not need this if you provide a model in the first argument",
                            "start": [
                                71,
                                41
                            ],
                            "type": "local",
                            "view": "ImageModel?"
                        }
                    ],
                    "desc": " A frame that displays an iamge while keeping a speciifed aspect ratio\n\n@*param* `content_or_model` — The text to be displayed (shorthand) or the model for the image\n\n@*param* `extra_model` — The params for the shorthand. You do not need this if you provide a model in the first argument",
                    "finish": [
                        71,
                        57
                    ],
                    "rawdesc": " A frame that displays an iamge while keeping a speciifed aspect ratio",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Widget"
                        }
                    ],
                    "start": [
                        71,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:image(content_or_model?: string|ImageModel, extra_model?: ImageModel)\n  -> Widget"
                },
                "file": "widgets/init.lua",
                "finish": [
                    71,
                    22
                ],
                "name": "image",
                "rawdesc": " A frame that displays an iamge while keeping a speciifed aspect ratio",
                "start": [
                    71,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A container that distributes content horizontally",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                38,
                                8
                            ],
                            "name": "self",
                            "start": [
                                38,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "finish": [
                                38,
                                26
                            ],
                            "name": "model",
                            "start": [
                                38,
                                21
                            ],
                            "type": "local",
                            "view": "RowModel?"
                        }
                    ],
                    "desc": "A container that distributes content horizontally",
                    "finish": [
                        47,
                        3
                    ],
                    "rawdesc": "A container that distributes content horizontally",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        38,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:row(model?: RowModel)\n  -> table"
                },
                "file": "widgets/init.lua",
                "finish": [
                    38,
                    20
                ],
                "name": "row",
                "rawdesc": "A container that distributes content horizontally",
                "start": [
                    38,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Creates a signal that can send in custom data\n\n@*param* `signal_data` — Data to be sent through the signal",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                34,
                                8
                            ],
                            "name": "self",
                            "start": [
                                34,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "finish": [
                                34,
                                35
                            ],
                            "name": "signal_name",
                            "start": [
                                34,
                                24
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Data to be sent through the signal",
                            "finish": [
                                34,
                                48
                            ],
                            "name": "signal_data",
                            "rawdesc": "Data to be sent through the signal",
                            "start": [
                                34,
                                37
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Creates a signal that can send in custom data\n\n@*param* `signal_data` — Data to be sent through the signal",
                    "finish": [
                        34,
                        53
                    ],
                    "rawdesc": "Creates a signal that can send in custom data",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "CustomSignal"
                        }
                    ],
                    "start": [
                        34,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:signal(signal_name: string, signal_data: table)\n  -> CustomSignal"
                },
                "file": "widgets/init.lua",
                "finish": [
                    34,
                    23
                ],
                "name": "signal",
                "rawdesc": "Creates a signal that can send in custom data",
                "start": [
                    34,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A widget that holds text\n\n@*param* `content_or_model` — The text to be displayed (shorthand) or the model for the text\n\n@*param* `extra_model` — Extra params for the shorthand. You do not need this if you provide a model in the first argument",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                15,
                                8
                            ],
                            "name": "self",
                            "start": [
                                15,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "desc": "The text to be displayed (shorthand) or the model for the text",
                            "finish": [
                                15,
                                38
                            ],
                            "name": "content_or_model",
                            "rawdesc": "The text to be displayed (shorthand) or the model for the text",
                            "start": [
                                15,
                                22
                            ],
                            "type": "local",
                            "view": "(string|TextModel)?"
                        },
                        {
                            "desc": "Extra params for the shorthand. You do not need this if you provide a model in the first argument",
                            "finish": [
                                15,
                                51
                            ],
                            "name": "extra_model",
                            "rawdesc": "Extra params for the shorthand. You do not need this if you provide a model in the first argument",
                            "start": [
                                15,
                                40
                            ],
                            "type": "local",
                            "view": "TextModel?"
                        }
                    ],
                    "desc": "A widget that holds text\n\n@*param* `content_or_model` — The text to be displayed (shorthand) or the model for the text\n\n@*param* `extra_model` — Extra params for the shorthand. You do not need this if you provide a model in the first argument",
                    "finish": [
                        15,
                        56
                    ],
                    "rawdesc": "A widget that holds text",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Widget"
                        }
                    ],
                    "start": [
                        15,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:text(content_or_model?: string|TextModel, extra_model?: TextModel)\n  -> Widget"
                },
                "file": "widgets/init.lua",
                "finish": [
                    15,
                    21
                ],
                "name": "text",
                "rawdesc": "A widget that holds text",
                "start": [
                    15,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " A field which can be filled with text.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                28,
                                8
                            ],
                            "name": "self",
                            "start": [
                                28,
                                8
                            ],
                            "type": "self",
                            "view": "Widgets"
                        },
                        {
                            "finish": [
                                28,
                                44
                            ],
                            "name": "content_or_model",
                            "start": [
                                28,
                                28
                            ],
                            "type": "local",
                            "view": "string|TextInputModel"
                        },
                        {
                            "finish": [
                                28,
                                57
                            ],
                            "name": "placeholder",
                            "start": [
                                28,
                                46
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                28,
                                64
                            ],
                            "name": "model",
                            "start": [
                                28,
                                59
                            ],
                            "type": "local",
                            "view": "TextInputModel?"
                        }
                    ],
                    "desc": " A field which can be filled with text.",
                    "finish": [
                        28,
                        69
                    ],
                    "rawdesc": " A field which can be filled with text.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Widget"
                        }
                    ],
                    "start": [
                        28,
                        0
                    ],
                    "type": "function",
                    "view": "(method) Widgets:text_input(content_or_model: string|TextInputModel, placeholder?: string, model?: TextInputModel)\n  -> Widget"
                },
                "file": "widgets/init.lua",
                "finish": [
                    28,
                    27
                ],
                "name": "text_input",
                "rawdesc": " A field which can be filled with text.",
                "start": [
                    28,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Widgets",
        "type": "type",
        "view": "Widgets"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "widgets/models.lua",
                "finish": [
                    3,
                    27
                ],
                "start": [
                    3,
                    10
                ],
                "type": "doc.class",
                "view": "WidthHeightWidget",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the height of the widget",
                "extends": {
                    "finish": [
                        5,
                        24
                    ],
                    "start": [
                        5,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                24
                            ],
                            "start": [
                                5,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    5,
                    24
                ],
                "name": "height",
                "rawdesc": "Sets the height of the widget",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the width of the widget",
                "extends": {
                    "finish": [
                        4,
                        23
                    ],
                    "start": [
                        4,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                23
                            ],
                            "start": [
                                4,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number]"
                        }
                    ],
                    "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?"
                },
                "file": "widgets/models.lua",
                "finish": [
                    4,
                    23
                ],
                "name": "width",
                "rawdesc": "Sets the width of the widget",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "(\"fill\"|\"shrink\"|[\"fill_portion\", number]|[\"fixed\", number])?",
                "visible": "public"
            }
        ],
        "name": "WidthHeightWidget",
        "type": "type",
        "view": "WidthHeightWidget"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "init.lua",
                "finish": [
                    18,
                    21
                ],
                "start": [
                    18,
                    10
                ],
                "type": "doc.class",
                "view": "WindowModel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        22,
                        26
                    ],
                    "start": [
                        22,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                22,
                                26
                            ],
                            "start": [
                                22,
                                18
                            ],
                            "type": "doc.type.array",
                            "view": "\"bottom\"|\"left\"|\"right\"|\"top\"[]"
                        }
                    ],
                    "view": "\"bottom\"|\"left\"|\"right\"|\"top\"[]?"
                },
                "file": "init.lua",
                "finish": [
                    22,
                    26
                ],
                "name": "anchor",
                "start": [
                    22,
                    10
                ],
                "type": "doc.field",
                "view": "\"bottom\"|\"left\"|\"right\"|\"top\"[]?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "How much space should the window reserve, set it to `\"ignore\"` if you want it to ignore other layers",
                "extends": {
                    "finish": [
                        24,
                        44
                    ],
                    "start": [
                        24,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                24,
                                33
                            ],
                            "start": [
                                24,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                24,
                                44
                            ],
                            "start": [
                                24,
                                36
                            ],
                            "type": "doc.type.string",
                            "view": "\"ignore\""
                        }
                    ],
                    "view": "(integer|\"ignore\")?"
                },
                "file": "init.lua",
                "finish": [
                    24,
                    44
                ],
                "name": "exclusive_zone",
                "rawdesc": "How much space should the window reserve, set it to `\"ignore\"` if you want it to ignore other layers",
                "start": [
                    24,
                    10
                ],
                "type": "doc.field",
                "view": "(integer|\"ignore\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        23,
                        27
                    ],
                    "start": [
                        23,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                27
                            ],
                            "start": [
                                23,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "init.lua",
                "finish": [
                    23,
                    27
                ],
                "name": "is_popup",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        25,
                        26
                    ],
                    "start": [
                        25,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                25,
                                26
                            ],
                            "start": [
                                25,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "\"exclusive\"|\"none\"|\"on_demand\""
                        }
                    ],
                    "view": "(\"exclusive\"|\"none\"|\"on_demand\")?"
                },
                "file": "init.lua",
                "finish": [
                    25,
                    26
                ],
                "name": "keymode",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "(\"exclusive\"|\"none\"|\"on_demand\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        26,
                        22
                    ],
                    "start": [
                        26,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                26,
                                22
                            ],
                            "start": [
                                26,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "\"background\"|\"bottom\"|\"top\""
                        }
                    ],
                    "view": "(\"background\"|\"bottom\"|\"top\")?"
                },
                "file": "init.lua",
                "finish": [
                    26,
                    22
                ],
                "name": "layer",
                "start": [
                    26,
                    10
                ],
                "type": "doc.field",
                "view": "(\"background\"|\"bottom\"|\"top\")?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "A dictionary of signal names and their respective logic that will be processed when the signal is called on. If a table value is provided, it will unpack it. If there are multiple signals with the same name, it will get overriden",
                "extends": {
                    "finish": [
                        20,
                        48
                    ],
                    "start": [
                        20,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                20,
                                31
                            ],
                            "start": [
                                20,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "{ [string]: fun(signal_data: table) }"
                        },
                        {
                            "finish": [
                                20,
                                48
                            ],
                            "start": [
                                20,
                                34
                            ],
                            "type": "doc.type.array",
                            "view": "{ [string]: fun(signal_data: table) }[]"
                        }
                    ],
                    "view": "({ [string]: fun(signal_data: table) }|{ [string]: fun(signal_data: table) }[])?"
                },
                "file": "init.lua",
                "finish": [
                    20,
                    48
                ],
                "name": "signals",
                "rawdesc": "A dictionary of signal names and their respective logic that will be processed when the signal is called on. If a table value is provided, it will unpack it. If there are multiple signals with the same name, it will get overriden",
                "start": [
                    20,
                    10
                ],
                "type": "doc.field",
                "view": "({ [string]: fun(signal_data: table) }|{ [string]: fun(signal_data: table) }[])?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Connects to an external processes by sending signals. All of the subscriptions are to be provided in a table",
                "extends": {
                    "finish": [
                        21,
                        38
                    ],
                    "start": [
                        21,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                38
                            ],
                            "start": [
                                21,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "Subscriptions"
                        }
                    ],
                    "view": "Subscriptions?"
                },
                "file": "init.lua",
                "finish": [
                    21,
                    38
                ],
                "name": "subscriptions",
                "rawdesc": "Connects to an external processes by sending signals. All of the subscriptions are to be provided in a table",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "Subscriptions?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Logic that dictates what widgets for the window to render",
                "extends": {
                    "finish": [
                        19,
                        28
                    ],
                    "start": [
                        19,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": {
                                "view": "unknown"
                            },
                            "finish": [
                                19,
                                28
                            ],
                            "returns": [
                                {
                                    "finish": [
                                        19,
                                        28
                                    ],
                                    "start": [
                                        19,
                                        22
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                19,
                                                28
                                            ],
                                            "start": [
                                                19,
                                                22
                                            ],
                                            "type": "doc.type.name",
                                            "view": "Widget"
                                        }
                                    ],
                                    "view": "Widget"
                                }
                            ],
                            "start": [
                                19,
                                15
                            ],
                            "type": "doc.type.function",
                            "view": "fun():Widget"
                        }
                    ],
                    "view": "fun():Widget"
                },
                "file": "init.lua",
                "finish": [
                    19,
                    28
                ],
                "name": "view",
                "rawdesc": "Logic that dictates what widgets for the window to render",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "fun():Widget",
                "visible": "public"
            }
        ],
        "name": "WindowModel",
        "type": "type",
        "view": "WindowModel"
    },
    {
        "defines": [
            {
                "finish": [
                    16,
                    60
                ],
                "start": [
                    16,
                    10
                ],
                "type": "doc.alias",
                "view": "{ [string]: fun(signal_data: table) }"
            }
        ],
        "fields": [],
        "name": "WindowSignal",
        "type": "type",
        "view": "WindowSignal"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/54/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_G\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    69,
                    12
                ],
                "rawdesc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/54/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_G\"])\n",
                "start": [
                    69,
                    10
                ],
                "type": "doc.class",
                "view": "_G",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "_G",
        "type": "type",
        "view": "_G"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/54/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_G\"])\n",
                "extends": {
                    "desc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/54/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_G\"])\n",
                    "finish": [
                        70,
                        7
                    ],
                    "rawdesc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/54/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_G\"])\n",
                    "start": [
                        70,
                        5
                    ],
                    "type": "table",
                    "view": "_G"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    70,
                    2
                ],
                "rawdesc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/54/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_G\"])\n",
                "start": [
                    70,
                    0
                ],
                "type": "setglobal",
                "view": "_G",
                "visible": "public"
            }
        ],
        "name": "_G",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_VERSION\"])\n",
                "extends": {
                    "finish": [
                        404,
                        20
                    ],
                    "start": [
                        404,
                        11
                    ],
                    "type": "string",
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    404,
                    8
                ],
                "rawdesc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_VERSION\"])\n",
                "start": [
                    404,
                    0
                ],
                "type": "setglobal",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "_VERSION",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    3,
                    13
                ],
                "start": [
                    3,
                    10
                ],
                "type": "doc.class",
                "view": "any",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "any",
        "type": "type",
        "view": "any"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-arg\"])\n",
                "extends": {
                    "finish": [
                        8,
                        8
                    ],
                    "start": [
                        8,
                        6
                    ],
                    "type": "table",
                    "view": "string[]"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    8,
                    3
                ],
                "rawdesc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-arg\"])\n",
                "start": [
                    8,
                    0
                ],
                "type": "setglobal",
                "view": "string[]",
                "visible": "public"
            }
        ],
        "name": "arg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-assert\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                21,
                                17
                            ],
                            "name": "v",
                            "start": [
                                21,
                                16
                            ],
                            "type": "local",
                            "view": "<T>?"
                        },
                        {
                            "finish": [
                                21,
                                26
                            ],
                            "name": "message",
                            "start": [
                                21,
                                19
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                21,
                                31
                            ],
                            "start": [
                                21,
                                28
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-assert\"])",
                    "finish": [
                        21,
                        36
                    ],
                    "rawdesc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-assert\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function assert(v?: <T>, message?: any, ...any)\n  -> <T>\n  2. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    21,
                    15
                ],
                "rawdesc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-assert\"])",
                "start": [
                    21,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "assert",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    5,
                    17
                ],
                "start": [
                    5,
                    10
                ],
                "type": "doc.class",
                "view": "boolean",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "boolean",
        "type": "type",
        "view": "boolean"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                41,
                                27
                            ],
                            "name": "opt",
                            "start": [
                                41,
                                24
                            ],
                            "type": "local",
                            "view": "(\"collect\"|\"count\"|\"generational\"|\"incremental\"|\"isrunning\"...(+3))?"
                        },
                        {
                            "finish": [
                                41,
                                32
                            ],
                            "start": [
                                41,
                                29
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                    "finish": [
                        41,
                        37
                    ],
                    "rawdesc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        41,
                        0
                    ],
                    "type": "function",
                    "view": "function collectgarbage(opt?: \"collect\"|\"count\"|\"generational\"|\"incremental\"|\"isrunning\"...(+3), ...any)\n  -> any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    41,
                    23
                ],
                "rawdesc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                "start": [
                    41,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "collectgarbage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine\"])\n",
                    "finish": [
                        8,
                        14
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine\"])\n",
                    "start": [
                        8,
                        12
                    ],
                    "type": "table",
                    "view": "coroutinelib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    8,
                    9
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine\"])\n",
                "start": [
                    8,
                    0
                ],
                "type": "setglobal",
                "view": "coroutinelib",
                "visible": "public"
            }
        ],
        "name": "coroutine",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                39,
                                27
                            ],
                            "name": "co",
                            "start": [
                                39,
                                25
                            ],
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                    "finish": [
                        39,
                        32
                    ],
                    "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                    "returns": [
                        {
                            "name": "noerror",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errorobject",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        39,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.close(co: thread)\n  -> noerror: boolean\n  2. errorobject: any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    39,
                    24
                ],
                "name": "close",
                "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                "start": [
                    39,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.close",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                18,
                                27
                            ],
                            "name": "f",
                            "start": [
                                18,
                                26
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                    "finish": [
                        18,
                        32
                    ],
                    "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "thread"
                        }
                    ],
                    "start": [
                        18,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.create(f: fun(...any):...unknown)\n  -> thread"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    18,
                    25
                ],
                "name": "create",
                "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                "start": [
                    18,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.create",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                28,
                                33
                            ],
                            "name": "co",
                            "start": [
                                28,
                                31
                            ],
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                    "finish": [
                        28,
                        38
                    ],
                    "rawdesc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        28,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.isyieldable(co?: thread)\n  -> boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    28,
                    30
                ],
                "name": "isyieldable",
                "rawdesc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                "start": [
                    28,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.isyieldable",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                50,
                                28
                            ],
                            "name": "co",
                            "start": [
                                50,
                                26
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                50,
                                34
                            ],
                            "name": "val1",
                            "start": [
                                50,
                                30
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                50,
                                39
                            ],
                            "start": [
                                50,
                                36
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                    "finish": [
                        50,
                        44
                    ],
                    "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        50,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.resume(co: thread, val1?: any, ...any)\n  -> success: boolean\n  2. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    50,
                    25
                ],
                "name": "resume",
                "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                "start": [
                    50,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.resume",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                    "finish": [
                        60,
                        32
                    ],
                    "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                    "returns": [
                        {
                            "name": "running",
                            "type": "function.return",
                            "view": "thread"
                        },
                        {
                            "name": "ismain",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        60,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.running()\n  -> running: thread\n  2. ismain: boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    60,
                    26
                ],
                "name": "running",
                "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                "start": [
                    60,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.running",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                74,
                                28
                            ],
                            "name": "co",
                            "start": [
                                74,
                                26
                            ],
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "finish": [
                        74,
                        33
                    ],
                    "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"dead\"|\"normal\"|\"running\"|\"suspended\""
                        }
                    ],
                    "start": [
                        74,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.status(co: thread)\n  -> \"dead\"|\"normal\"|\"running\"|\"suspended\""
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    74,
                    25
                ],
                "name": "status",
                "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                "start": [
                    74,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.status",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                25
                            ],
                            "name": "f",
                            "start": [
                                84,
                                24
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                    "finish": [
                        84,
                        30
                    ],
                    "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.wrap(f: fun(...any):...unknown)\n  -> fun(...any):...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    84,
                    23
                ],
                "name": "wrap",
                "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                "start": [
                    84,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.wrap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": true,
                "deprecated": false,
                "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                93,
                                28
                            ],
                            "start": [
                                93,
                                25
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                    "finish": [
                        93,
                        33
                    ],
                    "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        93,
                        0
                    ],
                    "type": "function",
                    "view": "(async) function coroutine.yield(...any)\n  -> ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    93,
                    24
                ],
                "name": "yield",
                "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                "start": [
                    93,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutine.yield",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    7,
                    22
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine\"])\n",
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "coroutinelib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                39,
                                27
                            ],
                            "name": "co",
                            "start": [
                                39,
                                25
                            ],
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                    "finish": [
                        39,
                        32
                    ],
                    "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                    "returns": [
                        {
                            "name": "noerror",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errorobject",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        39,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.close(co: thread)\n  -> noerror: boolean\n  2. errorobject: any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    39,
                    24
                ],
                "name": "close",
                "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                "start": [
                    39,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                18,
                                27
                            ],
                            "name": "f",
                            "start": [
                                18,
                                26
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                    "finish": [
                        18,
                        32
                    ],
                    "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "thread"
                        }
                    ],
                    "start": [
                        18,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.create(f: fun(...any):...unknown)\n  -> thread"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    18,
                    25
                ],
                "name": "create",
                "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                "start": [
                    18,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                28,
                                33
                            ],
                            "name": "co",
                            "start": [
                                28,
                                31
                            ],
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                    "finish": [
                        28,
                        38
                    ],
                    "rawdesc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        28,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.isyieldable(co?: thread)\n  -> boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    28,
                    30
                ],
                "name": "isyieldable",
                "rawdesc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                "start": [
                    28,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                50,
                                28
                            ],
                            "name": "co",
                            "start": [
                                50,
                                26
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                50,
                                34
                            ],
                            "name": "val1",
                            "start": [
                                50,
                                30
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                50,
                                39
                            ],
                            "start": [
                                50,
                                36
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                    "finish": [
                        50,
                        44
                    ],
                    "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        50,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.resume(co: thread, val1?: any, ...any)\n  -> success: boolean\n  2. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    50,
                    25
                ],
                "name": "resume",
                "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                "start": [
                    50,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                    "finish": [
                        60,
                        32
                    ],
                    "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                    "returns": [
                        {
                            "name": "running",
                            "type": "function.return",
                            "view": "thread"
                        },
                        {
                            "name": "ismain",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        60,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.running()\n  -> running: thread\n  2. ismain: boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    60,
                    26
                ],
                "name": "running",
                "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                "start": [
                    60,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                74,
                                28
                            ],
                            "name": "co",
                            "start": [
                                74,
                                26
                            ],
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "finish": [
                        74,
                        33
                    ],
                    "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"dead\"|\"normal\"|\"running\"|\"suspended\""
                        }
                    ],
                    "start": [
                        74,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.status(co: thread)\n  -> \"dead\"|\"normal\"|\"running\"|\"suspended\""
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    74,
                    25
                ],
                "name": "status",
                "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                "start": [
                    74,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                25
                            ],
                            "name": "f",
                            "start": [
                                84,
                                24
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                    "finish": [
                        84,
                        30
                    ],
                    "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "function coroutine.wrap(f: fun(...any):...unknown)\n  -> fun(...any):...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    84,
                    23
                ],
                "name": "wrap",
                "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                "start": [
                    84,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": true,
                "deprecated": false,
                "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                93,
                                28
                            ],
                            "start": [
                                93,
                                25
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                    "finish": [
                        93,
                        33
                    ],
                    "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        93,
                        0
                    ],
                    "type": "function",
                    "view": "(async) function coroutine.yield(...any)\n  -> ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": [
                    93,
                    24
                ],
                "name": "yield",
                "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                "start": [
                    93,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "coroutinelib",
        "type": "type",
        "view": "coroutinelib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug\"])\n",
                    "finish": [
                        8,
                        10
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug\"])\n",
                    "start": [
                        8,
                        8
                    ],
                    "type": "table",
                    "view": "debuglib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    8,
                    5
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug\"])\n",
                "start": [
                    8,
                    0
                ],
                "type": "setglobal",
                "view": "debuglib",
                "visible": "public"
            }
        ],
        "name": "debug",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                "extends": {
                    "args": [],
                    "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                    "finish": [
                        33,
                        26
                    ],
                    "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                    "start": [
                        33,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.debug()"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    33,
                    20
                ],
                "name": "debug",
                "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                "start": [
                    33,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.debug",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                44,
                                24
                            ],
                            "name": "o",
                            "start": [
                                44,
                                23
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                    "finish": [
                        44,
                        29
                    ],
                    "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        44,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getfenv(o: any)\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    44,
                    22
                ],
                "name": "getfenv",
                "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                "start": [
                    44,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.getfenv",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                56,
                                25
                            ],
                            "name": "co",
                            "start": [
                                56,
                                23
                            ],
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                    "finish": [
                        56,
                        30
                    ],
                    "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                    "returns": [
                        {
                            "name": "hook",
                            "type": "function.return",
                            "view": "function"
                        },
                        {
                            "name": "mask",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        56,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.gethook(co?: thread)\n  -> hook: function\n  2. mask: string\n  3. count: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    56,
                    22
                ],
                "name": "gethook",
                "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                "start": [
                    56,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.gethook",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                79,
                                29
                            ],
                            "name": "thread",
                            "start": [
                                79,
                                23
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                79,
                                32
                            ],
                            "name": "f",
                            "start": [
                                79,
                                31
                            ],
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                79,
                                38
                            ],
                            "name": "what",
                            "start": [
                                79,
                                34
                            ],
                            "type": "local",
                            "view": "(string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))?"
                        }
                    ],
                    "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "finish": [
                        79,
                        43
                    ],
                    "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "debuginfo"
                        }
                    ],
                    "start": [
                        79,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getinfo(thread: thread, f: integer|fun(...any):...unknown, what?: string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))\n  -> debuginfo"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    79,
                    22
                ],
                "name": "getinfo",
                "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                "start": [
                    79,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.getinfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                93,
                                30
                            ],
                            "name": "thread",
                            "start": [
                                93,
                                24
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                93,
                                33
                            ],
                            "name": "f",
                            "start": [
                                93,
                                32
                            ],
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                93,
                                40
                            ],
                            "name": "index",
                            "start": [
                                93,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                    "finish": [
                        93,
                        45
                    ],
                    "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        93,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getlocal(thread: thread, f: integer|fun(...any):...unknown, index: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    93,
                    23
                ],
                "name": "getlocal",
                "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                "start": [
                    93,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.getlocal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                103,
                                34
                            ],
                            "name": "object",
                            "start": [
                                103,
                                28
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                    "finish": [
                        103,
                        39
                    ],
                    "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        103,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    103,
                    27
                ],
                "name": "getmetatable",
                "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                "start": [
                    103,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.getmetatable",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                    "finish": [
                        112,
                        32
                    ],
                    "rawdesc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        112,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getregistry()\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    112,
                    26
                ],
                "name": "getregistry",
                "rawdesc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                "start": [
                    112,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.getregistry",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                124,
                                27
                            ],
                            "name": "f",
                            "start": [
                                124,
                                26
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                124,
                                31
                            ],
                            "name": "up",
                            "start": [
                                124,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                    "finish": [
                        124,
                        36
                    ],
                    "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        124,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getupvalue(f: fun(...any):...unknown, up: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    124,
                    25
                ],
                "name": "getupvalue",
                "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                "start": [
                    124,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.getupvalue",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                139,
                                29
                            ],
                            "name": "u",
                            "start": [
                                139,
                                28
                            ],
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": [
                                139,
                                32
                            ],
                            "name": "n",
                            "start": [
                                139,
                                31
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                    "finish": [
                        139,
                        37
                    ],
                    "rawdesc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        139,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getuservalue(u: userdata, n?: integer)\n  -> any\n  2. boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    139,
                    27
                ],
                "name": "getuservalue",
                "rawdesc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                "start": [
                    139,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.getuservalue",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                154,
                                35
                            ],
                            "name": "limit",
                            "start": [
                                154,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                    "finish": [
                        154,
                        40
                    ],
                    "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|integer"
                        }
                    ],
                    "start": [
                        154,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setcstacklimit(limit: integer)\n  -> boolean|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    154,
                    29
                ],
                "name": "setcstacklimit",
                "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                "start": [
                    154,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.setcstacklimit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                166,
                                29
                            ],
                            "name": "object",
                            "start": [
                                166,
                                23
                            ],
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": [
                                166,
                                34
                            ],
                            "name": "env",
                            "start": [
                                166,
                                31
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                    "finish": [
                        166,
                        39
                    ],
                    "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                    "returns": [
                        {
                            "name": "object",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": [
                        166,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setfenv(object: <T>, env: table)\n  -> object: <T>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    166,
                    22
                ],
                "name": "setfenv",
                "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                "start": [
                    166,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.setfenv",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                185,
                                29
                            ],
                            "name": "thread",
                            "start": [
                                185,
                                23
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                185,
                                35
                            ],
                            "name": "hook",
                            "start": [
                                185,
                                31
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                185,
                                41
                            ],
                            "name": "mask",
                            "start": [
                                185,
                                37
                            ],
                            "type": "local",
                            "view": "string|\"c\"|\"l\"|\"r\""
                        },
                        {
                            "finish": [
                                185,
                                48
                            ],
                            "name": "count",
                            "start": [
                                185,
                                43
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "finish": [
                        185,
                        53
                    ],
                    "rawdesc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "start": [
                        185,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.sethook(thread: thread, hook: fun(...any):...unknown, mask: string|\"c\"|\"l\"|\"r\", count?: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    185,
                    22
                ],
                "name": "sethook",
                "rawdesc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                "start": [
                    185,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.sethook",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                198,
                                30
                            ],
                            "name": "thread",
                            "start": [
                                198,
                                24
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                198,
                                37
                            ],
                            "name": "level",
                            "start": [
                                198,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                198,
                                44
                            ],
                            "name": "index",
                            "start": [
                                198,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                198,
                                51
                            ],
                            "name": "value",
                            "start": [
                                198,
                                46
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                    "finish": [
                        198,
                        56
                    ],
                    "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        198,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setlocal(thread: thread, level: integer, index: integer, value: any)\n  -> name: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    198,
                    23
                ],
                "name": "setlocal",
                "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                "start": [
                    198,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.setlocal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                209,
                                33
                            ],
                            "name": "value",
                            "start": [
                                209,
                                28
                            ],
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": [
                                209,
                                39
                            ],
                            "name": "meta",
                            "start": [
                                209,
                                35
                            ],
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                    "finish": [
                        209,
                        44
                    ],
                    "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": [
                        209,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setmetatable(value: <T>, meta?: table)\n  -> value: <T>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    209,
                    27
                ],
                "name": "setmetatable",
                "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                "start": [
                    209,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.setmetatable",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                220,
                                27
                            ],
                            "name": "f",
                            "start": [
                                220,
                                26
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                220,
                                31
                            ],
                            "name": "up",
                            "start": [
                                220,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                220,
                                38
                            ],
                            "name": "value",
                            "start": [
                                220,
                                33
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                    "finish": [
                        220,
                        43
                    ],
                    "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        220,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setupvalue(f: fun(...any):...unknown, up: integer, value: any)\n  -> name: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    220,
                    25
                ],
                "name": "setupvalue",
                "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                "start": [
                    220,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.setupvalue",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                234,
                                33
                            ],
                            "name": "udata",
                            "start": [
                                234,
                                28
                            ],
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": [
                                234,
                                40
                            ],
                            "name": "value",
                            "start": [
                                234,
                                35
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                234,
                                43
                            ],
                            "name": "n",
                            "start": [
                                234,
                                42
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                    "finish": [
                        234,
                        48
                    ],
                    "rawdesc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                    "returns": [
                        {
                            "name": "udata",
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": [
                        234,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setuservalue(udata: userdata, value: any, n?: integer)\n  -> udata: userdata"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    234,
                    27
                ],
                "name": "setuservalue",
                "rawdesc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                "start": [
                    234,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.setuservalue",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                247,
                                31
                            ],
                            "name": "thread",
                            "start": [
                                247,
                                25
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                247,
                                40
                            ],
                            "name": "message",
                            "start": [
                                247,
                                33
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                247,
                                47
                            ],
                            "name": "level",
                            "start": [
                                247,
                                42
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                    "finish": [
                        247,
                        52
                    ],
                    "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                    "returns": [
                        {
                            "name": "message",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        247,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.traceback(thread: thread, message?: any, level?: integer)\n  -> message: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    247,
                    24
                ],
                "name": "traceback",
                "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                "start": [
                    247,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.traceback",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                259,
                                26
                            ],
                            "name": "f",
                            "start": [
                                259,
                                25
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                259,
                                29
                            ],
                            "name": "n",
                            "start": [
                                259,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                    "finish": [
                        259,
                        34
                    ],
                    "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                    "returns": [
                        {
                            "name": "id",
                            "type": "function.return",
                            "view": "lightuserdata"
                        }
                    ],
                    "start": [
                        259,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.upvalueid(f: fun(...any):...unknown, n: integer)\n  -> id: lightuserdata"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    259,
                    24
                ],
                "name": "upvalueid",
                "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                "start": [
                    259,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.upvalueid",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                271,
                                29
                            ],
                            "name": "f1",
                            "start": [
                                271,
                                27
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                271,
                                33
                            ],
                            "name": "n1",
                            "start": [
                                271,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                271,
                                37
                            ],
                            "name": "f2",
                            "start": [
                                271,
                                35
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                271,
                                41
                            ],
                            "name": "n2",
                            "start": [
                                271,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                    "finish": [
                        271,
                        46
                    ],
                    "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                    "start": [
                        271,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.upvaluejoin(f1: fun(...any):...unknown, n1: integer, f2: fun(...any):...unknown, n2: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    271,
                    26
                ],
                "name": "upvaluejoin",
                "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                "start": [
                    271,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debug.upvaluejoin",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    10,
                    19
                ],
                "start": [
                    10,
                    10
                ],
                "type": "doc.class",
                "view": "debuginfo",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        26,
                        31
                    ],
                    "start": [
                        26,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                26,
                                31
                            ],
                            "start": [
                                26,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        }
                    ],
                    "view": "table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    26,
                    31
                ],
                "name": "activelines",
                "start": [
                    26,
                    10
                ],
                "type": "doc.field",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        18,
                        33
                    ],
                    "start": [
                        18,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                18,
                                33
                            ],
                            "start": [
                                18,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    18,
                    33
                ],
                "name": "currentline",
                "start": [
                    18,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        24,
                        33
                    ],
                    "start": [
                        24,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                24,
                                33
                            ],
                            "start": [
                                24,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    24,
                    33
                ],
                "name": "ftransfer",
                "start": [
                    24,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        23,
                        34
                    ],
                    "start": [
                        23,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                34
                            ],
                            "start": [
                                23,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "function"
                        }
                    ],
                    "view": "function"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    23,
                    34
                ],
                "name": "func",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        19,
                        33
                    ],
                    "start": [
                        19,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                19,
                                33
                            ],
                            "start": [
                                19,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    19,
                    33
                ],
                "name": "istailcall",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        22,
                        33
                    ],
                    "start": [
                        22,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                22,
                                33
                            ],
                            "start": [
                                22,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    22,
                    33
                ],
                "name": "isvararg",
                "start": [
                    22,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        33
                    ],
                    "start": [
                        16,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                16,
                                33
                            ],
                            "start": [
                                16,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    16,
                    33
                ],
                "name": "lastlinedefined",
                "start": [
                    16,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        15,
                        33
                    ],
                    "start": [
                        15,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                15,
                                33
                            ],
                            "start": [
                                15,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    15,
                    33
                ],
                "name": "linedefined",
                "start": [
                    15,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        11,
                        32
                    ],
                    "start": [
                        11,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                11,
                                32
                            ],
                            "start": [
                                11,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    11,
                    32
                ],
                "name": "name",
                "start": [
                    11,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        12,
                        32
                    ],
                    "start": [
                        12,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                12,
                                32
                            ],
                            "start": [
                                12,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    12,
                    32
                ],
                "name": "namewhat",
                "start": [
                    12,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        21,
                        33
                    ],
                    "start": [
                        21,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                33
                            ],
                            "start": [
                                21,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    21,
                    33
                ],
                "name": "nparams",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        25,
                        33
                    ],
                    "start": [
                        25,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                25,
                                33
                            ],
                            "start": [
                                25,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    25,
                    33
                ],
                "name": "ntransfer",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        20,
                        33
                    ],
                    "start": [
                        20,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                20,
                                33
                            ],
                            "start": [
                                20,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    20,
                    33
                ],
                "name": "nups",
                "start": [
                    20,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        14,
                        32
                    ],
                    "start": [
                        14,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                14,
                                32
                            ],
                            "start": [
                                14,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    14,
                    32
                ],
                "name": "short_src",
                "start": [
                    14,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        13,
                        32
                    ],
                    "start": [
                        13,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                13,
                                32
                            ],
                            "start": [
                                13,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    13,
                    32
                ],
                "name": "source",
                "start": [
                    13,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        17,
                        32
                    ],
                    "start": [
                        17,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                17,
                                32
                            ],
                            "start": [
                                17,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    17,
                    32
                ],
                "name": "what",
                "start": [
                    17,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "debuginfo",
        "type": "type",
        "view": "debuginfo"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    7,
                    18
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug\"])\n",
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "debuglib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                "extends": {
                    "args": [],
                    "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                    "finish": [
                        33,
                        26
                    ],
                    "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                    "start": [
                        33,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.debug()"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    33,
                    20
                ],
                "name": "debug",
                "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                "start": [
                    33,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                44,
                                24
                            ],
                            "name": "o",
                            "start": [
                                44,
                                23
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                    "finish": [
                        44,
                        29
                    ],
                    "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        44,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getfenv(o: any)\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    44,
                    22
                ],
                "name": "getfenv",
                "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                "start": [
                    44,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                56,
                                25
                            ],
                            "name": "co",
                            "start": [
                                56,
                                23
                            ],
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                    "finish": [
                        56,
                        30
                    ],
                    "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                    "returns": [
                        {
                            "name": "hook",
                            "type": "function.return",
                            "view": "function"
                        },
                        {
                            "name": "mask",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        56,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.gethook(co?: thread)\n  -> hook: function\n  2. mask: string\n  3. count: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    56,
                    22
                ],
                "name": "gethook",
                "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                "start": [
                    56,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                79,
                                29
                            ],
                            "name": "thread",
                            "start": [
                                79,
                                23
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                79,
                                32
                            ],
                            "name": "f",
                            "start": [
                                79,
                                31
                            ],
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                79,
                                38
                            ],
                            "name": "what",
                            "start": [
                                79,
                                34
                            ],
                            "type": "local",
                            "view": "(string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))?"
                        }
                    ],
                    "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "finish": [
                        79,
                        43
                    ],
                    "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "debuginfo"
                        }
                    ],
                    "start": [
                        79,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getinfo(thread: thread, f: integer|fun(...any):...unknown, what?: string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))\n  -> debuginfo"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    79,
                    22
                ],
                "name": "getinfo",
                "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                "start": [
                    79,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                93,
                                30
                            ],
                            "name": "thread",
                            "start": [
                                93,
                                24
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                93,
                                33
                            ],
                            "name": "f",
                            "start": [
                                93,
                                32
                            ],
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                93,
                                40
                            ],
                            "name": "index",
                            "start": [
                                93,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                    "finish": [
                        93,
                        45
                    ],
                    "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        93,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getlocal(thread: thread, f: integer|fun(...any):...unknown, index: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    93,
                    23
                ],
                "name": "getlocal",
                "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                "start": [
                    93,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                103,
                                34
                            ],
                            "name": "object",
                            "start": [
                                103,
                                28
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                    "finish": [
                        103,
                        39
                    ],
                    "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        103,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    103,
                    27
                ],
                "name": "getmetatable",
                "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                "start": [
                    103,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                    "finish": [
                        112,
                        32
                    ],
                    "rawdesc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        112,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getregistry()\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    112,
                    26
                ],
                "name": "getregistry",
                "rawdesc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                "start": [
                    112,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                124,
                                27
                            ],
                            "name": "f",
                            "start": [
                                124,
                                26
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                124,
                                31
                            ],
                            "name": "up",
                            "start": [
                                124,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                    "finish": [
                        124,
                        36
                    ],
                    "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        124,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getupvalue(f: fun(...any):...unknown, up: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    124,
                    25
                ],
                "name": "getupvalue",
                "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                "start": [
                    124,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                139,
                                29
                            ],
                            "name": "u",
                            "start": [
                                139,
                                28
                            ],
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": [
                                139,
                                32
                            ],
                            "name": "n",
                            "start": [
                                139,
                                31
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                    "finish": [
                        139,
                        37
                    ],
                    "rawdesc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        139,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.getuservalue(u: userdata, n?: integer)\n  -> any\n  2. boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    139,
                    27
                ],
                "name": "getuservalue",
                "rawdesc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                "start": [
                    139,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                154,
                                35
                            ],
                            "name": "limit",
                            "start": [
                                154,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                    "finish": [
                        154,
                        40
                    ],
                    "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|integer"
                        }
                    ],
                    "start": [
                        154,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setcstacklimit(limit: integer)\n  -> boolean|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    154,
                    29
                ],
                "name": "setcstacklimit",
                "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                "start": [
                    154,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                166,
                                29
                            ],
                            "name": "object",
                            "start": [
                                166,
                                23
                            ],
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": [
                                166,
                                34
                            ],
                            "name": "env",
                            "start": [
                                166,
                                31
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                    "finish": [
                        166,
                        39
                    ],
                    "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                    "returns": [
                        {
                            "name": "object",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": [
                        166,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setfenv(object: <T>, env: table)\n  -> object: <T>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    166,
                    22
                ],
                "name": "setfenv",
                "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                "start": [
                    166,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                185,
                                29
                            ],
                            "name": "thread",
                            "start": [
                                185,
                                23
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                185,
                                35
                            ],
                            "name": "hook",
                            "start": [
                                185,
                                31
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                185,
                                41
                            ],
                            "name": "mask",
                            "start": [
                                185,
                                37
                            ],
                            "type": "local",
                            "view": "string|\"c\"|\"l\"|\"r\""
                        },
                        {
                            "finish": [
                                185,
                                48
                            ],
                            "name": "count",
                            "start": [
                                185,
                                43
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "finish": [
                        185,
                        53
                    ],
                    "rawdesc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "start": [
                        185,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.sethook(thread: thread, hook: fun(...any):...unknown, mask: string|\"c\"|\"l\"|\"r\", count?: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    185,
                    22
                ],
                "name": "sethook",
                "rawdesc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                "start": [
                    185,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                198,
                                30
                            ],
                            "name": "thread",
                            "start": [
                                198,
                                24
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                198,
                                37
                            ],
                            "name": "level",
                            "start": [
                                198,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                198,
                                44
                            ],
                            "name": "index",
                            "start": [
                                198,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                198,
                                51
                            ],
                            "name": "value",
                            "start": [
                                198,
                                46
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                    "finish": [
                        198,
                        56
                    ],
                    "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        198,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setlocal(thread: thread, level: integer, index: integer, value: any)\n  -> name: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    198,
                    23
                ],
                "name": "setlocal",
                "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                "start": [
                    198,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                209,
                                33
                            ],
                            "name": "value",
                            "start": [
                                209,
                                28
                            ],
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": [
                                209,
                                39
                            ],
                            "name": "meta",
                            "start": [
                                209,
                                35
                            ],
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                    "finish": [
                        209,
                        44
                    ],
                    "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": [
                        209,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setmetatable(value: <T>, meta?: table)\n  -> value: <T>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    209,
                    27
                ],
                "name": "setmetatable",
                "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                "start": [
                    209,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                220,
                                27
                            ],
                            "name": "f",
                            "start": [
                                220,
                                26
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                220,
                                31
                            ],
                            "name": "up",
                            "start": [
                                220,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                220,
                                38
                            ],
                            "name": "value",
                            "start": [
                                220,
                                33
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                    "finish": [
                        220,
                        43
                    ],
                    "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        220,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setupvalue(f: fun(...any):...unknown, up: integer, value: any)\n  -> name: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    220,
                    25
                ],
                "name": "setupvalue",
                "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                "start": [
                    220,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                234,
                                33
                            ],
                            "name": "udata",
                            "start": [
                                234,
                                28
                            ],
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": [
                                234,
                                40
                            ],
                            "name": "value",
                            "start": [
                                234,
                                35
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                234,
                                43
                            ],
                            "name": "n",
                            "start": [
                                234,
                                42
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                    "finish": [
                        234,
                        48
                    ],
                    "rawdesc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                    "returns": [
                        {
                            "name": "udata",
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": [
                        234,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.setuservalue(udata: userdata, value: any, n?: integer)\n  -> udata: userdata"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    234,
                    27
                ],
                "name": "setuservalue",
                "rawdesc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                "start": [
                    234,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                247,
                                31
                            ],
                            "name": "thread",
                            "start": [
                                247,
                                25
                            ],
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": [
                                247,
                                40
                            ],
                            "name": "message",
                            "start": [
                                247,
                                33
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                247,
                                47
                            ],
                            "name": "level",
                            "start": [
                                247,
                                42
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                    "finish": [
                        247,
                        52
                    ],
                    "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                    "returns": [
                        {
                            "name": "message",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        247,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.traceback(thread: thread, message?: any, level?: integer)\n  -> message: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    247,
                    24
                ],
                "name": "traceback",
                "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                "start": [
                    247,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                259,
                                26
                            ],
                            "name": "f",
                            "start": [
                                259,
                                25
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                259,
                                29
                            ],
                            "name": "n",
                            "start": [
                                259,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                    "finish": [
                        259,
                        34
                    ],
                    "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                    "returns": [
                        {
                            "name": "id",
                            "type": "function.return",
                            "view": "lightuserdata"
                        }
                    ],
                    "start": [
                        259,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.upvalueid(f: fun(...any):...unknown, n: integer)\n  -> id: lightuserdata"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    259,
                    24
                ],
                "name": "upvalueid",
                "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                "start": [
                    259,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                271,
                                29
                            ],
                            "name": "f1",
                            "start": [
                                271,
                                27
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                271,
                                33
                            ],
                            "name": "n1",
                            "start": [
                                271,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                271,
                                37
                            ],
                            "name": "f2",
                            "start": [
                                271,
                                35
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                271,
                                41
                            ],
                            "name": "n2",
                            "start": [
                                271,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                    "finish": [
                        271,
                        46
                    ],
                    "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                    "start": [
                        271,
                        0
                    ],
                    "type": "function",
                    "view": "function debug.upvaluejoin(f1: fun(...any):...unknown, n1: integer, f2: fun(...any):...unknown, n2: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": [
                    271,
                    26
                ],
                "name": "upvaluejoin",
                "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                "start": [
                    271,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "debuglib",
        "type": "type",
        "view": "debuglib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-dofile\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                50,
                                24
                            ],
                            "name": "filename",
                            "start": [
                                50,
                                16
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-dofile\"])",
                    "finish": [
                        50,
                        29
                    ],
                    "rawdesc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-dofile\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        50,
                        0
                    ],
                    "type": "function",
                    "view": "function dofile(filename?: string)\n  -> ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    50,
                    15
                ],
                "rawdesc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-dofile\"])",
                "start": [
                    50,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "dofile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-error\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                62,
                                22
                            ],
                            "name": "message",
                            "start": [
                                62,
                                15
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                62,
                                29
                            ],
                            "name": "level",
                            "start": [
                                62,
                                24
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-error\"])",
                    "finish": [
                        62,
                        34
                    ],
                    "rawdesc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-error\"])",
                    "start": [
                        62,
                        0
                    ],
                    "type": "function",
                    "view": "function error(message: any, level?: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    62,
                    14
                ],
                "rawdesc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-error\"])",
                "start": [
                    62,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "error",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "finish": [
                    179,
                    34
                ],
                "rawdesc": "```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "start": [
                    179,
                    10
                ],
                "type": "doc.alias",
                "view": "\"exit\"|\"signal\""
            }
        ],
        "fields": [],
        "name": "exitcode",
        "type": "type",
        "view": "exitcode"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            7,
                            24
                        ],
                        "start": [
                            7,
                            17
                        ],
                        "type": "doc.extends.name",
                        "view": "boolean"
                    }
                ],
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    7,
                    24
                ],
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "false",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "false",
        "type": "type",
        "view": "false"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    170,
                    15
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                "start": [
                    170,
                    10
                ],
                "type": "doc.class",
                "view": "file*",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nClose `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                189,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                189,
                                8
                            ],
                            "type": "self",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nClose `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": [
                        189,
                        25
                    ],
                    "rawdesc": "\nClose `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        189,
                        0
                    ],
                    "type": "function",
                    "view": "(method) file*:close()\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    189,
                    19
                ],
                "name": "close",
                "rawdesc": "\nClose `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "start": [
                    189,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSaves any written data to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:flush\"])",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                196,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                196,
                                8
                            ],
                            "type": "self",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nSaves any written data to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:flush\"])",
                    "finish": [
                        196,
                        25
                    ],
                    "rawdesc": "\nSaves any written data to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:flush\"])",
                    "start": [
                        196,
                        0
                    ],
                    "type": "function",
                    "view": "(method) file*:flush()"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    196,
                    19
                ],
                "name": "flush",
                "rawdesc": "\nSaves any written data to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:flush\"])",
                "start": [
                    196,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n------\n```lua\nfor c in file:lines(...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                211,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                211,
                                8
                            ],
                            "type": "self",
                            "view": "file*"
                        },
                        {
                            "finish": [
                                211,
                                23
                            ],
                            "start": [
                                211,
                                20
                            ],
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\n------\n```lua\nfor c in file:lines(...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": [
                        211,
                        28
                    ],
                    "rawdesc": "\n------\n```lua\nfor c in file:lines(...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():any, ...unknown"
                        }
                    ],
                    "start": [
                        211,
                        0
                    ],
                    "type": "function",
                    "view": "(method) file*:lines(...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> fun():any, ...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    211,
                    19
                ],
                "name": "lines",
                "rawdesc": "\n------\n```lua\nfor c in file:lines(...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "start": [
                    211,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                222,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                222,
                                8
                            ],
                            "type": "self",
                            "view": "file*"
                        },
                        {
                            "finish": [
                                222,
                                22
                            ],
                            "start": [
                                222,
                                19
                            ],
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": [
                        222,
                        27
                    ],
                    "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        222,
                        0
                    ],
                    "type": "function",
                    "view": "(method) file*:read(...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> any\n  2. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    222,
                    18
                ],
                "name": "read",
                "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "start": [
                    222,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets and gets the file position, measured from the beginning of the file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:seek\"])\n\n\n```lua\nwhence:\n    | \"set\" -- Base is beginning of the file.\n   -> \"cur\" -- Base is current position.\n    | \"end\" -- Base is end of file.\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                238,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                238,
                                8
                            ],
                            "type": "self",
                            "view": "file*"
                        },
                        {
                            "finish": [
                                238,
                                25
                            ],
                            "name": "whence",
                            "start": [
                                238,
                                19
                            ],
                            "type": "local",
                            "view": "(\"cur\"|\"end\"|\"set\")?"
                        },
                        {
                            "finish": [
                                238,
                                33
                            ],
                            "name": "offset",
                            "start": [
                                238,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets and gets the file position, measured from the beginning of the file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:seek\"])\n\n\n```lua\nwhence:\n    | \"set\" -- Base is beginning of the file.\n   -> \"cur\" -- Base is current position.\n    | \"end\" -- Base is end of file.\n```",
                    "finish": [
                        238,
                        38
                    ],
                    "rawdesc": "\nSets and gets the file position, measured from the beginning of the file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:seek\"])\n\n\n```lua\nwhence:\n    | \"set\" -- Base is beginning of the file.\n   -> \"cur\" -- Base is current position.\n    | \"end\" -- Base is end of file.\n```",
                    "returns": [
                        {
                            "name": "offset",
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        238,
                        0
                    ],
                    "type": "function",
                    "view": "(method) file*:seek(whence?: \"cur\"|\"end\"|\"set\", offset?: integer)\n  -> offset: integer\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    238,
                    18
                ],
                "name": "seek",
                "rawdesc": "\nSets and gets the file position, measured from the beginning of the file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:seek\"])\n\n\n```lua\nwhence:\n    | \"set\" -- Base is beginning of the file.\n   -> \"cur\" -- Base is current position.\n    | \"end\" -- Base is end of file.\n```",
                "start": [
                    238,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the buffering mode for an output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:setvbuf\"])\n\n\n```lua\nmode:\n    | \"no\" -- Output operation appears immediately.\n    | \"full\" -- Performed only when the buffer is full.\n    | \"line\" -- Buffered until a newline is output.\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                252,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                252,
                                8
                            ],
                            "type": "self",
                            "view": "file*"
                        },
                        {
                            "finish": [
                                252,
                                26
                            ],
                            "name": "mode",
                            "start": [
                                252,
                                22
                            ],
                            "type": "local",
                            "view": "\"full\"|\"line\"|\"no\""
                        },
                        {
                            "finish": [
                                252,
                                32
                            ],
                            "name": "size",
                            "start": [
                                252,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the buffering mode for an output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:setvbuf\"])\n\n\n```lua\nmode:\n    | \"no\" -- Output operation appears immediately.\n    | \"full\" -- Performed only when the buffer is full.\n    | \"line\" -- Buffered until a newline is output.\n```",
                    "finish": [
                        252,
                        37
                    ],
                    "rawdesc": "\nSets the buffering mode for an output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:setvbuf\"])\n\n\n```lua\nmode:\n    | \"no\" -- Output operation appears immediately.\n    | \"full\" -- Performed only when the buffer is full.\n    | \"line\" -- Buffered until a newline is output.\n```",
                    "start": [
                        252,
                        0
                    ],
                    "type": "function",
                    "view": "(method) file*:setvbuf(mode: \"full\"|\"line\"|\"no\", size?: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    252,
                    21
                ],
                "name": "setvbuf",
                "rawdesc": "\nSets the buffering mode for an output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:setvbuf\"])\n\n\n```lua\nmode:\n    | \"no\" -- Output operation appears immediately.\n    | \"full\" -- Performed only when the buffer is full.\n    | \"line\" -- Buffered until a newline is output.\n```",
                "start": [
                    252,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nWrites the value of each of its arguments to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:write\"])",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                262,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                262,
                                8
                            ],
                            "type": "self",
                            "view": "file*"
                        },
                        {
                            "finish": [
                                262,
                                23
                            ],
                            "start": [
                                262,
                                20
                            ],
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nWrites the value of each of its arguments to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:write\"])",
                    "finish": [
                        262,
                        28
                    ],
                    "rawdesc": "\nWrites the value of each of its arguments to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:write\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        262,
                        0
                    ],
                    "type": "function",
                    "view": "(method) file*:write(...string|number)\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    262,
                    19
                ],
                "name": "write",
                "rawdesc": "\nWrites the value of each of its arguments to `file`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file:write\"])",
                "start": [
                    262,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "file*",
        "type": "type",
        "view": "file*"
    },
    {
        "defines": [
            {
                "desc": "```lua\nfiletype:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                "finish": [
                    144,
                    10
                ],
                "rawdesc": "```lua\nfiletype:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                "start": [
                    141,
                    10
                ],
                "type": "doc.alias",
                "view": "\"closed file\"|\"file\"|`nil`"
            }
        ],
        "fields": [],
        "name": "filetype",
        "type": "type",
        "view": "filetype"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    15,
                    18
                ],
                "start": [
                    15,
                    10
                ],
                "type": "doc.class",
                "view": "function",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "function",
        "type": "type",
        "view": "function"
    },
    {
        "defines": [
            {
                "desc": "```lua\ngcoptions:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                "finish": [
                    31,
                    19
                ],
                "rawdesc": "```lua\ngcoptions:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                "start": [
                    23,
                    10
                ],
                "type": "doc.alias",
                "view": "\"collect\"|\"count\"|\"generational\"|\"incremental\"|\"isrunning\"...(+3)"
            }
        ],
        "fields": [],
        "name": "gcoptions",
        "type": "type",
        "view": "gcoptions"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getfenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                81,
                                18
                            ],
                            "name": "f",
                            "start": [
                                81,
                                17
                            ],
                            "type": "local",
                            "view": "(integer|fun(...any):...unknown)?"
                        }
                    ],
                    "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getfenv\"])",
                    "finish": [
                        81,
                        23
                    ],
                    "rawdesc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getfenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        81,
                        0
                    ],
                    "type": "function",
                    "view": "function getfenv(f?: integer|fun(...any):...unknown)\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    81,
                    16
                ],
                "rawdesc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getfenv\"])",
                "start": [
                    81,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "getfenv",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getmetatable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                91,
                                28
                            ],
                            "name": "object",
                            "start": [
                                91,
                                22
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getmetatable\"])",
                    "finish": [
                        91,
                        33
                    ],
                    "rawdesc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getmetatable\"])",
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        91,
                        0
                    ],
                    "type": "function",
                    "view": "function getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    91,
                    21
                ],
                "rawdesc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getmetatable\"])",
                "start": [
                    91,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "getmetatable",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nhookmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                "finish": [
                    171,
                    8
                ],
                "rawdesc": "```lua\nhookmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                "start": [
                    168,
                    10
                ],
                "type": "doc.alias",
                "view": "string|\"c\"|\"l\"|\"r\""
            }
        ],
        "fields": [],
        "name": "hookmask",
        "type": "type",
        "view": "hookmask"
    },
    {
        "defines": [
            {
                "desc": "```lua\ninfowhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                "finish": [
                    66,
                    8
                ],
                "rawdesc": "```lua\ninfowhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                "start": [
                    58,
                    10
                ],
                "type": "doc.alias",
                "view": "string|\"L\"|\"S\"|\"f\"|\"l\"...(+4)"
            }
        ],
        "fields": [],
        "name": "infowhat",
        "type": "type",
        "view": "infowhat"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            9,
                            25
                        ],
                        "start": [
                            9,
                            19
                        ],
                        "type": "doc.extends.name",
                        "view": "number"
                    }
                ],
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    9,
                    25
                ],
                "start": [
                    9,
                    10
                ],
                "type": "doc.class",
                "view": "integer",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "integer",
        "type": "type",
        "view": "integer"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io\"])\n",
                    "finish": [
                        26,
                        7
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io\"])\n",
                    "start": [
                        26,
                        5
                    ],
                    "type": "table",
                    "view": "iolib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    26,
                    2
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io\"])\n",
                "start": [
                    26,
                    0
                ],
                "type": "setglobal",
                "view": "iolib",
                "visible": "public"
            }
        ],
        "name": "io",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                51,
                                22
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                51,
                                18
                            ],
                            "type": "local",
                            "view": "file*?"
                        }
                    ],
                    "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": [
                        51,
                        27
                    ],
                    "rawdesc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "function io.close(file?: file*)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    51,
                    17
                ],
                "name": "close",
                "rawdesc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "start": [
                    51,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.close",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                "extends": {
                    "args": [],
                    "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                    "finish": [
                        58,
                        23
                    ],
                    "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                    "start": [
                        58,
                        0
                    ],
                    "type": "function",
                    "view": "function io.flush()"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    58,
                    17
                ],
                "name": "flush",
                "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                "start": [
                    58,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.flush",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                67,
                                22
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                67,
                                18
                            ],
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                    "finish": [
                        67,
                        27
                    ],
                    "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                    "start": [
                        67,
                        0
                    ],
                    "type": "function",
                    "view": "function io.input(file: string|file*)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    67,
                    17
                ],
                "name": "input",
                "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                "start": [
                    67,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.input",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                83,
                                26
                            ],
                            "name": "filename",
                            "start": [
                                83,
                                18
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                83,
                                31
                            ],
                            "start": [
                                83,
                                28
                            ],
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": [
                        83,
                        36
                    ],
                    "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():any, ...unknown"
                        }
                    ],
                    "start": [
                        83,
                        0
                    ],
                    "type": "function",
                    "view": "function io.lines(filename?: string, ...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> fun():any, ...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    83,
                    17
                ],
                "name": "lines",
                "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "start": [
                    83,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.lines",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                95,
                                25
                            ],
                            "name": "filename",
                            "start": [
                                95,
                                17
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                95,
                                31
                            ],
                            "name": "mode",
                            "start": [
                                95,
                                27
                            ],
                            "type": "local",
                            "view": "(\"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))?"
                        }
                    ],
                    "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "finish": [
                        95,
                        36
                    ],
                    "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        95,
                        0
                    ],
                    "type": "function",
                    "view": "function io.open(filename: string, mode?: \"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    95,
                    16
                ],
                "name": "open",
                "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                "start": [
                    95,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.open",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                104,
                                23
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                104,
                                19
                            ],
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                    "finish": [
                        104,
                        28
                    ],
                    "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                    "start": [
                        104,
                        0
                    ],
                    "type": "function",
                    "view": "function io.output(file: string|file*)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    104,
                    18
                ],
                "name": "output",
                "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                "start": [
                    104,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.output",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                119,
                                22
                            ],
                            "name": "prog",
                            "start": [
                                119,
                                18
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                119,
                                28
                            ],
                            "name": "mode",
                            "start": [
                                119,
                                24
                            ],
                            "type": "local",
                            "view": "(\"r\"|\"w\")?"
                        }
                    ],
                    "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "finish": [
                        119,
                        33
                    ],
                    "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        119,
                        0
                    ],
                    "type": "function",
                    "view": "function io.popen(prog: string, mode?: \"r\"|\"w\")\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    119,
                    17
                ],
                "name": "popen",
                "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                "start": [
                    119,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.popen",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                130,
                                20
                            ],
                            "start": [
                                130,
                                17
                            ],
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": [
                        130,
                        25
                    ],
                    "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        130,
                        0
                    ],
                    "type": "function",
                    "view": "function io.read(...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> any\n  2. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    130,
                    16
                ],
                "name": "read",
                "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "start": [
                    130,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.read",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                "extends": {
                    "args": [],
                    "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                    "finish": [
                        139,
                        25
                    ],
                    "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        }
                    ],
                    "start": [
                        139,
                        0
                    ],
                    "type": "function",
                    "view": "function io.tmpfile()\n  -> file*"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    139,
                    19
                ],
                "name": "tmpfile",
                "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                "start": [
                    139,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.tmpfile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                154,
                                21
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                154,
                                17
                            ],
                            "type": "local",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "finish": [
                        154,
                        26
                    ],
                    "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"closed file\"|\"file\"|`nil`"
                        }
                    ],
                    "start": [
                        154,
                        0
                    ],
                    "type": "function",
                    "view": "function io.type(file: file*)\n  -> \"closed file\"|\"file\"|`nil`"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    154,
                    16
                ],
                "name": "type",
                "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                "start": [
                    154,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.type",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                163,
                                21
                            ],
                            "start": [
                                163,
                                18
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                    "finish": [
                        163,
                        26
                    ],
                    "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        163,
                        0
                    ],
                    "type": "function",
                    "view": "function io.write(...any)\n  -> file*\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    163,
                    17
                ],
                "name": "write",
                "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                "start": [
                    163,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "io.write",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    7,
                    15
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io\"])\n",
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "iolib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                51,
                                22
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                51,
                                18
                            ],
                            "type": "local",
                            "view": "file*?"
                        }
                    ],
                    "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": [
                        51,
                        27
                    ],
                    "rawdesc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "function io.close(file?: file*)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    51,
                    17
                ],
                "name": "close",
                "rawdesc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "start": [
                    51,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                "extends": {
                    "args": [],
                    "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                    "finish": [
                        58,
                        23
                    ],
                    "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                    "start": [
                        58,
                        0
                    ],
                    "type": "function",
                    "view": "function io.flush()"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    58,
                    17
                ],
                "name": "flush",
                "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                "start": [
                    58,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                67,
                                22
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                67,
                                18
                            ],
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                    "finish": [
                        67,
                        27
                    ],
                    "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                    "start": [
                        67,
                        0
                    ],
                    "type": "function",
                    "view": "function io.input(file: string|file*)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    67,
                    17
                ],
                "name": "input",
                "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                "start": [
                    67,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                83,
                                26
                            ],
                            "name": "filename",
                            "start": [
                                83,
                                18
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                83,
                                31
                            ],
                            "start": [
                                83,
                                28
                            ],
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": [
                        83,
                        36
                    ],
                    "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():any, ...unknown"
                        }
                    ],
                    "start": [
                        83,
                        0
                    ],
                    "type": "function",
                    "view": "function io.lines(filename?: string, ...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> fun():any, ...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    83,
                    17
                ],
                "name": "lines",
                "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "start": [
                    83,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                95,
                                25
                            ],
                            "name": "filename",
                            "start": [
                                95,
                                17
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                95,
                                31
                            ],
                            "name": "mode",
                            "start": [
                                95,
                                27
                            ],
                            "type": "local",
                            "view": "(\"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))?"
                        }
                    ],
                    "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "finish": [
                        95,
                        36
                    ],
                    "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        95,
                        0
                    ],
                    "type": "function",
                    "view": "function io.open(filename: string, mode?: \"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    95,
                    16
                ],
                "name": "open",
                "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                "start": [
                    95,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                104,
                                23
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                104,
                                19
                            ],
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                    "finish": [
                        104,
                        28
                    ],
                    "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                    "start": [
                        104,
                        0
                    ],
                    "type": "function",
                    "view": "function io.output(file: string|file*)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    104,
                    18
                ],
                "name": "output",
                "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                "start": [
                    104,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                119,
                                22
                            ],
                            "name": "prog",
                            "start": [
                                119,
                                18
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                119,
                                28
                            ],
                            "name": "mode",
                            "start": [
                                119,
                                24
                            ],
                            "type": "local",
                            "view": "(\"r\"|\"w\")?"
                        }
                    ],
                    "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "finish": [
                        119,
                        33
                    ],
                    "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        119,
                        0
                    ],
                    "type": "function",
                    "view": "function io.popen(prog: string, mode?: \"r\"|\"w\")\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    119,
                    17
                ],
                "name": "popen",
                "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                "start": [
                    119,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                130,
                                20
                            ],
                            "start": [
                                130,
                                17
                            ],
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": [
                        130,
                        25
                    ],
                    "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        130,
                        0
                    ],
                    "type": "function",
                    "view": "function io.read(...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> any\n  2. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    130,
                    16
                ],
                "name": "read",
                "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "start": [
                    130,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nstandard error.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.stderr\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                    "finish": [
                        25,
                        22
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                    "start": [
                        25,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                25,
                                22
                            ],
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                25,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "file*"
                        }
                    ],
                    "view": "file*"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    25,
                    22
                ],
                "name": "stderr",
                "rawdesc": "\nstandard error.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.stderr\"])\n",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "file*",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nstandard input.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.stdin\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                    "finish": [
                        13,
                        22
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                    "start": [
                        13,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                13,
                                22
                            ],
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                13,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "file*"
                        }
                    ],
                    "view": "file*"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    13,
                    22
                ],
                "name": "stdin",
                "rawdesc": "\nstandard input.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.stdin\"])\n",
                "start": [
                    13,
                    10
                ],
                "type": "doc.field",
                "view": "file*",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nstandard output.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.stdout\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                    "finish": [
                        19,
                        22
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                    "start": [
                        19,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                19,
                                22
                            ],
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                19,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "file*"
                        }
                    ],
                    "view": "file*"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    19,
                    22
                ],
                "name": "stdout",
                "rawdesc": "\nstandard output.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.stdout\"])\n",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "file*",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                "extends": {
                    "args": [],
                    "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                    "finish": [
                        139,
                        25
                    ],
                    "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        }
                    ],
                    "start": [
                        139,
                        0
                    ],
                    "type": "function",
                    "view": "function io.tmpfile()\n  -> file*"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    139,
                    19
                ],
                "name": "tmpfile",
                "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                "start": [
                    139,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": [
                                154,
                                21
                            ],
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "start": [
                                154,
                                17
                            ],
                            "type": "local",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "finish": [
                        154,
                        26
                    ],
                    "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"closed file\"|\"file\"|`nil`"
                        }
                    ],
                    "start": [
                        154,
                        0
                    ],
                    "type": "function",
                    "view": "function io.type(file: file*)\n  -> \"closed file\"|\"file\"|`nil`"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    154,
                    16
                ],
                "name": "type",
                "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                "start": [
                    154,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                163,
                                21
                            ],
                            "start": [
                                163,
                                18
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                    "finish": [
                        163,
                        26
                    ],
                    "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        163,
                        0
                    ],
                    "type": "function",
                    "view": "function io.write(...any)\n  -> file*\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": [
                    163,
                    17
                ],
                "name": "write",
                "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                "start": [
                    163,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "iolib",
        "type": "type",
        "view": "iolib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-ipairs\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                108,
                                17
                            ],
                            "name": "t",
                            "start": [
                                108,
                                16
                            ],
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-ipairs\"])",
                    "finish": [
                        108,
                        22
                    ],
                    "rawdesc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-ipairs\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: <V>[], i?: integer):integer, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        },
                        {
                            "name": "i",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        108,
                        0
                    ],
                    "type": "function",
                    "view": "function ipairs(t: <T:table>)\n  -> fun(table: <V>[], i?: integer):integer, <V>\n  2. <T:table>\n  3. i: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    108,
                    15
                ],
                "rawdesc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-ipairs\"])",
                "start": [
                    108,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ipairs",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    14,
                    23
                ],
                "start": [
                    14,
                    10
                ],
                "type": "doc.class",
                "view": "lightuserdata",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "lightuserdata",
        "type": "type",
        "view": "lightuserdata"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-load\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                130,
                                19
                            ],
                            "name": "chunk",
                            "start": [
                                130,
                                14
                            ],
                            "type": "local",
                            "view": "string|function"
                        },
                        {
                            "finish": [
                                130,
                                30
                            ],
                            "name": "chunkname",
                            "start": [
                                130,
                                21
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                130,
                                36
                            ],
                            "name": "mode",
                            "start": [
                                130,
                                32
                            ],
                            "type": "local",
                            "view": "(\"b\"|\"bt\"|\"t\")?"
                        },
                        {
                            "finish": [
                                130,
                                41
                            ],
                            "name": "env",
                            "start": [
                                130,
                                38
                            ],
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-load\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": [
                        130,
                        46
                    ],
                    "rawdesc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-load\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        130,
                        0
                    ],
                    "type": "function",
                    "view": "function load(chunk: string|function, chunkname?: string, mode?: \"b\"|\"bt\"|\"t\", env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    130,
                    13
                ],
                "rawdesc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-load\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                "start": [
                    130,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "load",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadfile\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                143,
                                26
                            ],
                            "name": "filename",
                            "start": [
                                143,
                                18
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                143,
                                32
                            ],
                            "name": "mode",
                            "start": [
                                143,
                                28
                            ],
                            "type": "local",
                            "view": "(\"b\"|\"bt\"|\"t\")?"
                        },
                        {
                            "finish": [
                                143,
                                37
                            ],
                            "name": "env",
                            "start": [
                                143,
                                34
                            ],
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadfile\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": [
                        143,
                        42
                    ],
                    "rawdesc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadfile\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        143,
                        0
                    ],
                    "type": "function",
                    "view": "function loadfile(filename?: string, mode?: \"b\"|\"bt\"|\"t\", env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    143,
                    17
                ],
                "rawdesc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadfile\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                "start": [
                    143,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "loadfile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nloadmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                "finish": [
                    113,
                    9
                ],
                "rawdesc": "```lua\nloadmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                "start": [
                    110,
                    10
                ],
                "type": "doc.alias",
                "view": "\"b\"|\"bt\"|\"t\""
            }
        ],
        "fields": [],
        "name": "loadmode",
        "type": "type",
        "view": "loadmode"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadstring\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                156,
                                24
                            ],
                            "name": "text",
                            "start": [
                                156,
                                20
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                156,
                                35
                            ],
                            "name": "chunkname",
                            "start": [
                                156,
                                26
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadstring\"])",
                    "finish": [
                        156,
                        40
                    ],
                    "rawdesc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadstring\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        156,
                        0
                    ],
                    "type": "function",
                    "view": "function loadstring(text: string, chunkname?: string)\n  -> function?\n  2. error_message: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    156,
                    19
                ],
                "rawdesc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadstring\"])",
                "start": [
                    156,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "loadstring",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nlocalecategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                "finish": [
                    154,
                    11
                ],
                "rawdesc": "```lua\nlocalecategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                "start": [
                    148,
                    10
                ],
                "type": "doc.alias",
                "view": "\"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1)"
            }
        ],
        "fields": [],
        "name": "localecategory",
        "type": "type",
        "view": "localecategory"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math\"])\n",
                    "finish": [
                        32,
                        9
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math\"])\n",
                    "start": [
                        32,
                        7
                    ],
                    "type": "table",
                    "view": "mathlib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    32,
                    4
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math\"])\n",
                "start": [
                    32,
                    0
                ],
                "type": "setglobal",
                "view": "mathlib",
                "visible": "public"
            }
        ],
        "name": "math",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                19
                            ],
                            "name": "x",
                            "start": [
                                43,
                                18
                            ],
                            "type": "local",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                    "finish": [
                        43,
                        24
                    ],
                    "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function math.abs(x: <Number:number>)\n  -> <Number:number>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    43,
                    17
                ],
                "name": "abs",
                "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.abs",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                53,
                                20
                            ],
                            "name": "x",
                            "start": [
                                53,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                    "finish": [
                        53,
                        25
                    ],
                    "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        53,
                        0
                    ],
                    "type": "function",
                    "view": "function math.acos(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    53,
                    18
                ],
                "name": "acos",
                "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                "start": [
                    53,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.acos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                63,
                                20
                            ],
                            "name": "x",
                            "start": [
                                63,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                    "finish": [
                        63,
                        25
                    ],
                    "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        63,
                        0
                    ],
                    "type": "function",
                    "view": "function math.asin(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    63,
                    18
                ],
                "name": "asin",
                "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                "start": [
                    63,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.asin",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                74,
                                20
                            ],
                            "name": "y",
                            "start": [
                                74,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                74,
                                23
                            ],
                            "name": "x",
                            "start": [
                                74,
                                22
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                    "finish": [
                        74,
                        28
                    ],
                    "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        74,
                        0
                    ],
                    "type": "function",
                    "view": "function math.atan(y: number, x?: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    74,
                    18
                ],
                "name": "atan",
                "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                "start": [
                    74,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.atan",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                86,
                                21
                            ],
                            "name": "y",
                            "start": [
                                86,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                86,
                                24
                            ],
                            "name": "x",
                            "start": [
                                86,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                    "finish": [
                        86,
                        29
                    ],
                    "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        86,
                        0
                    ],
                    "type": "function",
                    "view": "function math.atan2(y: number, x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    86,
                    19
                ],
                "name": "atan2",
                "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                "start": [
                    86,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.atan2",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                96,
                                20
                            ],
                            "name": "x",
                            "start": [
                                96,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                    "finish": [
                        96,
                        25
                    ],
                    "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        96,
                        0
                    ],
                    "type": "function",
                    "view": "function math.ceil(x: number)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    96,
                    18
                ],
                "name": "ceil",
                "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                "start": [
                    96,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.ceil",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                106,
                                19
                            ],
                            "name": "x",
                            "start": [
                                106,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                    "finish": [
                        106,
                        24
                    ],
                    "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        106,
                        0
                    ],
                    "type": "function",
                    "view": "function math.cos(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    106,
                    17
                ],
                "name": "cos",
                "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                "start": [
                    106,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.cos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                117,
                                20
                            ],
                            "name": "x",
                            "start": [
                                117,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                    "finish": [
                        117,
                        25
                    ],
                    "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        117,
                        0
                    ],
                    "type": "function",
                    "view": "function math.cosh(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    117,
                    18
                ],
                "name": "cosh",
                "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                "start": [
                    117,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.cosh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                127,
                                19
                            ],
                            "name": "x",
                            "start": [
                                127,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                    "finish": [
                        127,
                        24
                    ],
                    "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        127,
                        0
                    ],
                    "type": "function",
                    "view": "function math.deg(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    127,
                    17
                ],
                "name": "deg",
                "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                "start": [
                    127,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.deg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                137,
                                19
                            ],
                            "name": "x",
                            "start": [
                                137,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                    "finish": [
                        137,
                        24
                    ],
                    "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        137,
                        0
                    ],
                    "type": "function",
                    "view": "function math.exp(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    137,
                    17
                ],
                "name": "exp",
                "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                "start": [
                    137,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.exp",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                147,
                                21
                            ],
                            "name": "x",
                            "start": [
                                147,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                    "finish": [
                        147,
                        26
                    ],
                    "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        147,
                        0
                    ],
                    "type": "function",
                    "view": "function math.floor(x: number)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    147,
                    19
                ],
                "name": "floor",
                "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                "start": [
                    147,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.floor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                158,
                                20
                            ],
                            "name": "x",
                            "start": [
                                158,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                158,
                                23
                            ],
                            "name": "y",
                            "start": [
                                158,
                                22
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                    "finish": [
                        158,
                        28
                    ],
                    "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        158,
                        0
                    ],
                    "type": "function",
                    "view": "function math.fmod(x: number, y: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    158,
                    18
                ],
                "name": "fmod",
                "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                "start": [
                    158,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.fmod",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                170,
                                21
                            ],
                            "name": "x",
                            "start": [
                                170,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                    "finish": [
                        170,
                        26
                    ],
                    "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                    "returns": [
                        {
                            "name": "m",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "e",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        170,
                        0
                    ],
                    "type": "function",
                    "view": "function math.frexp(x: number)\n  -> m: number\n  2. e: number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    170,
                    19
                ],
                "name": "frexp",
                "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                "start": [
                    170,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.frexp",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                182,
                                21
                            ],
                            "name": "m",
                            "start": [
                                182,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                182,
                                24
                            ],
                            "name": "e",
                            "start": [
                                182,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                    "finish": [
                        182,
                        29
                    ],
                    "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        182,
                        0
                    ],
                    "type": "function",
                    "view": "function math.ldexp(m: number, e: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    182,
                    19
                ],
                "name": "ldexp",
                "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                "start": [
                    182,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.ldexp",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                193,
                                19
                            ],
                            "name": "x",
                            "start": [
                                193,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                193,
                                25
                            ],
                            "name": "base",
                            "start": [
                                193,
                                21
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                    "finish": [
                        193,
                        30
                    ],
                    "rawdesc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        193,
                        0
                    ],
                    "type": "function",
                    "view": "function math.log(x: number, base?: integer)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    193,
                    17
                ],
                "name": "log",
                "rawdesc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                "start": [
                    193,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.log",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                204,
                                21
                            ],
                            "name": "x",
                            "start": [
                                204,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                    "finish": [
                        204,
                        26
                    ],
                    "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        204,
                        0
                    ],
                    "type": "function",
                    "view": "function math.log10(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    204,
                    19
                ],
                "name": "log10",
                "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                "start": [
                    204,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.log10",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                216,
                                19
                            ],
                            "name": "x",
                            "start": [
                                216,
                                18
                            ],
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": [
                                216,
                                24
                            ],
                            "start": [
                                216,
                                21
                            ],
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                    "finish": [
                        216,
                        29
                    ],
                    "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": [
                        216,
                        0
                    ],
                    "type": "function",
                    "view": "function math.max(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    216,
                    17
                ],
                "name": "max",
                "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                "start": [
                    216,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.max",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                228,
                                19
                            ],
                            "name": "x",
                            "start": [
                                228,
                                18
                            ],
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": [
                                228,
                                24
                            ],
                            "start": [
                                228,
                                21
                            ],
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                    "finish": [
                        228,
                        29
                    ],
                    "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": [
                        228,
                        0
                    ],
                    "type": "function",
                    "view": "function math.min(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    228,
                    17
                ],
                "name": "min",
                "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                "start": [
                    228,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.min",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                239,
                                20
                            ],
                            "name": "x",
                            "start": [
                                239,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                    "finish": [
                        239,
                        25
                    ],
                    "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        239,
                        0
                    ],
                    "type": "function",
                    "view": "function math.modf(x: number)\n  -> integer\n  2. number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    239,
                    18
                ],
                "name": "modf",
                "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                "start": [
                    239,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.modf",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                251,
                                19
                            ],
                            "name": "x",
                            "start": [
                                251,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                251,
                                22
                            ],
                            "name": "y",
                            "start": [
                                251,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                    "finish": [
                        251,
                        27
                    ],
                    "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        251,
                        0
                    ],
                    "type": "function",
                    "view": "function math.pow(x: number, y: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    251,
                    17
                ],
                "name": "pow",
                "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                "start": [
                    251,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.pow",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                261,
                                19
                            ],
                            "name": "x",
                            "start": [
                                261,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                    "finish": [
                        261,
                        24
                    ],
                    "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        261,
                        0
                    ],
                    "type": "function",
                    "view": "function math.rad(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    261,
                    17
                ],
                "name": "rad",
                "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                "start": [
                    261,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.rad",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                277,
                                22
                            ],
                            "name": "m",
                            "start": [
                                277,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                277,
                                25
                            ],
                            "name": "n",
                            "start": [
                                277,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                    "finish": [
                        277,
                        30
                    ],
                    "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        277,
                        0
                    ],
                    "type": "function",
                    "view": "function math.random(m: integer, n: integer)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    277,
                    20
                ],
                "name": "random",
                "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                "start": [
                    277,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.random",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                289,
                                26
                            ],
                            "name": "x",
                            "start": [
                                289,
                                25
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                289,
                                29
                            ],
                            "name": "y",
                            "start": [
                                289,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                    "finish": [
                        289,
                        34
                    ],
                    "rawdesc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                    "start": [
                        289,
                        0
                    ],
                    "type": "function",
                    "view": "function math.randomseed(x?: integer, y?: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    289,
                    24
                ],
                "name": "randomseed",
                "rawdesc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                "start": [
                    289,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.randomseed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                299,
                                19
                            ],
                            "name": "x",
                            "start": [
                                299,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                    "finish": [
                        299,
                        24
                    ],
                    "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        299,
                        0
                    ],
                    "type": "function",
                    "view": "function math.sin(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    299,
                    17
                ],
                "name": "sin",
                "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                "start": [
                    299,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.sin",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                310,
                                20
                            ],
                            "name": "x",
                            "start": [
                                310,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                    "finish": [
                        310,
                        25
                    ],
                    "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        310,
                        0
                    ],
                    "type": "function",
                    "view": "function math.sinh(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    310,
                    18
                ],
                "name": "sinh",
                "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                "start": [
                    310,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.sinh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                320,
                                20
                            ],
                            "name": "x",
                            "start": [
                                320,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                    "finish": [
                        320,
                        25
                    ],
                    "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        320,
                        0
                    ],
                    "type": "function",
                    "view": "function math.sqrt(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    320,
                    18
                ],
                "name": "sqrt",
                "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                "start": [
                    320,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.sqrt",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                330,
                                19
                            ],
                            "name": "x",
                            "start": [
                                330,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                    "finish": [
                        330,
                        24
                    ],
                    "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        330,
                        0
                    ],
                    "type": "function",
                    "view": "function math.tan(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    330,
                    17
                ],
                "name": "tan",
                "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                "start": [
                    330,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.tan",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                341,
                                20
                            ],
                            "name": "x",
                            "start": [
                                341,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                    "finish": [
                        341,
                        25
                    ],
                    "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        341,
                        0
                    ],
                    "type": "function",
                    "view": "function math.tanh(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    341,
                    18
                ],
                "name": "tanh",
                "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                "start": [
                    341,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.tanh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                352,
                                25
                            ],
                            "name": "x",
                            "start": [
                                352,
                                24
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                    "finish": [
                        352,
                        30
                    ],
                    "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        352,
                        0
                    ],
                    "type": "function",
                    "view": "function math.tointeger(x: any)\n  -> integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    352,
                    23
                ],
                "name": "tointeger",
                "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                "start": [
                    352,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.tointeger",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                365,
                                20
                            ],
                            "name": "x",
                            "start": [
                                365,
                                19
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "finish": [
                        365,
                        25
                    ],
                    "rawdesc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"float\"|\"integer\"|'nil'"
                        }
                    ],
                    "start": [
                        365,
                        0
                    ],
                    "type": "function",
                    "view": "function math.type(x: any)\n  -> \"float\"|\"integer\"|'nil'"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    365,
                    18
                ],
                "name": "type",
                "rawdesc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                "start": [
                    365,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.type",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                376,
                                19
                            ],
                            "name": "m",
                            "start": [
                                376,
                                18
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                376,
                                22
                            ],
                            "name": "n",
                            "start": [
                                376,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                    "finish": [
                        376,
                        27
                    ],
                    "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        376,
                        0
                    ],
                    "type": "function",
                    "view": "function math.ult(m: integer, n: integer)\n  -> boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    376,
                    17
                ],
                "name": "ult",
                "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                "start": [
                    376,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.ult",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    7,
                    17
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math\"])\n",
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "mathlib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                19
                            ],
                            "name": "x",
                            "start": [
                                43,
                                18
                            ],
                            "type": "local",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                    "finish": [
                        43,
                        24
                    ],
                    "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function math.abs(x: <Number:number>)\n  -> <Number:number>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    43,
                    17
                ],
                "name": "abs",
                "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                53,
                                20
                            ],
                            "name": "x",
                            "start": [
                                53,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                    "finish": [
                        53,
                        25
                    ],
                    "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        53,
                        0
                    ],
                    "type": "function",
                    "view": "function math.acos(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    53,
                    18
                ],
                "name": "acos",
                "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                "start": [
                    53,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                63,
                                20
                            ],
                            "name": "x",
                            "start": [
                                63,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                    "finish": [
                        63,
                        25
                    ],
                    "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        63,
                        0
                    ],
                    "type": "function",
                    "view": "function math.asin(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    63,
                    18
                ],
                "name": "asin",
                "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                "start": [
                    63,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                74,
                                20
                            ],
                            "name": "y",
                            "start": [
                                74,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                74,
                                23
                            ],
                            "name": "x",
                            "start": [
                                74,
                                22
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                    "finish": [
                        74,
                        28
                    ],
                    "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        74,
                        0
                    ],
                    "type": "function",
                    "view": "function math.atan(y: number, x?: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    74,
                    18
                ],
                "name": "atan",
                "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                "start": [
                    74,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                86,
                                21
                            ],
                            "name": "y",
                            "start": [
                                86,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                86,
                                24
                            ],
                            "name": "x",
                            "start": [
                                86,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                    "finish": [
                        86,
                        29
                    ],
                    "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        86,
                        0
                    ],
                    "type": "function",
                    "view": "function math.atan2(y: number, x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    86,
                    19
                ],
                "name": "atan2",
                "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                "start": [
                    86,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                96,
                                20
                            ],
                            "name": "x",
                            "start": [
                                96,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                    "finish": [
                        96,
                        25
                    ],
                    "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        96,
                        0
                    ],
                    "type": "function",
                    "view": "function math.ceil(x: number)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    96,
                    18
                ],
                "name": "ceil",
                "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                "start": [
                    96,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                106,
                                19
                            ],
                            "name": "x",
                            "start": [
                                106,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                    "finish": [
                        106,
                        24
                    ],
                    "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        106,
                        0
                    ],
                    "type": "function",
                    "view": "function math.cos(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    106,
                    17
                ],
                "name": "cos",
                "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                "start": [
                    106,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                117,
                                20
                            ],
                            "name": "x",
                            "start": [
                                117,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                    "finish": [
                        117,
                        25
                    ],
                    "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        117,
                        0
                    ],
                    "type": "function",
                    "view": "function math.cosh(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    117,
                    18
                ],
                "name": "cosh",
                "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                "start": [
                    117,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                127,
                                19
                            ],
                            "name": "x",
                            "start": [
                                127,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                    "finish": [
                        127,
                        24
                    ],
                    "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        127,
                        0
                    ],
                    "type": "function",
                    "view": "function math.deg(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    127,
                    17
                ],
                "name": "deg",
                "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                "start": [
                    127,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                137,
                                19
                            ],
                            "name": "x",
                            "start": [
                                137,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                    "finish": [
                        137,
                        24
                    ],
                    "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        137,
                        0
                    ],
                    "type": "function",
                    "view": "function math.exp(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    137,
                    17
                ],
                "name": "exp",
                "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                "start": [
                    137,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                147,
                                21
                            ],
                            "name": "x",
                            "start": [
                                147,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                    "finish": [
                        147,
                        26
                    ],
                    "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        147,
                        0
                    ],
                    "type": "function",
                    "view": "function math.floor(x: number)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    147,
                    19
                ],
                "name": "floor",
                "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                "start": [
                    147,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                158,
                                20
                            ],
                            "name": "x",
                            "start": [
                                158,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                158,
                                23
                            ],
                            "name": "y",
                            "start": [
                                158,
                                22
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                    "finish": [
                        158,
                        28
                    ],
                    "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        158,
                        0
                    ],
                    "type": "function",
                    "view": "function math.fmod(x: number, y: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    158,
                    18
                ],
                "name": "fmod",
                "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                "start": [
                    158,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                170,
                                21
                            ],
                            "name": "x",
                            "start": [
                                170,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                    "finish": [
                        170,
                        26
                    ],
                    "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                    "returns": [
                        {
                            "name": "m",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "e",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        170,
                        0
                    ],
                    "type": "function",
                    "view": "function math.frexp(x: number)\n  -> m: number\n  2. e: number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    170,
                    19
                ],
                "name": "frexp",
                "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                "start": [
                    170,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA value larger than any other numeric value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.huge\"])\n",
                "extends": {
                    "finish": [
                        13,
                        27
                    ],
                    "start": [
                        13,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                13,
                                27
                            ],
                            "start": [
                                13,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    13,
                    27
                ],
                "name": "huge",
                "rawdesc": "\nA value larger than any other numeric value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.huge\"])\n",
                "start": [
                    13,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                182,
                                21
                            ],
                            "name": "m",
                            "start": [
                                182,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                182,
                                24
                            ],
                            "name": "e",
                            "start": [
                                182,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                    "finish": [
                        182,
                        29
                    ],
                    "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        182,
                        0
                    ],
                    "type": "function",
                    "view": "function math.ldexp(m: number, e: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    182,
                    19
                ],
                "name": "ldexp",
                "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                "start": [
                    182,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                193,
                                19
                            ],
                            "name": "x",
                            "start": [
                                193,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                193,
                                25
                            ],
                            "name": "base",
                            "start": [
                                193,
                                21
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                    "finish": [
                        193,
                        30
                    ],
                    "rawdesc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        193,
                        0
                    ],
                    "type": "function",
                    "view": "function math.log(x: number, base?: integer)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    193,
                    17
                ],
                "name": "log",
                "rawdesc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                "start": [
                    193,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                204,
                                21
                            ],
                            "name": "x",
                            "start": [
                                204,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                    "finish": [
                        204,
                        26
                    ],
                    "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        204,
                        0
                    ],
                    "type": "function",
                    "view": "function math.log10(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    204,
                    19
                ],
                "name": "log10",
                "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                "start": [
                    204,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                216,
                                19
                            ],
                            "name": "x",
                            "start": [
                                216,
                                18
                            ],
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": [
                                216,
                                24
                            ],
                            "start": [
                                216,
                                21
                            ],
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                    "finish": [
                        216,
                        29
                    ],
                    "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": [
                        216,
                        0
                    ],
                    "type": "function",
                    "view": "function math.max(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    216,
                    17
                ],
                "name": "max",
                "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                "start": [
                    216,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.maxinteger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.maxinteger\"])\n",
                "extends": {
                    "finish": [
                        19,
                        28
                    ],
                    "start": [
                        19,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                19,
                                28
                            ],
                            "start": [
                                19,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    19,
                    28
                ],
                "name": "maxinteger",
                "rawdesc": "\nMiss locale <math.maxinteger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.maxinteger\"])\n",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                228,
                                19
                            ],
                            "name": "x",
                            "start": [
                                228,
                                18
                            ],
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": [
                                228,
                                24
                            ],
                            "start": [
                                228,
                                21
                            ],
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                    "finish": [
                        228,
                        29
                    ],
                    "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": [
                        228,
                        0
                    ],
                    "type": "function",
                    "view": "function math.min(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    228,
                    17
                ],
                "name": "min",
                "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                "start": [
                    228,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.mininteger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.mininteger\"])\n",
                "extends": {
                    "finish": [
                        25,
                        28
                    ],
                    "start": [
                        25,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                25,
                                28
                            ],
                            "start": [
                                25,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    25,
                    28
                ],
                "name": "mininteger",
                "rawdesc": "\nMiss locale <math.mininteger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.mininteger\"])\n",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                239,
                                20
                            ],
                            "name": "x",
                            "start": [
                                239,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                    "finish": [
                        239,
                        25
                    ],
                    "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        239,
                        0
                    ],
                    "type": "function",
                    "view": "function math.modf(x: number)\n  -> integer\n  2. number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    239,
                    18
                ],
                "name": "modf",
                "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                "start": [
                    239,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe value of *π*.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pi\"])\n",
                "extends": {
                    "finish": [
                        31,
                        27
                    ],
                    "start": [
                        31,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                31,
                                27
                            ],
                            "start": [
                                31,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    31,
                    27
                ],
                "name": "pi",
                "rawdesc": "\nThe value of *π*.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pi\"])\n",
                "start": [
                    31,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                251,
                                19
                            ],
                            "name": "x",
                            "start": [
                                251,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                251,
                                22
                            ],
                            "name": "y",
                            "start": [
                                251,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                    "finish": [
                        251,
                        27
                    ],
                    "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        251,
                        0
                    ],
                    "type": "function",
                    "view": "function math.pow(x: number, y: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    251,
                    17
                ],
                "name": "pow",
                "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                "start": [
                    251,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                261,
                                19
                            ],
                            "name": "x",
                            "start": [
                                261,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                    "finish": [
                        261,
                        24
                    ],
                    "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        261,
                        0
                    ],
                    "type": "function",
                    "view": "function math.rad(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    261,
                    17
                ],
                "name": "rad",
                "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                "start": [
                    261,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                277,
                                22
                            ],
                            "name": "m",
                            "start": [
                                277,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                277,
                                25
                            ],
                            "name": "n",
                            "start": [
                                277,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                    "finish": [
                        277,
                        30
                    ],
                    "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        277,
                        0
                    ],
                    "type": "function",
                    "view": "function math.random(m: integer, n: integer)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    277,
                    20
                ],
                "name": "random",
                "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                "start": [
                    277,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                289,
                                26
                            ],
                            "name": "x",
                            "start": [
                                289,
                                25
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                289,
                                29
                            ],
                            "name": "y",
                            "start": [
                                289,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                    "finish": [
                        289,
                        34
                    ],
                    "rawdesc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                    "start": [
                        289,
                        0
                    ],
                    "type": "function",
                    "view": "function math.randomseed(x?: integer, y?: integer)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    289,
                    24
                ],
                "name": "randomseed",
                "rawdesc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                "start": [
                    289,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                299,
                                19
                            ],
                            "name": "x",
                            "start": [
                                299,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                    "finish": [
                        299,
                        24
                    ],
                    "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        299,
                        0
                    ],
                    "type": "function",
                    "view": "function math.sin(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    299,
                    17
                ],
                "name": "sin",
                "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                "start": [
                    299,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                310,
                                20
                            ],
                            "name": "x",
                            "start": [
                                310,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                    "finish": [
                        310,
                        25
                    ],
                    "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        310,
                        0
                    ],
                    "type": "function",
                    "view": "function math.sinh(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    310,
                    18
                ],
                "name": "sinh",
                "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                "start": [
                    310,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                320,
                                20
                            ],
                            "name": "x",
                            "start": [
                                320,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                    "finish": [
                        320,
                        25
                    ],
                    "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        320,
                        0
                    ],
                    "type": "function",
                    "view": "function math.sqrt(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    320,
                    18
                ],
                "name": "sqrt",
                "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                "start": [
                    320,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                330,
                                19
                            ],
                            "name": "x",
                            "start": [
                                330,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                    "finish": [
                        330,
                        24
                    ],
                    "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        330,
                        0
                    ],
                    "type": "function",
                    "view": "function math.tan(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    330,
                    17
                ],
                "name": "tan",
                "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                "start": [
                    330,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                341,
                                20
                            ],
                            "name": "x",
                            "start": [
                                341,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                    "finish": [
                        341,
                        25
                    ],
                    "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        341,
                        0
                    ],
                    "type": "function",
                    "view": "function math.tanh(x: number)\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    341,
                    18
                ],
                "name": "tanh",
                "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                "start": [
                    341,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                352,
                                25
                            ],
                            "name": "x",
                            "start": [
                                352,
                                24
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                    "finish": [
                        352,
                        30
                    ],
                    "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        352,
                        0
                    ],
                    "type": "function",
                    "view": "function math.tointeger(x: any)\n  -> integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    352,
                    23
                ],
                "name": "tointeger",
                "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                "start": [
                    352,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                365,
                                20
                            ],
                            "name": "x",
                            "start": [
                                365,
                                19
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "finish": [
                        365,
                        25
                    ],
                    "rawdesc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"float\"|\"integer\"|'nil'"
                        }
                    ],
                    "start": [
                        365,
                        0
                    ],
                    "type": "function",
                    "view": "function math.type(x: any)\n  -> \"float\"|\"integer\"|'nil'"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    365,
                    18
                ],
                "name": "type",
                "rawdesc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                "start": [
                    365,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                376,
                                19
                            ],
                            "name": "m",
                            "start": [
                                376,
                                18
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                376,
                                22
                            ],
                            "name": "n",
                            "start": [
                                376,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                    "finish": [
                        376,
                        27
                    ],
                    "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        376,
                        0
                    ],
                    "type": "function",
                    "view": "function math.ult(m: integer, n: integer)\n  -> boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": [
                    376,
                    17
                ],
                "name": "ult",
                "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                "start": [
                    376,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "mathlib",
        "type": "type",
        "view": "mathlib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    304,
                    19
                ],
                "start": [
                    304,
                    10
                ],
                "type": "doc.class",
                "view": "metatable",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        309,
                        36
                    ],
                    "start": [
                        309,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                309,
                                31
                            ],
                            "start": [
                                309,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                309,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    309,
                                                    23
                                                ],
                                                "start": [
                                                    309,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                309,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                309,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    309,
                                                    26
                                                ],
                                                "start": [
                                                    309,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                309,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        309,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                309,
                                                31
                                            ],
                                            "start": [
                                                309,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        309,
                                                        31
                                                    ],
                                                    "start": [
                                                        309,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        309,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                309,
                                36
                            ],
                            "start": [
                                309,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    309,
                    36
                ],
                "name": "__add",
                "start": [
                    309,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        317,
                        37
                    ],
                    "start": [
                        317,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                317,
                                32
                            ],
                            "start": [
                                317,
                                18
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                317,
                                                24
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    317,
                                                    24
                                                ],
                                                "start": [
                                                    317,
                                                    22
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                317,
                                                22
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                317,
                                                27
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    317,
                                                    27
                                                ],
                                                "start": [
                                                    317,
                                                    25
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                317,
                                                25
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        317,
                                        32
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                317,
                                                32
                                            ],
                                            "start": [
                                                317,
                                                29
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        317,
                                                        32
                                                    ],
                                                    "start": [
                                                        317,
                                                        29
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        317,
                                        18
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                317,
                                37
                            ],
                            "start": [
                                317,
                                34
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    317,
                    37
                ],
                "name": "__band",
                "start": [
                    317,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        320,
                        33
                    ],
                    "start": [
                        320,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                320,
                                28
                            ],
                            "start": [
                                320,
                                18
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                320,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    320,
                                                    23
                                                ],
                                                "start": [
                                                    320,
                                                    22
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                320,
                                                22
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        320,
                                        28
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                320,
                                                28
                                            ],
                                            "start": [
                                                320,
                                                25
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        320,
                                                        28
                                                    ],
                                                    "start": [
                                                        320,
                                                        25
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        320,
                                        18
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any):any"
                                }
                            ],
                            "view": "fun(t: any):any"
                        },
                        {
                            "finish": [
                                320,
                                33
                            ],
                            "start": [
                                320,
                                30
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    320,
                    33
                ],
                "name": "__bnot",
                "start": [
                    320,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        318,
                        36
                    ],
                    "start": [
                        318,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                318,
                                31
                            ],
                            "start": [
                                318,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                318,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    318,
                                                    23
                                                ],
                                                "start": [
                                                    318,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                318,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                318,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    318,
                                                    26
                                                ],
                                                "start": [
                                                    318,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                318,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        318,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                318,
                                                31
                                            ],
                                            "start": [
                                                318,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        318,
                                                        31
                                                    ],
                                                    "start": [
                                                        318,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        318,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                318,
                                36
                            ],
                            "start": [
                                318,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    318,
                    36
                ],
                "name": "__bor",
                "start": [
                    318,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        319,
                        37
                    ],
                    "start": [
                        319,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                319,
                                32
                            ],
                            "start": [
                                319,
                                18
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                319,
                                                24
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    319,
                                                    24
                                                ],
                                                "start": [
                                                    319,
                                                    22
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                319,
                                                22
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                319,
                                                27
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    319,
                                                    27
                                                ],
                                                "start": [
                                                    319,
                                                    25
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                319,
                                                25
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        319,
                                        32
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                319,
                                                32
                                            ],
                                            "start": [
                                                319,
                                                29
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        319,
                                                        32
                                                    ],
                                                    "start": [
                                                        319,
                                                        29
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        319,
                                        18
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                319,
                                37
                            ],
                            "start": [
                                319,
                                34
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    319,
                    37
                ],
                "name": "__bxor",
                "start": [
                    319,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        330,
                        37
                    ],
                    "start": [
                        330,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                330,
                                32
                            ],
                            "start": [
                                330,
                                18
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                330,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    330,
                                                    23
                                                ],
                                                "start": [
                                                    330,
                                                    22
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                330,
                                                22
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                330,
                                                27
                                            ],
                                            "name": {
                                                "[1]": "...",
                                                "finish": [
                                                    330,
                                                    27
                                                ],
                                                "start": [
                                                    330,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "..."
                                            },
                                            "start": [
                                                330,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        330,
                                        32
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                330,
                                                32
                                            ],
                                            "name": {
                                                "finish": [
                                                    330,
                                                    32
                                                ],
                                                "start": [
                                                    330,
                                                    29
                                                ],
                                                "type": "doc.return.name",
                                                "view": "unknown"
                                            },
                                            "start": [
                                                330,
                                                29
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        330,
                                                        32
                                                    ],
                                                    "start": [
                                                        330,
                                                        29
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "unknown"
                                                }
                                            ],
                                            "view": "unknown"
                                        }
                                    ],
                                    "start": [
                                        330,
                                        18
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any, ...any):...unknown"
                                }
                            ],
                            "view": "fun(t: any, ...any):...unknown"
                        },
                        {
                            "finish": [
                                330,
                                37
                            ],
                            "start": [
                                330,
                                34
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any, ...any):...unknown|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    330,
                    37
                ],
                "name": "__call",
                "start": [
                    330,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any, ...any):...unknown|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        332,
                        41
                    ],
                    "start": [
                        332,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                332,
                                36
                            ],
                            "start": [
                                332,
                                19
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                332,
                                                24
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    332,
                                                    24
                                                ],
                                                "start": [
                                                    332,
                                                    23
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                332,
                                                23
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                332,
                                                31
                                            ],
                                            "name": {
                                                "[1]": "errobj",
                                                "finish": [
                                                    332,
                                                    31
                                                ],
                                                "start": [
                                                    332,
                                                    25
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "errobj"
                                            },
                                            "start": [
                                                332,
                                                25
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        332,
                                        36
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                332,
                                                36
                                            ],
                                            "start": [
                                                332,
                                                33
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        332,
                                                        36
                                                    ],
                                                    "start": [
                                                        332,
                                                        33
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        332,
                                        19
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any, errobj: any):any"
                                }
                            ],
                            "view": "fun(t: any, errobj: any):any"
                        },
                        {
                            "finish": [
                                332,
                                41
                            ],
                            "start": [
                                332,
                                38
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any, errobj: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    332,
                    41
                ],
                "name": "__close",
                "start": [
                    332,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any, errobj: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        323,
                        39
                    ],
                    "start": [
                        323,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                323,
                                34
                            ],
                            "start": [
                                323,
                                20
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                323,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    323,
                                                    26
                                                ],
                                                "start": [
                                                    323,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                323,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                323,
                                                29
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    323,
                                                    29
                                                ],
                                                "start": [
                                                    323,
                                                    27
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                323,
                                                27
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        323,
                                        34
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                323,
                                                34
                                            ],
                                            "start": [
                                                323,
                                                31
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        323,
                                                        34
                                                    ],
                                                    "start": [
                                                        323,
                                                        31
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        323,
                                        20
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                323,
                                39
                            ],
                            "start": [
                                323,
                                36
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    323,
                    39
                ],
                "name": "__concat",
                "start": [
                    323,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        312,
                        36
                    ],
                    "start": [
                        312,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                312,
                                31
                            ],
                            "start": [
                                312,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                312,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    312,
                                                    23
                                                ],
                                                "start": [
                                                    312,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                312,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                312,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    312,
                                                    26
                                                ],
                                                "start": [
                                                    312,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                312,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        312,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                312,
                                                31
                                            ],
                                            "start": [
                                                312,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        312,
                                                        31
                                                    ],
                                                    "start": [
                                                        312,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        312,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                312,
                                36
                            ],
                            "start": [
                                312,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    312,
                    36
                ],
                "name": "__div",
                "start": [
                    312,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        325,
                        39
                    ],
                    "start": [
                        325,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                325,
                                34
                            ],
                            "start": [
                                325,
                                16
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                325,
                                                22
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    325,
                                                    22
                                                ],
                                                "start": [
                                                    325,
                                                    20
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                325,
                                                20
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                325,
                                                25
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    325,
                                                    25
                                                ],
                                                "start": [
                                                    325,
                                                    23
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                325,
                                                23
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        325,
                                        34
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                325,
                                                34
                                            ],
                                            "start": [
                                                325,
                                                27
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        325,
                                                        34
                                                    ],
                                                    "start": [
                                                        325,
                                                        27
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "boolean"
                                                }
                                            ],
                                            "view": "boolean"
                                        }
                                    ],
                                    "start": [
                                        325,
                                        16
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):boolean"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):boolean"
                        },
                        {
                            "finish": [
                                325,
                                39
                            ],
                            "start": [
                                325,
                                36
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):boolean|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    325,
                    39
                ],
                "name": "__eq",
                "start": [
                    325,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):boolean|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        308,
                        25
                    ],
                    "start": [
                        308,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "args": [
                                {
                                    "finish": [
                                        308,
                                        20
                                    ],
                                    "name": {
                                        "[1]": "t",
                                        "finish": [
                                            308,
                                            20
                                        ],
                                        "start": [
                                            308,
                                            19
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "t"
                                    },
                                    "start": [
                                        308,
                                        19
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                308,
                                21
                            ],
                            "returns": {
                                "view": "unknown"
                            },
                            "start": [
                                308,
                                15
                            ],
                            "type": "doc.type.function",
                            "view": "fun(t: any)"
                        },
                        {
                            "finish": [
                                308,
                                25
                            ],
                            "start": [
                                308,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any)|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    308,
                    25
                ],
                "name": "__gc",
                "start": [
                    308,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any)|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        316,
                        37
                    ],
                    "start": [
                        316,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                316,
                                32
                            ],
                            "start": [
                                316,
                                18
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                316,
                                                24
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    316,
                                                    24
                                                ],
                                                "start": [
                                                    316,
                                                    22
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                316,
                                                22
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                316,
                                                27
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    316,
                                                    27
                                                ],
                                                "start": [
                                                    316,
                                                    25
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                316,
                                                25
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        316,
                                        32
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                316,
                                                32
                                            ],
                                            "start": [
                                                316,
                                                29
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        316,
                                                        32
                                                    ],
                                                    "start": [
                                                        316,
                                                        29
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        316,
                                        18
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                316,
                                37
                            ],
                            "start": [
                                316,
                                34
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    316,
                    37
                ],
                "name": "__idiv",
                "start": [
                    316,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        328,
                        42
                    ],
                    "start": [
                        328,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                328,
                                23
                            ],
                            "start": [
                                328,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        },
                        {
                            "finish": [
                                328,
                                37
                            ],
                            "start": [
                                328,
                                25
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                328,
                                                30
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    328,
                                                    30
                                                ],
                                                "start": [
                                                    328,
                                                    29
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                328,
                                                29
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                328,
                                                32
                                            ],
                                            "name": {
                                                "[1]": "k",
                                                "finish": [
                                                    328,
                                                    32
                                                ],
                                                "start": [
                                                    328,
                                                    31
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "k"
                                            },
                                            "start": [
                                                328,
                                                31
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        328,
                                        37
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                328,
                                                37
                                            ],
                                            "start": [
                                                328,
                                                34
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        328,
                                                        37
                                                    ],
                                                    "start": [
                                                        328,
                                                        34
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        328,
                                        25
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any, k: any):any"
                                }
                            ],
                            "view": "fun(t: any, k: any):any"
                        },
                        {
                            "finish": [
                                328,
                                42
                            ],
                            "start": [
                                328,
                                39
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "table|fun(t: any, k: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    328,
                    42
                ],
                "name": "__index",
                "start": [
                    328,
                    10
                ],
                "type": "doc.field",
                "view": "table|fun(t: any, k: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        327,
                        39
                    ],
                    "start": [
                        327,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                327,
                                34
                            ],
                            "start": [
                                327,
                                16
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                327,
                                                22
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    327,
                                                    22
                                                ],
                                                "start": [
                                                    327,
                                                    20
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                327,
                                                20
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                327,
                                                25
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    327,
                                                    25
                                                ],
                                                "start": [
                                                    327,
                                                    23
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                327,
                                                23
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        327,
                                        34
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                327,
                                                34
                                            ],
                                            "start": [
                                                327,
                                                27
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        327,
                                                        34
                                                    ],
                                                    "start": [
                                                        327,
                                                        27
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "boolean"
                                                }
                                            ],
                                            "view": "boolean"
                                        }
                                    ],
                                    "start": [
                                        327,
                                        16
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):boolean"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):boolean"
                        },
                        {
                            "finish": [
                                327,
                                39
                            ],
                            "start": [
                                327,
                                36
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):boolean|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    327,
                    39
                ],
                "name": "__le",
                "start": [
                    327,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):boolean|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        324,
                        36
                    ],
                    "start": [
                        324,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                324,
                                31
                            ],
                            "start": [
                                324,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                324,
                                                22
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    324,
                                                    22
                                                ],
                                                "start": [
                                                    324,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                324,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        324,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                324,
                                                31
                                            ],
                                            "start": [
                                                324,
                                                24
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        324,
                                                        31
                                                    ],
                                                    "start": [
                                                        324,
                                                        24
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "integer"
                                                }
                                            ],
                                            "view": "integer"
                                        }
                                    ],
                                    "start": [
                                        324,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any):integer"
                                }
                            ],
                            "view": "fun(t: any):integer"
                        },
                        {
                            "finish": [
                                324,
                                36
                            ],
                            "start": [
                                324,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any):integer|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    324,
                    36
                ],
                "name": "__len",
                "start": [
                    324,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any):integer|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        326,
                        39
                    ],
                    "start": [
                        326,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                326,
                                34
                            ],
                            "start": [
                                326,
                                16
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                326,
                                                22
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    326,
                                                    22
                                                ],
                                                "start": [
                                                    326,
                                                    20
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                326,
                                                20
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                326,
                                                25
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    326,
                                                    25
                                                ],
                                                "start": [
                                                    326,
                                                    23
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                326,
                                                23
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        326,
                                        34
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                326,
                                                34
                                            ],
                                            "start": [
                                                326,
                                                27
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        326,
                                                        34
                                                    ],
                                                    "start": [
                                                        326,
                                                        27
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "boolean"
                                                }
                                            ],
                                            "view": "boolean"
                                        }
                                    ],
                                    "start": [
                                        326,
                                        16
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):boolean"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):boolean"
                        },
                        {
                            "finish": [
                                326,
                                39
                            ],
                            "start": [
                                326,
                                36
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):boolean|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    326,
                    39
                ],
                "name": "__lt",
                "start": [
                    326,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):boolean|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        306,
                        29
                    ],
                    "start": [
                        306,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                306,
                                25
                            ],
                            "start": [
                                306,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "any"
                        },
                        {
                            "finish": [
                                306,
                                29
                            ],
                            "start": [
                                306,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    306,
                    29
                ],
                "name": "__metatable",
                "start": [
                    306,
                    10
                ],
                "type": "doc.field",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        313,
                        36
                    ],
                    "start": [
                        313,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                313,
                                31
                            ],
                            "start": [
                                313,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                313,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    313,
                                                    23
                                                ],
                                                "start": [
                                                    313,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                313,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                313,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    313,
                                                    26
                                                ],
                                                "start": [
                                                    313,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                313,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        313,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                313,
                                                31
                                            ],
                                            "start": [
                                                313,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        313,
                                                        31
                                                    ],
                                                    "start": [
                                                        313,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        313,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                313,
                                36
                            ],
                            "start": [
                                313,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    313,
                    36
                ],
                "name": "__mod",
                "start": [
                    313,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        305,
                        33
                    ],
                    "start": [
                        305,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                305,
                                20
                            ],
                            "start": [
                                305,
                                17
                            ],
                            "type": "doc.type.string",
                            "view": "'v'"
                        },
                        {
                            "finish": [
                                305,
                                24
                            ],
                            "start": [
                                305,
                                21
                            ],
                            "type": "doc.type.string",
                            "view": "'k'"
                        },
                        {
                            "finish": [
                                305,
                                29
                            ],
                            "start": [
                                305,
                                25
                            ],
                            "type": "doc.type.string",
                            "view": "'kv'"
                        },
                        {
                            "finish": [
                                305,
                                33
                            ],
                            "start": [
                                305,
                                30
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "'k'|'kv'|'v'|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    305,
                    33
                ],
                "name": "__mode",
                "start": [
                    305,
                    10
                ],
                "type": "doc.field",
                "view": "'k'|'kv'|'v'|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        311,
                        36
                    ],
                    "start": [
                        311,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                311,
                                31
                            ],
                            "start": [
                                311,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                311,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    311,
                                                    23
                                                ],
                                                "start": [
                                                    311,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                311,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                311,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    311,
                                                    26
                                                ],
                                                "start": [
                                                    311,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                311,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        311,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                311,
                                                31
                                            ],
                                            "start": [
                                                311,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        311,
                                                        31
                                                    ],
                                                    "start": [
                                                        311,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        311,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                311,
                                36
                            ],
                            "start": [
                                311,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    311,
                    36
                ],
                "name": "__mul",
                "start": [
                    311,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        329,
                        41
                    ],
                    "start": [
                        329,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                329,
                                26
                            ],
                            "start": [
                                329,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        },
                        {
                            "args": [
                                {
                                    "finish": [
                                        329,
                                        32
                                    ],
                                    "name": {
                                        "[1]": "t",
                                        "finish": [
                                            329,
                                            32
                                        ],
                                        "start": [
                                            329,
                                            31
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "t"
                                    },
                                    "start": [
                                        329,
                                        31
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        329,
                                        34
                                    ],
                                    "name": {
                                        "[1]": "k",
                                        "finish": [
                                            329,
                                            34
                                        ],
                                        "start": [
                                            329,
                                            33
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "k"
                                    },
                                    "start": [
                                        329,
                                        33
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                },
                                {
                                    "finish": [
                                        329,
                                        36
                                    ],
                                    "name": {
                                        "[1]": "v",
                                        "finish": [
                                            329,
                                            36
                                        ],
                                        "start": [
                                            329,
                                            35
                                        ],
                                        "type": "doc.type.arg.name",
                                        "view": "v"
                                    },
                                    "start": [
                                        329,
                                        35
                                    ],
                                    "type": "doc.type.arg",
                                    "view": "any"
                                }
                            ],
                            "finish": [
                                329,
                                37
                            ],
                            "returns": {
                                "view": "unknown"
                            },
                            "start": [
                                329,
                                27
                            ],
                            "type": "doc.type.function",
                            "view": "fun(t: any, k: any, v: any)"
                        },
                        {
                            "finish": [
                                329,
                                41
                            ],
                            "start": [
                                329,
                                38
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "table|fun(t: any, k: any, v: any)|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    329,
                    41
                ],
                "name": "__newindex",
                "start": [
                    329,
                    10
                ],
                "type": "doc.field",
                "view": "table|fun(t: any, k: any, v: any)|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        331,
                        61
                    ],
                    "start": [
                        331,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                331,
                                56
                            ],
                            "start": [
                                331,
                                19
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                331,
                                                24
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    331,
                                                    24
                                                ],
                                                "start": [
                                                    331,
                                                    23
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                331,
                                                23
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        331,
                                        56
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                331,
                                                47
                                            ],
                                            "start": [
                                                331,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        331,
                                                        46
                                                    ],
                                                    "start": [
                                                        331,
                                                        28
                                                    ],
                                                    "type": "doc.type",
                                                    "types": [
                                                        {
                                                            "args": [
                                                                {
                                                                    "finish": [
                                                                        331,
                                                                        33
                                                                    ],
                                                                    "name": {
                                                                        "[1]": "t",
                                                                        "finish": [
                                                                            331,
                                                                            33
                                                                        ],
                                                                        "start": [
                                                                            331,
                                                                            32
                                                                        ],
                                                                        "type": "doc.type.arg.name",
                                                                        "view": "t"
                                                                    },
                                                                    "start": [
                                                                        331,
                                                                        32
                                                                    ],
                                                                    "type": "doc.type.arg",
                                                                    "view": "any"
                                                                },
                                                                {
                                                                    "finish": [
                                                                        331,
                                                                        35
                                                                    ],
                                                                    "name": {
                                                                        "[1]": "k",
                                                                        "finish": [
                                                                            331,
                                                                            35
                                                                        ],
                                                                        "start": [
                                                                            331,
                                                                            34
                                                                        ],
                                                                        "type": "doc.type.arg.name",
                                                                        "view": "k"
                                                                    },
                                                                    "start": [
                                                                        331,
                                                                        34
                                                                    ],
                                                                    "type": "doc.type.arg",
                                                                    "view": "any"
                                                                },
                                                                {
                                                                    "finish": [
                                                                        331,
                                                                        37
                                                                    ],
                                                                    "name": {
                                                                        "[1]": "v",
                                                                        "finish": [
                                                                            331,
                                                                            37
                                                                        ],
                                                                        "start": [
                                                                            331,
                                                                            36
                                                                        ],
                                                                        "type": "doc.type.arg.name",
                                                                        "view": "v"
                                                                    },
                                                                    "start": [
                                                                        331,
                                                                        36
                                                                    ],
                                                                    "type": "doc.type.arg",
                                                                    "view": "any"
                                                                }
                                                            ],
                                                            "finish": [
                                                                331,
                                                                46
                                                            ],
                                                            "returns": [
                                                                {
                                                                    "finish": [
                                                                        331,
                                                                        42
                                                                    ],
                                                                    "start": [
                                                                        331,
                                                                        39
                                                                    ],
                                                                    "type": "doc.type",
                                                                    "types": [
                                                                        {
                                                                            "finish": [
                                                                                331,
                                                                                42
                                                                            ],
                                                                            "start": [
                                                                                331,
                                                                                39
                                                                            ],
                                                                            "type": "doc.type.name",
                                                                            "view": "any"
                                                                        }
                                                                    ],
                                                                    "view": "any"
                                                                },
                                                                {
                                                                    "finish": [
                                                                        331,
                                                                        46
                                                                    ],
                                                                    "start": [
                                                                        331,
                                                                        43
                                                                    ],
                                                                    "type": "doc.type",
                                                                    "types": [
                                                                        {
                                                                            "finish": [
                                                                                331,
                                                                                46
                                                                            ],
                                                                            "start": [
                                                                                331,
                                                                                43
                                                                            ],
                                                                            "type": "doc.type.name",
                                                                            "view": "any"
                                                                        }
                                                                    ],
                                                                    "view": "any"
                                                                }
                                                            ],
                                                            "start": [
                                                                331,
                                                                28
                                                            ],
                                                            "type": "doc.type.function",
                                                            "view": "fun(t: any, k: any, v: any):any, any"
                                                        }
                                                    ],
                                                    "view": "fun(t: any, k: any, v: any):any, any"
                                                }
                                            ],
                                            "view": "fun(t: any, k: any, v: any):any, any"
                                        },
                                        {
                                            "finish": [
                                                331,
                                                51
                                            ],
                                            "start": [
                                                331,
                                                48
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        331,
                                                        51
                                                    ],
                                                    "start": [
                                                        331,
                                                        48
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                331,
                                                55
                                            ],
                                            "start": [
                                                331,
                                                52
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        331,
                                                        55
                                                    ],
                                                    "start": [
                                                        331,
                                                        52
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        331,
                                        19
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any):fun(t: any, k: any, v: any):any, any, any, any"
                                }
                            ],
                            "view": "fun(t: any):fun(t: any, k: any, v: any):any, any, any, any"
                        },
                        {
                            "finish": [
                                331,
                                61
                            ],
                            "start": [
                                331,
                                58
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any):fun(t: any, k: any, v: any):any, any, any, any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    331,
                    61
                ],
                "name": "__pairs",
                "start": [
                    331,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any):fun(t: any, k: any, v: any):any, any, any, any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        314,
                        36
                    ],
                    "start": [
                        314,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                314,
                                31
                            ],
                            "start": [
                                314,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                314,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    314,
                                                    23
                                                ],
                                                "start": [
                                                    314,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                314,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                314,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    314,
                                                    26
                                                ],
                                                "start": [
                                                    314,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                314,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        314,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                314,
                                                31
                                            ],
                                            "start": [
                                                314,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        314,
                                                        31
                                                    ],
                                                    "start": [
                                                        314,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        314,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                314,
                                36
                            ],
                            "start": [
                                314,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    314,
                    36
                ],
                "name": "__pow",
                "start": [
                    314,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        321,
                        36
                    ],
                    "start": [
                        321,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                321,
                                31
                            ],
                            "start": [
                                321,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                321,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    321,
                                                    23
                                                ],
                                                "start": [
                                                    321,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                321,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                321,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    321,
                                                    26
                                                ],
                                                "start": [
                                                    321,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                321,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        321,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                321,
                                                31
                                            ],
                                            "start": [
                                                321,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        321,
                                                        31
                                                    ],
                                                    "start": [
                                                        321,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        321,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                321,
                                36
                            ],
                            "start": [
                                321,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    321,
                    36
                ],
                "name": "__shl",
                "start": [
                    321,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        322,
                        36
                    ],
                    "start": [
                        322,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                322,
                                31
                            ],
                            "start": [
                                322,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                322,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    322,
                                                    23
                                                ],
                                                "start": [
                                                    322,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                322,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                322,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    322,
                                                    26
                                                ],
                                                "start": [
                                                    322,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                322,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        322,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                322,
                                                31
                                            ],
                                            "start": [
                                                322,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        322,
                                                        31
                                                    ],
                                                    "start": [
                                                        322,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        322,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                322,
                                36
                            ],
                            "start": [
                                322,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    322,
                    36
                ],
                "name": "__shr",
                "start": [
                    322,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        310,
                        36
                    ],
                    "start": [
                        310,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                310,
                                31
                            ],
                            "start": [
                                310,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                310,
                                                23
                                            ],
                                            "name": {
                                                "[1]": "t1",
                                                "finish": [
                                                    310,
                                                    23
                                                ],
                                                "start": [
                                                    310,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t1"
                                            },
                                            "start": [
                                                310,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        },
                                        {
                                            "finish": [
                                                310,
                                                26
                                            ],
                                            "name": {
                                                "[1]": "t2",
                                                "finish": [
                                                    310,
                                                    26
                                                ],
                                                "start": [
                                                    310,
                                                    24
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t2"
                                            },
                                            "start": [
                                                310,
                                                24
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        310,
                                        31
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                310,
                                                31
                                            ],
                                            "start": [
                                                310,
                                                28
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        310,
                                                        31
                                                    ],
                                                    "start": [
                                                        310,
                                                        28
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        310,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t1: any, t2: any):any"
                                }
                            ],
                            "view": "fun(t1: any, t2: any):any"
                        },
                        {
                            "finish": [
                                310,
                                36
                            ],
                            "start": [
                                310,
                                33
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t1: any, t2: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    310,
                    36
                ],
                "name": "__sub",
                "start": [
                    310,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t1: any, t2: any):any|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        307,
                        40
                    ],
                    "start": [
                        307,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                307,
                                35
                            ],
                            "start": [
                                307,
                                22
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                307,
                                                27
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    307,
                                                    27
                                                ],
                                                "start": [
                                                    307,
                                                    26
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                307,
                                                26
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        307,
                                        35
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                307,
                                                35
                                            ],
                                            "start": [
                                                307,
                                                29
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        307,
                                                        35
                                                    ],
                                                    "start": [
                                                        307,
                                                        29
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "string"
                                                }
                                            ],
                                            "view": "string"
                                        }
                                    ],
                                    "start": [
                                        307,
                                        22
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any):string"
                                }
                            ],
                            "view": "fun(t: any):string"
                        },
                        {
                            "finish": [
                                307,
                                40
                            ],
                            "start": [
                                307,
                                37
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any):string|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    307,
                    40
                ],
                "name": "__tostring",
                "start": [
                    307,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any):string|nil",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        315,
                        32
                    ],
                    "start": [
                        315,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                315,
                                27
                            ],
                            "start": [
                                315,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "args": [
                                        {
                                            "finish": [
                                                315,
                                                22
                                            ],
                                            "name": {
                                                "[1]": "t",
                                                "finish": [
                                                    315,
                                                    22
                                                ],
                                                "start": [
                                                    315,
                                                    21
                                                ],
                                                "type": "doc.type.arg.name",
                                                "view": "t"
                                            },
                                            "start": [
                                                315,
                                                21
                                            ],
                                            "type": "doc.type.arg",
                                            "view": "any"
                                        }
                                    ],
                                    "finish": [
                                        315,
                                        27
                                    ],
                                    "returns": [
                                        {
                                            "finish": [
                                                315,
                                                27
                                            ],
                                            "start": [
                                                315,
                                                24
                                            ],
                                            "type": "doc.type",
                                            "types": [
                                                {
                                                    "finish": [
                                                        315,
                                                        27
                                                    ],
                                                    "start": [
                                                        315,
                                                        24
                                                    ],
                                                    "type": "doc.type.name",
                                                    "view": "any"
                                                }
                                            ],
                                            "view": "any"
                                        }
                                    ],
                                    "start": [
                                        315,
                                        17
                                    ],
                                    "type": "doc.type.function",
                                    "view": "fun(t: any):any"
                                }
                            ],
                            "view": "fun(t: any):any"
                        },
                        {
                            "finish": [
                                315,
                                32
                            ],
                            "start": [
                                315,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "nil"
                        }
                    ],
                    "view": "fun(t: any):any|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    315,
                    32
                ],
                "name": "__unm",
                "start": [
                    315,
                    10
                ],
                "type": "doc.field",
                "view": "fun(t: any):any|nil",
                "visible": "public"
            }
        ],
        "name": "metatable",
        "type": "type",
        "view": "metatable"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-module\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                172,
                                20
                            ],
                            "name": "name",
                            "start": [
                                172,
                                16
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                172,
                                25
                            ],
                            "start": [
                                172,
                                22
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-module\"])",
                    "finish": [
                        172,
                        30
                    ],
                    "rawdesc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-module\"])",
                    "start": [
                        172,
                        0
                    ],
                    "type": "function",
                    "view": "function module(name: string, ...any)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    172,
                    15
                ],
                "rawdesc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-module\"])",
                "start": [
                    172,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "module",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                162,
                                23
                            ],
                            "name": "proxy",
                            "start": [
                                162,
                                18
                            ],
                            "type": "local",
                            "view": "boolean|table|userdata"
                        }
                    ],
                    "finish": [
                        162,
                        28
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": [
                        162,
                        0
                    ],
                    "type": "function",
                    "view": "function newproxy(proxy: boolean|table|userdata)\n  -> userdata"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    162,
                    17
                ],
                "start": [
                    162,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "newproxy",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                190,
                                19
                            ],
                            "name": "table",
                            "start": [
                                190,
                                14
                            ],
                            "type": "local",
                            "view": "table<<K>, <V>>"
                        },
                        {
                            "finish": [
                                190,
                                26
                            ],
                            "name": "index",
                            "start": [
                                190,
                                21
                            ],
                            "type": "local",
                            "view": "<K>?"
                        }
                    ],
                    "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"])",
                    "finish": [
                        190,
                        31
                    ],
                    "rawdesc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<K>?"
                        },
                        {
                            "type": "function.return",
                            "view": "<V>?"
                        }
                    ],
                    "start": [
                        190,
                        0
                    ],
                    "type": "function",
                    "view": "function next(table: table<<K>, <V>>, index?: <K>)\n  -> <K>?\n  2. <V>?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    190,
                    13
                ],
                "rawdesc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"])",
                "start": [
                    190,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "next",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    4,
                    13
                ],
                "start": [
                    4,
                    10
                ],
                "type": "doc.class",
                "view": "nil",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "nil",
        "type": "type",
        "view": "nil"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    8,
                    16
                ],
                "start": [
                    8,
                    10
                ],
                "type": "doc.class",
                "view": "number",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "number",
        "type": "type",
        "view": "number"
    },
    {
        "defines": [
            {
                "desc": "```lua\nopenmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                "finish": [
                    40,
                    10
                ],
                "rawdesc": "```lua\nopenmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                "start": [
                    28,
                    10
                ],
                "type": "doc.alias",
                "view": "\"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7)"
            }
        ],
        "fields": [],
        "name": "openmode",
        "type": "type",
        "view": "openmode"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os\"])\n",
                    "finish": [
                        8,
                        7
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os\"])\n",
                    "start": [
                        8,
                        5
                    ],
                    "type": "table",
                    "view": "oslib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    8,
                    2
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os\"])\n",
                "start": [
                    8,
                    0
                ],
                "type": "setglobal",
                "view": "oslib",
                "visible": "public"
            }
        ],
        "name": "os",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                    "finish": [
                        17,
                        23
                    ],
                    "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        17,
                        0
                    ],
                    "type": "function",
                    "view": "function os.clock()\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    17,
                    17
                ],
                "name": "clock",
                "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                "start": [
                    17,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.clock",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                23
                            ],
                            "name": "format",
                            "start": [
                                84,
                                17
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                84,
                                29
                            ],
                            "name": "time",
                            "start": [
                                84,
                                25
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                    "finish": [
                        84,
                        34
                    ],
                    "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|osdate"
                        }
                    ],
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "function os.date(format?: string, time?: integer)\n  -> string|osdate"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    84,
                    16
                ],
                "name": "date",
                "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                "start": [
                    84,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.date",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                95,
                                23
                            ],
                            "name": "t2",
                            "start": [
                                95,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                95,
                                27
                            ],
                            "name": "t1",
                            "start": [
                                95,
                                25
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                    "finish": [
                        95,
                        32
                    ],
                    "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        95,
                        0
                    ],
                    "type": "function",
                    "view": "function os.difftime(t2: integer, t1: integer)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    95,
                    20
                ],
                "name": "difftime",
                "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                "start": [
                    95,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.difftime",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                106,
                                27
                            ],
                            "name": "command",
                            "start": [
                                106,
                                20
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": [
                        106,
                        32
                    ],
                    "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        106,
                        0
                    ],
                    "type": "function",
                    "view": "function os.execute(command?: string)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    106,
                    19
                ],
                "name": "execute",
                "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "start": [
                    106,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.execute",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                115,
                                21
                            ],
                            "name": "code",
                            "start": [
                                115,
                                17
                            ],
                            "type": "local",
                            "view": "(boolean|integer)?"
                        },
                        {
                            "finish": [
                                115,
                                28
                            ],
                            "name": "close",
                            "start": [
                                115,
                                23
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                    "finish": [
                        115,
                        33
                    ],
                    "rawdesc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                    "start": [
                        115,
                        0
                    ],
                    "type": "function",
                    "view": "function os.exit(code?: boolean|integer, close?: boolean)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    115,
                    16
                ],
                "name": "exit",
                "rawdesc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                "start": [
                    115,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.exit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                125,
                                26
                            ],
                            "name": "varname",
                            "start": [
                                125,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                    "finish": [
                        125,
                        31
                    ],
                    "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        125,
                        0
                    ],
                    "type": "function",
                    "view": "function os.getenv(varname: string)\n  -> string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    125,
                    18
                ],
                "name": "getenv",
                "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                "start": [
                    125,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.getenv",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                135,
                                27
                            ],
                            "name": "filename",
                            "start": [
                                135,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                    "finish": [
                        135,
                        32
                    ],
                    "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        135,
                        0
                    ],
                    "type": "function",
                    "view": "function os.remove(filename: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    135,
                    18
                ],
                "name": "remove",
                "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                "start": [
                    135,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.remove",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                146,
                                26
                            ],
                            "name": "oldname",
                            "start": [
                                146,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                146,
                                35
                            ],
                            "name": "newname",
                            "start": [
                                146,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                    "finish": [
                        146,
                        40
                    ],
                    "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        146,
                        0
                    ],
                    "type": "function",
                    "view": "function os.rename(oldname: string, newname: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    146,
                    18
                ],
                "name": "rename",
                "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                "start": [
                    146,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.rename",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                164,
                                28
                            ],
                            "name": "locale",
                            "start": [
                                164,
                                22
                            ],
                            "type": "local",
                            "view": "string|nil"
                        },
                        {
                            "finish": [
                                164,
                                38
                            ],
                            "name": "category",
                            "start": [
                                164,
                                30
                            ],
                            "type": "local",
                            "view": "(\"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))?"
                        }
                    ],
                    "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "finish": [
                        164,
                        43
                    ],
                    "rawdesc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "returns": [
                        {
                            "name": "localecategory",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        164,
                        0
                    ],
                    "type": "function",
                    "view": "function os.setlocale(locale: string|nil, category?: \"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))\n  -> localecategory: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    164,
                    21
                ],
                "name": "setlocale",
                "rawdesc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                "start": [
                    164,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.setlocale",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                230,
                                21
                            ],
                            "name": "date",
                            "start": [
                                230,
                                17
                            ],
                            "type": "local",
                            "view": "osdateparam?"
                        }
                    ],
                    "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                    "finish": [
                        230,
                        26
                    ],
                    "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        230,
                        0
                    ],
                    "type": "function",
                    "view": "function os.time(date?: osdateparam)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    230,
                    16
                ],
                "name": "time",
                "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                "start": [
                    230,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.time",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                    "finish": [
                        239,
                        25
                    ],
                    "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        239,
                        0
                    ],
                    "type": "function",
                    "view": "function os.tmpname()\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    239,
                    19
                ],
                "name": "tmpname",
                "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                "start": [
                    239,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "os.tmpname",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    19,
                    16
                ],
                "start": [
                    19,
                    10
                ],
                "type": "doc.class",
                "view": "osdate",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n1-31\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.day\"])\n",
                "extends": {
                    "finish": [
                        37,
                        30
                    ],
                    "start": [
                        37,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                37,
                                23
                            ],
                            "start": [
                                37,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                37,
                                30
                            ],
                            "start": [
                                37,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    37,
                    30
                ],
                "name": "day",
                "rawdesc": "\n1-31\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.day\"])\n",
                "start": [
                    37,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n0-23\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.hour\"])\n",
                "extends": {
                    "finish": [
                        43,
                        30
                    ],
                    "start": [
                        43,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                43,
                                23
                            ],
                            "start": [
                                43,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                43,
                                30
                            ],
                            "start": [
                                43,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    43,
                    30
                ],
                "name": "hour",
                "rawdesc": "\n0-23\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.hour\"])\n",
                "start": [
                    43,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\ndaylight saving flag, a boolean\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.isdst\"])\n",
                "extends": {
                    "finish": [
                        73,
                        23
                    ],
                    "start": [
                        73,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                73,
                                23
                            ],
                            "start": [
                                73,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    73,
                    23
                ],
                "name": "isdst",
                "rawdesc": "\ndaylight saving flag, a boolean\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.isdst\"])\n",
                "start": [
                    73,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n0-59\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.min\"])\n",
                "extends": {
                    "finish": [
                        49,
                        30
                    ],
                    "start": [
                        49,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                49,
                                23
                            ],
                            "start": [
                                49,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                49,
                                30
                            ],
                            "start": [
                                49,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    49,
                    30
                ],
                "name": "min",
                "rawdesc": "\n0-59\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.min\"])\n",
                "start": [
                    49,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n1-12\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.month\"])\n",
                "extends": {
                    "finish": [
                        31,
                        30
                    ],
                    "start": [
                        31,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                31,
                                23
                            ],
                            "start": [
                                31,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                31,
                                30
                            ],
                            "start": [
                                31,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    31,
                    30
                ],
                "name": "month",
                "rawdesc": "\n1-12\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.month\"])\n",
                "start": [
                    31,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n0-61\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.sec\"])\n",
                "extends": {
                    "finish": [
                        55,
                        30
                    ],
                    "start": [
                        55,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                55,
                                23
                            ],
                            "start": [
                                55,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                55,
                                30
                            ],
                            "start": [
                                55,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    55,
                    30
                ],
                "name": "sec",
                "rawdesc": "\n0-61\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.sec\"])\n",
                "start": [
                    55,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nweekday, 1–7, Sunday is 1\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.wday\"])\n",
                "extends": {
                    "finish": [
                        61,
                        30
                    ],
                    "start": [
                        61,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                61,
                                23
                            ],
                            "start": [
                                61,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                61,
                                30
                            ],
                            "start": [
                                61,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    61,
                    30
                ],
                "name": "wday",
                "rawdesc": "\nweekday, 1–7, Sunday is 1\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.wday\"])\n",
                "start": [
                    61,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nday of the year, 1–366\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.yday\"])\n",
                "extends": {
                    "finish": [
                        67,
                        30
                    ],
                    "start": [
                        67,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                67,
                                23
                            ],
                            "start": [
                                67,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                67,
                                30
                            ],
                            "start": [
                                67,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    67,
                    30
                ],
                "name": "yday",
                "rawdesc": "\nday of the year, 1–366\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.yday\"])\n",
                "start": [
                    67,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nfour digits\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.year\"])\n",
                "extends": {
                    "finish": [
                        25,
                        30
                    ],
                    "start": [
                        25,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                25,
                                23
                            ],
                            "start": [
                                25,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                25,
                                30
                            ],
                            "start": [
                                25,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    25,
                    30
                ],
                "name": "year",
                "rawdesc": "\nfour digits\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.year\"])\n",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            }
        ],
        "name": "osdate",
        "type": "type",
        "view": "osdate"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    166,
                    21
                ],
                "start": [
                    166,
                    10
                ],
                "type": "doc.class",
                "view": "osdateparam",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n1-31\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.day\"])\n",
                "extends": {
                    "finish": [
                        184,
                        30
                    ],
                    "start": [
                        184,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                184,
                                23
                            ],
                            "start": [
                                184,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                184,
                                30
                            ],
                            "start": [
                                184,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    184,
                    30
                ],
                "name": "day",
                "rawdesc": "\n1-31\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.day\"])\n",
                "start": [
                    184,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n0-23\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.hour\"])\n",
                "extends": {
                    "finish": [
                        190,
                        33
                    ],
                    "start": [
                        190,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                190,
                                31
                            ],
                            "start": [
                                190,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "finish": [
                                        190,
                                        24
                                    ],
                                    "start": [
                                        190,
                                        17
                                    ],
                                    "type": "doc.type.name",
                                    "view": "integer"
                                },
                                {
                                    "finish": [
                                        190,
                                        31
                                    ],
                                    "start": [
                                        190,
                                        25
                                    ],
                                    "type": "doc.type.name",
                                    "view": "string"
                                }
                            ],
                            "view": "string|integer"
                        }
                    ],
                    "view": "(string|integer)?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    190,
                    33
                ],
                "name": "hour",
                "rawdesc": "\n0-23\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.hour\"])\n",
                "start": [
                    190,
                    10
                ],
                "type": "doc.field",
                "view": "(string|integer)?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\ndaylight saving flag, a boolean\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.isdst\"])\n",
                "extends": {
                    "finish": [
                        220,
                        24
                    ],
                    "start": [
                        220,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                220,
                                23
                            ],
                            "start": [
                                220,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    220,
                    24
                ],
                "name": "isdst",
                "rawdesc": "\ndaylight saving flag, a boolean\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.isdst\"])\n",
                "start": [
                    220,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n0-59\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.min\"])\n",
                "extends": {
                    "finish": [
                        196,
                        33
                    ],
                    "start": [
                        196,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                196,
                                31
                            ],
                            "start": [
                                196,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "finish": [
                                        196,
                                        24
                                    ],
                                    "start": [
                                        196,
                                        17
                                    ],
                                    "type": "doc.type.name",
                                    "view": "integer"
                                },
                                {
                                    "finish": [
                                        196,
                                        31
                                    ],
                                    "start": [
                                        196,
                                        25
                                    ],
                                    "type": "doc.type.name",
                                    "view": "string"
                                }
                            ],
                            "view": "string|integer"
                        }
                    ],
                    "view": "(string|integer)?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    196,
                    33
                ],
                "name": "min",
                "rawdesc": "\n0-59\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.min\"])\n",
                "start": [
                    196,
                    10
                ],
                "type": "doc.field",
                "view": "(string|integer)?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n1-12\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.month\"])\n",
                "extends": {
                    "finish": [
                        178,
                        30
                    ],
                    "start": [
                        178,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                178,
                                23
                            ],
                            "start": [
                                178,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                178,
                                30
                            ],
                            "start": [
                                178,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    178,
                    30
                ],
                "name": "month",
                "rawdesc": "\n1-12\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.month\"])\n",
                "start": [
                    178,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\n0-61\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.sec\"])\n",
                "extends": {
                    "finish": [
                        202,
                        33
                    ],
                    "start": [
                        202,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                202,
                                31
                            ],
                            "start": [
                                202,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "finish": [
                                        202,
                                        24
                                    ],
                                    "start": [
                                        202,
                                        17
                                    ],
                                    "type": "doc.type.name",
                                    "view": "integer"
                                },
                                {
                                    "finish": [
                                        202,
                                        31
                                    ],
                                    "start": [
                                        202,
                                        25
                                    ],
                                    "type": "doc.type.name",
                                    "view": "string"
                                }
                            ],
                            "view": "string|integer"
                        }
                    ],
                    "view": "(string|integer)?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    202,
                    33
                ],
                "name": "sec",
                "rawdesc": "\n0-61\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.sec\"])\n",
                "start": [
                    202,
                    10
                ],
                "type": "doc.field",
                "view": "(string|integer)?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nweekday, 1–7, Sunday is 1\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.wday\"])\n",
                "extends": {
                    "finish": [
                        208,
                        33
                    ],
                    "start": [
                        208,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                208,
                                31
                            ],
                            "start": [
                                208,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "finish": [
                                        208,
                                        24
                                    ],
                                    "start": [
                                        208,
                                        17
                                    ],
                                    "type": "doc.type.name",
                                    "view": "integer"
                                },
                                {
                                    "finish": [
                                        208,
                                        31
                                    ],
                                    "start": [
                                        208,
                                        25
                                    ],
                                    "type": "doc.type.name",
                                    "view": "string"
                                }
                            ],
                            "view": "string|integer"
                        }
                    ],
                    "view": "(string|integer)?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    208,
                    33
                ],
                "name": "wday",
                "rawdesc": "\nweekday, 1–7, Sunday is 1\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.wday\"])\n",
                "start": [
                    208,
                    10
                ],
                "type": "doc.field",
                "view": "(string|integer)?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nday of the year, 1–366\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.yday\"])\n",
                "extends": {
                    "finish": [
                        214,
                        33
                    ],
                    "start": [
                        214,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                214,
                                31
                            ],
                            "start": [
                                214,
                                17
                            ],
                            "type": "doc.type",
                            "types": [
                                {
                                    "finish": [
                                        214,
                                        24
                                    ],
                                    "start": [
                                        214,
                                        17
                                    ],
                                    "type": "doc.type.name",
                                    "view": "integer"
                                },
                                {
                                    "finish": [
                                        214,
                                        31
                                    ],
                                    "start": [
                                        214,
                                        25
                                    ],
                                    "type": "doc.type.name",
                                    "view": "string"
                                }
                            ],
                            "view": "string|integer"
                        }
                    ],
                    "view": "(string|integer)?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    214,
                    33
                ],
                "name": "yday",
                "rawdesc": "\nday of the year, 1–366\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.yday\"])\n",
                "start": [
                    214,
                    10
                ],
                "type": "doc.field",
                "view": "(string|integer)?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nfour digits\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.year\"])\n",
                "extends": {
                    "finish": [
                        172,
                        30
                    ],
                    "start": [
                        172,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                172,
                                23
                            ],
                            "start": [
                                172,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                172,
                                30
                            ],
                            "start": [
                                172,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string|integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    172,
                    30
                ],
                "name": "year",
                "rawdesc": "\nfour digits\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-osdate.year\"])\n",
                "start": [
                    172,
                    10
                ],
                "type": "doc.field",
                "view": "string|integer",
                "visible": "public"
            }
        ],
        "name": "osdateparam",
        "type": "type",
        "view": "osdateparam"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    7,
                    15
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os\"])\n",
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "oslib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                    "finish": [
                        17,
                        23
                    ],
                    "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        17,
                        0
                    ],
                    "type": "function",
                    "view": "function os.clock()\n  -> number"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    17,
                    17
                ],
                "name": "clock",
                "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                "start": [
                    17,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                23
                            ],
                            "name": "format",
                            "start": [
                                84,
                                17
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                84,
                                29
                            ],
                            "name": "time",
                            "start": [
                                84,
                                25
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                    "finish": [
                        84,
                        34
                    ],
                    "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|osdate"
                        }
                    ],
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "function os.date(format?: string, time?: integer)\n  -> string|osdate"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    84,
                    16
                ],
                "name": "date",
                "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                "start": [
                    84,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                95,
                                23
                            ],
                            "name": "t2",
                            "start": [
                                95,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                95,
                                27
                            ],
                            "name": "t1",
                            "start": [
                                95,
                                25
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                    "finish": [
                        95,
                        32
                    ],
                    "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        95,
                        0
                    ],
                    "type": "function",
                    "view": "function os.difftime(t2: integer, t1: integer)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    95,
                    20
                ],
                "name": "difftime",
                "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                "start": [
                    95,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                106,
                                27
                            ],
                            "name": "command",
                            "start": [
                                106,
                                20
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": [
                        106,
                        32
                    ],
                    "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        106,
                        0
                    ],
                    "type": "function",
                    "view": "function os.execute(command?: string)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    106,
                    19
                ],
                "name": "execute",
                "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                "start": [
                    106,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                115,
                                21
                            ],
                            "name": "code",
                            "start": [
                                115,
                                17
                            ],
                            "type": "local",
                            "view": "(boolean|integer)?"
                        },
                        {
                            "finish": [
                                115,
                                28
                            ],
                            "name": "close",
                            "start": [
                                115,
                                23
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                    "finish": [
                        115,
                        33
                    ],
                    "rawdesc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                    "start": [
                        115,
                        0
                    ],
                    "type": "function",
                    "view": "function os.exit(code?: boolean|integer, close?: boolean)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    115,
                    16
                ],
                "name": "exit",
                "rawdesc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                "start": [
                    115,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                125,
                                26
                            ],
                            "name": "varname",
                            "start": [
                                125,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                    "finish": [
                        125,
                        31
                    ],
                    "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        125,
                        0
                    ],
                    "type": "function",
                    "view": "function os.getenv(varname: string)\n  -> string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    125,
                    18
                ],
                "name": "getenv",
                "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                "start": [
                    125,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                135,
                                27
                            ],
                            "name": "filename",
                            "start": [
                                135,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                    "finish": [
                        135,
                        32
                    ],
                    "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        135,
                        0
                    ],
                    "type": "function",
                    "view": "function os.remove(filename: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    135,
                    18
                ],
                "name": "remove",
                "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                "start": [
                    135,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                146,
                                26
                            ],
                            "name": "oldname",
                            "start": [
                                146,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                146,
                                35
                            ],
                            "name": "newname",
                            "start": [
                                146,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                    "finish": [
                        146,
                        40
                    ],
                    "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        146,
                        0
                    ],
                    "type": "function",
                    "view": "function os.rename(oldname: string, newname: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    146,
                    18
                ],
                "name": "rename",
                "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                "start": [
                    146,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                164,
                                28
                            ],
                            "name": "locale",
                            "start": [
                                164,
                                22
                            ],
                            "type": "local",
                            "view": "string|nil"
                        },
                        {
                            "finish": [
                                164,
                                38
                            ],
                            "name": "category",
                            "start": [
                                164,
                                30
                            ],
                            "type": "local",
                            "view": "(\"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))?"
                        }
                    ],
                    "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "finish": [
                        164,
                        43
                    ],
                    "rawdesc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "returns": [
                        {
                            "name": "localecategory",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        164,
                        0
                    ],
                    "type": "function",
                    "view": "function os.setlocale(locale: string|nil, category?: \"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))\n  -> localecategory: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    164,
                    21
                ],
                "name": "setlocale",
                "rawdesc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                "start": [
                    164,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                230,
                                21
                            ],
                            "name": "date",
                            "start": [
                                230,
                                17
                            ],
                            "type": "local",
                            "view": "osdateparam?"
                        }
                    ],
                    "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                    "finish": [
                        230,
                        26
                    ],
                    "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        230,
                        0
                    ],
                    "type": "function",
                    "view": "function os.time(date?: osdateparam)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    230,
                    16
                ],
                "name": "time",
                "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                "start": [
                    230,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                "extends": {
                    "args": [],
                    "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                    "finish": [
                        239,
                        25
                    ],
                    "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        239,
                        0
                    ],
                    "type": "function",
                    "view": "function os.tmpname()\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": [
                    239,
                    19
                ],
                "name": "tmpname",
                "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                "start": [
                    239,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "oslib",
        "type": "type",
        "view": "oslib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package\"])\n",
                    "finish": [
                        42,
                        12
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package\"])\n",
                    "start": [
                        42,
                        10
                    ],
                    "type": "table",
                    "view": "packagelib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    42,
                    7
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package\"])\n",
                "start": [
                    42,
                    0
                ],
                "type": "setglobal",
                "view": "packagelib",
                "visible": "public"
            }
        ],
        "name": "package",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.config\"])\n",
                "extends": {
                    "finish": [
                        54,
                        3
                    ],
                    "start": [
                        49,
                        17
                    ],
                    "type": "string",
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    49,
                    14
                ],
                "name": "config",
                "rawdesc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.config\"])\n",
                "start": [
                    49,
                    0
                ],
                "type": "setfield",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "package.config",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loaders\"])\n",
                "extends": {
                    "finish": [
                        62,
                        20
                    ],
                    "start": [
                        62,
                        18
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    62,
                    15
                ],
                "name": "loaders",
                "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loaders\"])\n",
                "start": [
                    62,
                    0
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "package.loaders",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                72,
                                32
                            ],
                            "name": "libname",
                            "start": [
                                72,
                                25
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                72,
                                42
                            ],
                            "name": "funcname",
                            "start": [
                                72,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                    "finish": [
                        72,
                        47
                    ],
                    "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        72,
                        0
                    ],
                    "type": "function",
                    "view": "function package.loadlib(libname: string, funcname: string)\n  -> any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    72,
                    24
                ],
                "name": "loadlib",
                "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                "start": [
                    72,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "package.loadlib",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchers\"])\n",
                "extends": {
                    "finish": [
                        80,
                        22
                    ],
                    "start": [
                        80,
                        20
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    80,
                    17
                ],
                "name": "searchers",
                "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchers\"])\n",
                "start": [
                    80,
                    0
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "package.searchers",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                95,
                                32
                            ],
                            "name": "name",
                            "start": [
                                95,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                95,
                                38
                            ],
                            "name": "path",
                            "start": [
                                95,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                95,
                                43
                            ],
                            "name": "sep",
                            "start": [
                                95,
                                40
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                95,
                                48
                            ],
                            "name": "rep",
                            "start": [
                                95,
                                45
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                    "finish": [
                        95,
                        53
                    ],
                    "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                    "returns": [
                        {
                            "name": "filename",
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        95,
                        0
                    ],
                    "type": "function",
                    "view": "function package.searchpath(name: string, path: string, sep?: string, rep?: string)\n  -> filename: string?\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    95,
                    27
                ],
                "name": "searchpath",
                "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                "start": [
                    95,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "package.searchpath",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                104,
                                30
                            ],
                            "name": "module",
                            "start": [
                                104,
                                24
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                    "finish": [
                        104,
                        35
                    ],
                    "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                    "start": [
                        104,
                        0
                    ],
                    "type": "function",
                    "view": "function package.seeall(module: table)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    104,
                    23
                ],
                "name": "seeall",
                "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                "start": [
                    104,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "package.seeall",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    17,
                    20
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package\"])\n",
                "start": [
                    17,
                    10
                ],
                "type": "doc.class",
                "view": "packagelib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.config\"])\n",
                "extends": {
                    "finish": [
                        54,
                        3
                    ],
                    "start": [
                        49,
                        17
                    ],
                    "type": "string",
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    49,
                    14
                ],
                "name": "config",
                "rawdesc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.config\"])\n",
                "start": [
                    49,
                    0
                ],
                "type": "setfield",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe path used by `require` to search for a C loader.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.cpath\"])\n",
                "extends": {
                    "finish": [
                        23,
                        26
                    ],
                    "start": [
                        23,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                26
                            ],
                            "start": [
                                23,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    23,
                    26
                ],
                "name": "cpath",
                "rawdesc": "\nThe path used by `require` to search for a C loader.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.cpath\"])\n",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA table used by `require` to control which modules are already loaded.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loaded\"])\n",
                "extends": {
                    "finish": [
                        29,
                        25
                    ],
                    "start": [
                        29,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                29,
                                25
                            ],
                            "start": [
                                29,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        }
                    ],
                    "view": "table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    29,
                    25
                ],
                "name": "loaded",
                "rawdesc": "\nA table used by `require` to control which modules are already loaded.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loaded\"])\n",
                "start": [
                    29,
                    10
                ],
                "type": "doc.field",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loaders\"])\n",
                "extends": {
                    "finish": [
                        62,
                        20
                    ],
                    "start": [
                        62,
                        18
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    62,
                    15
                ],
                "name": "loaders",
                "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loaders\"])\n",
                "start": [
                    62,
                    0
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                72,
                                32
                            ],
                            "name": "libname",
                            "start": [
                                72,
                                25
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                72,
                                42
                            ],
                            "name": "funcname",
                            "start": [
                                72,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                    "finish": [
                        72,
                        47
                    ],
                    "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        72,
                        0
                    ],
                    "type": "function",
                    "view": "function package.loadlib(libname: string, funcname: string)\n  -> any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    72,
                    24
                ],
                "name": "loadlib",
                "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                "start": [
                    72,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe path used by `require` to search for a Lua loader.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.path\"])\n",
                "extends": {
                    "finish": [
                        35,
                        26
                    ],
                    "start": [
                        35,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                35,
                                26
                            ],
                            "start": [
                                35,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    35,
                    26
                ],
                "name": "path",
                "rawdesc": "\nThe path used by `require` to search for a Lua loader.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.path\"])\n",
                "start": [
                    35,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA table to store loaders for specific modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.preload\"])\n",
                "extends": {
                    "finish": [
                        41,
                        25
                    ],
                    "start": [
                        41,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                41,
                                25
                            ],
                            "start": [
                                41,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        }
                    ],
                    "view": "table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    41,
                    25
                ],
                "name": "preload",
                "rawdesc": "\nA table to store loaders for specific modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.preload\"])\n",
                "start": [
                    41,
                    10
                ],
                "type": "doc.field",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchers\"])\n",
                "extends": {
                    "finish": [
                        80,
                        22
                    ],
                    "start": [
                        80,
                        20
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    80,
                    17
                ],
                "name": "searchers",
                "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchers\"])\n",
                "start": [
                    80,
                    0
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                95,
                                32
                            ],
                            "name": "name",
                            "start": [
                                95,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                95,
                                38
                            ],
                            "name": "path",
                            "start": [
                                95,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                95,
                                43
                            ],
                            "name": "sep",
                            "start": [
                                95,
                                40
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                95,
                                48
                            ],
                            "name": "rep",
                            "start": [
                                95,
                                45
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                    "finish": [
                        95,
                        53
                    ],
                    "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                    "returns": [
                        {
                            "name": "filename",
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": [
                        95,
                        0
                    ],
                    "type": "function",
                    "view": "function package.searchpath(name: string, path: string, sep?: string, rep?: string)\n  -> filename: string?\n  2. errmsg: string?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    95,
                    27
                ],
                "name": "searchpath",
                "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                "start": [
                    95,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                104,
                                30
                            ],
                            "name": "module",
                            "start": [
                                104,
                                24
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                    "finish": [
                        104,
                        35
                    ],
                    "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                    "start": [
                        104,
                        0
                    ],
                    "type": "function",
                    "view": "function package.seeall(module: table)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    104,
                    23
                ],
                "name": "seeall",
                "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                "start": [
                    104,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "packagelib",
        "type": "type",
        "view": "packagelib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pairs\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                210,
                                16
                            ],
                            "name": "t",
                            "start": [
                                210,
                                15
                            ],
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pairs\"])",
                    "finish": [
                        210,
                        21
                    ],
                    "rawdesc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pairs\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        }
                    ],
                    "start": [
                        210,
                        0
                    ],
                    "type": "function",
                    "view": "function pairs(t: <T:table>)\n  -> fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>\n  2. <T:table>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    210,
                    14
                ],
                "rawdesc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pairs\"])",
                "start": [
                    210,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "pairs",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pcall\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                224,
                                16
                            ],
                            "name": "f",
                            "start": [
                                224,
                                15
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                224,
                                22
                            ],
                            "name": "arg1",
                            "start": [
                                224,
                                18
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                224,
                                27
                            ],
                            "start": [
                                224,
                                24
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pcall\"])",
                    "finish": [
                        224,
                        32
                    ],
                    "rawdesc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pcall\"])",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        224,
                        0
                    ],
                    "type": "function",
                    "view": "function pcall(f: fun(...any):...unknown, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    224,
                    14
                ],
                "rawdesc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pcall\"])",
                "start": [
                    224,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "pcall",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\npopenmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                "finish": [
                    108,
                    8
                ],
                "rawdesc": "```lua\npopenmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                "start": [
                    106,
                    10
                ],
                "type": "doc.alias",
                "view": "\"r\"|\"w\""
            }
        ],
        "fields": [],
        "name": "popenmode",
        "type": "type",
        "view": "popenmode"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-print\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                234,
                                18
                            ],
                            "start": [
                                234,
                                15
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-print\"])",
                    "finish": [
                        234,
                        23
                    ],
                    "rawdesc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-print\"])",
                    "start": [
                        234,
                        0
                    ],
                    "type": "function",
                    "view": "function print(...any)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    234,
                    14
                ],
                "rawdesc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-print\"])",
                "start": [
                    234,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "print",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawequal\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                245,
                                20
                            ],
                            "name": "v1",
                            "start": [
                                245,
                                18
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                245,
                                24
                            ],
                            "name": "v2",
                            "start": [
                                245,
                                22
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawequal\"])",
                    "finish": [
                        245,
                        29
                    ],
                    "rawdesc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawequal\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        245,
                        0
                    ],
                    "type": "function",
                    "view": "function rawequal(v1: any, v2: any)\n  -> boolean"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    245,
                    17
                ],
                "rawdesc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawequal\"])",
                "start": [
                    245,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "rawequal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawget\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                256,
                                21
                            ],
                            "name": "table",
                            "start": [
                                256,
                                16
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                256,
                                28
                            ],
                            "name": "index",
                            "start": [
                                256,
                                23
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawget\"])",
                    "finish": [
                        256,
                        33
                    ],
                    "rawdesc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawget\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        256,
                        0
                    ],
                    "type": "function",
                    "view": "function rawget(table: table, index: any)\n  -> any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    256,
                    15
                ],
                "rawdesc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawget\"])",
                "start": [
                    256,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "rawget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawlen\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                266,
                                17
                            ],
                            "name": "v",
                            "start": [
                                266,
                                16
                            ],
                            "type": "local",
                            "view": "string|table"
                        }
                    ],
                    "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawlen\"])",
                    "finish": [
                        266,
                        22
                    ],
                    "rawdesc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawlen\"])",
                    "returns": [
                        {
                            "name": "len",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        266,
                        0
                    ],
                    "type": "function",
                    "view": "function rawlen(v: string|table)\n  -> len: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    266,
                    15
                ],
                "rawdesc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawlen\"])",
                "start": [
                    266,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "rawlen",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawset\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                279,
                                21
                            ],
                            "name": "table",
                            "start": [
                                279,
                                16
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                279,
                                28
                            ],
                            "name": "index",
                            "start": [
                                279,
                                23
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                279,
                                35
                            ],
                            "name": "value",
                            "start": [
                                279,
                                30
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawset\"])",
                    "finish": [
                        279,
                        40
                    ],
                    "rawdesc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawset\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        279,
                        0
                    ],
                    "type": "function",
                    "view": "function rawset(table: table, index: any, value: any)\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    279,
                    15
                ],
                "rawdesc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawset\"])",
                "start": [
                    279,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "rawset",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nreadmode:\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "finish": [
                    177,
                    8
                ],
                "rawdesc": "```lua\nreadmode:\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                "start": [
                    173,
                    10
                ],
                "type": "doc.alias",
                "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
            }
        ],
        "fields": [],
        "name": "readmode",
        "type": "type",
        "view": "readmode"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-require\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                10,
                                24
                            ],
                            "name": "modname",
                            "start": [
                                10,
                                17
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-require\"])",
                    "finish": [
                        10,
                        29
                    ],
                    "rawdesc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-require\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "name": "loaderdata",
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": [
                        10,
                        0
                    ],
                    "type": "function",
                    "view": "function require(modname: string)\n  -> unknown\n  2. loaderdata: unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": [
                    10,
                    16
                ],
                "rawdesc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-require\"])",
                "start": [
                    10,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "require",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nseekwhence:\n    | \"set\" -- Base is beginning of the file.\n   -> \"cur\" -- Base is current position.\n    | \"end\" -- Base is end of file.\n```",
                "finish": [
                    227,
                    10
                ],
                "rawdesc": "```lua\nseekwhence:\n    | \"set\" -- Base is beginning of the file.\n   -> \"cur\" -- Base is current position.\n    | \"end\" -- Base is end of file.\n```",
                "start": [
                    224,
                    10
                ],
                "type": "doc.alias",
                "view": "\"cur\"|\"end\"|\"set\""
            }
        ],
        "fields": [],
        "name": "seekwhence",
        "type": "type",
        "view": "seekwhence"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                290,
                                21
                            ],
                            "name": "index",
                            "start": [
                                290,
                                16
                            ],
                            "type": "local",
                            "view": "integer|\"#\""
                        },
                        {
                            "finish": [
                                290,
                                26
                            ],
                            "start": [
                                290,
                                23
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "finish": [
                        290,
                        31
                    ],
                    "rawdesc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        290,
                        0
                    ],
                    "type": "function",
                    "view": "function select(index: integer|\"#\", ...any)\n  -> any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    290,
                    15
                ],
                "rawdesc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
                "start": [
                    290,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "select",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setfenv\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                301,
                                18
                            ],
                            "name": "f",
                            "start": [
                                301,
                                17
                            ],
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                301,
                                25
                            ],
                            "name": "table",
                            "start": [
                                301,
                                20
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setfenv\"])",
                    "finish": [
                        301,
                        30
                    ],
                    "rawdesc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setfenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        }
                    ],
                    "start": [
                        301,
                        0
                    ],
                    "type": "function",
                    "view": "function setfenv(f: integer|fun(...any):...unknown, table: table)\n  -> function"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    301,
                    16
                ],
                "rawdesc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setfenv\"])",
                "start": [
                    301,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "setfenv",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/54/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setmetatable\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                347,
                                27
                            ],
                            "name": "table",
                            "start": [
                                347,
                                22
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                347,
                                38
                            ],
                            "name": "metatable",
                            "start": [
                                347,
                                29
                            ],
                            "type": "local",
                            "view": "(table|metatable)?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/54/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setmetatable\"])",
                    "finish": [
                        347,
                        43
                    ],
                    "rawdesc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/54/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setmetatable\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        347,
                        0
                    ],
                    "type": "function",
                    "view": "function setmetatable(table: table, metatable?: table|metatable)\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    347,
                    21
                ],
                "rawdesc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/54/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setmetatable\"])",
                "start": [
                    347,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "setmetatable",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                        "finish": [
                            12,
                            27
                        ],
                        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                        "start": [
                            12,
                            18
                        ],
                        "type": "doc.extends.name",
                        "view": "stringlib"
                    }
                ],
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    12,
                    27
                ],
                "start": [
                    12,
                    10
                ],
                "type": "doc.class",
                "view": "string",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                20,
                                22
                            ],
                            "name": "s",
                            "start": [
                                20,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                20,
                                25
                            ],
                            "name": "i",
                            "start": [
                                20,
                                24
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                20,
                                28
                            ],
                            "name": "j",
                            "start": [
                                20,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                    "finish": [
                        20,
                        33
                    ],
                    "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        20,
                        0
                    ],
                    "type": "function",
                    "view": "function string.byte(s: string|number, i?: integer, j?: integer)\n  -> ...integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    20,
                    20
                ],
                "name": "byte",
                "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                "start": [
                    20,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                31,
                                25
                            ],
                            "name": "byte",
                            "start": [
                                31,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                31,
                                30
                            ],
                            "start": [
                                31,
                                27
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                    "finish": [
                        31,
                        35
                    ],
                    "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        31,
                        0
                    ],
                    "type": "function",
                    "view": "function string.char(byte: integer, ...integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    31,
                    20
                ],
                "name": "char",
                "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                "start": [
                    31,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                42,
                                22
                            ],
                            "name": "f",
                            "start": [
                                42,
                                21
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                42,
                                29
                            ],
                            "name": "strip",
                            "start": [
                                42,
                                24
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                    "finish": [
                        42,
                        34
                    ],
                    "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        42,
                        0
                    ],
                    "type": "function",
                    "view": "function string.dump(f: fun(...any):...unknown, strip?: boolean)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    42,
                    20
                ],
                "name": "dump",
                "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                "start": [
                    42,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                57,
                                22
                            ],
                            "name": "s",
                            "start": [
                                57,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                57,
                                31
                            ],
                            "name": "pattern",
                            "start": [
                                57,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                57,
                                37
                            ],
                            "name": "init",
                            "start": [
                                57,
                                33
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                57,
                                44
                            ],
                            "name": "plain",
                            "start": [
                                57,
                                39
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                    "finish": [
                        57,
                        49
                    ],
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])",
                    "returns": [
                        {
                            "name": "start",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "name": "end",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "desc": "captured",
                            "name": "...",
                            "rawdesc": "captured",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function string.find(s: string|number, pattern: string|number, init?: integer, plain?: boolean)\n  -> start: integer|nil\n  2. end: integer|nil\n  3. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    57,
                    20
                ],
                "name": "find",
                "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])",
                "start": [
                    57,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                68,
                                24
                            ],
                            "name": "s",
                            "start": [
                                68,
                                23
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                68,
                                29
                            ],
                            "start": [
                                68,
                                26
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                    "finish": [
                        68,
                        34
                    ],
                    "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        68,
                        0
                    ],
                    "type": "function",
                    "view": "function string.format(s: string|number, ...any)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    68,
                    22
                ],
                "name": "format",
                "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                "start": [
                    68,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                89,
                                24
                            ],
                            "name": "s",
                            "start": [
                                89,
                                23
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                89,
                                33
                            ],
                            "name": "pattern",
                            "start": [
                                89,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                89,
                                39
                            ],
                            "name": "init",
                            "start": [
                                89,
                                35
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                    "finish": [
                        89,
                        44
                    ],
                    "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():string, ...unknown"
                        }
                    ],
                    "start": [
                        89,
                        0
                    ],
                    "type": "function",
                    "view": "function string.gmatch(s: string|number, pattern: string|number, init?: integer)\n  -> fun():string, ...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    89,
                    22
                ],
                "name": "gmatch",
                "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                "start": [
                    89,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                102,
                                22
                            ],
                            "name": "s",
                            "start": [
                                102,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                102,
                                31
                            ],
                            "name": "pattern",
                            "start": [
                                102,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                102,
                                37
                            ],
                            "name": "repl",
                            "start": [
                                102,
                                33
                            ],
                            "type": "local",
                            "view": "string|number|function|table"
                        },
                        {
                            "finish": [
                                102,
                                40
                            ],
                            "name": "n",
                            "start": [
                                102,
                                39
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                    "finish": [
                        102,
                        45
                    ],
                    "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        102,
                        0
                    ],
                    "type": "function",
                    "view": "function string.gsub(s: string|number, pattern: string|number, repl: string|number|function|table, n?: integer)\n  -> string\n  2. count: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    102,
                    20
                ],
                "name": "gsub",
                "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                "start": [
                    102,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                112,
                                21
                            ],
                            "name": "s",
                            "start": [
                                112,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                    "finish": [
                        112,
                        26
                    ],
                    "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        112,
                        0
                    ],
                    "type": "function",
                    "view": "function string.len(s: string|number)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    112,
                    19
                ],
                "name": "len",
                "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                "start": [
                    112,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                122,
                                23
                            ],
                            "name": "s",
                            "start": [
                                122,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                    "finish": [
                        122,
                        28
                    ],
                    "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        122,
                        0
                    ],
                    "type": "function",
                    "view": "function string.lower(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    122,
                    21
                ],
                "name": "lower",
                "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                "start": [
                    122,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                134,
                                23
                            ],
                            "name": "s",
                            "start": [
                                134,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                134,
                                32
                            ],
                            "name": "pattern",
                            "start": [
                                134,
                                25
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                134,
                                38
                            ],
                            "name": "init",
                            "start": [
                                134,
                                34
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                    "finish": [
                        134,
                        43
                    ],
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        134,
                        0
                    ],
                    "type": "function",
                    "view": "function string.match(s: string|number, pattern: string|number, init?: integer)\n  -> ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    134,
                    21
                ],
                "name": "match",
                "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                "start": [
                    134,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                148,
                                24
                            ],
                            "name": "fmt",
                            "start": [
                                148,
                                21
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                148,
                                28
                            ],
                            "name": "v1",
                            "start": [
                                148,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                148,
                                32
                            ],
                            "name": "v2",
                            "start": [
                                148,
                                30
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "finish": [
                                148,
                                37
                            ],
                            "start": [
                                148,
                                34
                            ],
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                    "finish": [
                        148,
                        42
                    ],
                    "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                    "returns": [
                        {
                            "name": "binary",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        148,
                        0
                    ],
                    "type": "function",
                    "view": "function string.pack(fmt: string, v1: string|number, v2?: string|number, ...string|number)\n  -> binary: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    148,
                    20
                ],
                "name": "pack",
                "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                "start": [
                    148,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                159,
                                28
                            ],
                            "name": "fmt",
                            "start": [
                                159,
                                25
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                    "finish": [
                        159,
                        33
                    ],
                    "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        159,
                        0
                    ],
                    "type": "function",
                    "view": "function string.packsize(fmt: string)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    159,
                    24
                ],
                "name": "packsize",
                "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                "start": [
                    159,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                171,
                                21
                            ],
                            "name": "s",
                            "start": [
                                171,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                171,
                                24
                            ],
                            "name": "n",
                            "start": [
                                171,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                171,
                                29
                            ],
                            "name": "sep",
                            "start": [
                                171,
                                26
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        }
                    ],
                    "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                    "finish": [
                        171,
                        34
                    ],
                    "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        171,
                        0
                    ],
                    "type": "function",
                    "view": "function string.rep(s: string|number, n: integer, sep?: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    171,
                    19
                ],
                "name": "rep",
                "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                "start": [
                    171,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                181,
                                25
                            ],
                            "name": "s",
                            "start": [
                                181,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                    "finish": [
                        181,
                        30
                    ],
                    "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        181,
                        0
                    ],
                    "type": "function",
                    "view": "function string.reverse(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    181,
                    23
                ],
                "name": "reverse",
                "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                "start": [
                    181,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                193,
                                21
                            ],
                            "name": "s",
                            "start": [
                                193,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                193,
                                24
                            ],
                            "name": "i",
                            "start": [
                                193,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                193,
                                27
                            ],
                            "name": "j",
                            "start": [
                                193,
                                26
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                    "finish": [
                        193,
                        32
                    ],
                    "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        193,
                        0
                    ],
                    "type": "function",
                    "view": "function string.sub(s: string|number, i: integer, j?: integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    193,
                    19
                ],
                "name": "sub",
                "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                "start": [
                    193,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                207,
                                26
                            ],
                            "name": "fmt",
                            "start": [
                                207,
                                23
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                207,
                                29
                            ],
                            "name": "s",
                            "start": [
                                207,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                207,
                                34
                            ],
                            "name": "pos",
                            "start": [
                                207,
                                31
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                    "finish": [
                        207,
                        39
                    ],
                    "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "offset",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        207,
                        0
                    ],
                    "type": "function",
                    "view": "function string.unpack(fmt: string, s: string, pos?: integer)\n  -> ...any\n  2. offset: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    207,
                    22
                ],
                "name": "unpack",
                "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                "start": [
                    207,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                217,
                                23
                            ],
                            "name": "s",
                            "start": [
                                217,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                    "finish": [
                        217,
                        28
                    ],
                    "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        217,
                        0
                    ],
                    "type": "function",
                    "view": "function string.upper(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    217,
                    21
                ],
                "name": "upper",
                "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                "start": [
                    217,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string",
        "type": "type",
        "view": "string"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                    "finish": [
                        8,
                        11
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                    "start": [
                        8,
                        9
                    ],
                    "type": "table",
                    "view": "stringlib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    8,
                    6
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                "start": [
                    8,
                    0
                ],
                "type": "setglobal",
                "view": "stringlib",
                "visible": "public"
            }
        ],
        "name": "string",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                20,
                                22
                            ],
                            "name": "s",
                            "start": [
                                20,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                20,
                                25
                            ],
                            "name": "i",
                            "start": [
                                20,
                                24
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                20,
                                28
                            ],
                            "name": "j",
                            "start": [
                                20,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                    "finish": [
                        20,
                        33
                    ],
                    "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        20,
                        0
                    ],
                    "type": "function",
                    "view": "function string.byte(s: string|number, i?: integer, j?: integer)\n  -> ...integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    20,
                    20
                ],
                "name": "byte",
                "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                "start": [
                    20,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.byte",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                31,
                                25
                            ],
                            "name": "byte",
                            "start": [
                                31,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                31,
                                30
                            ],
                            "start": [
                                31,
                                27
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                    "finish": [
                        31,
                        35
                    ],
                    "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        31,
                        0
                    ],
                    "type": "function",
                    "view": "function string.char(byte: integer, ...integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    31,
                    20
                ],
                "name": "char",
                "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                "start": [
                    31,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.char",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                42,
                                22
                            ],
                            "name": "f",
                            "start": [
                                42,
                                21
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                42,
                                29
                            ],
                            "name": "strip",
                            "start": [
                                42,
                                24
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                    "finish": [
                        42,
                        34
                    ],
                    "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        42,
                        0
                    ],
                    "type": "function",
                    "view": "function string.dump(f: fun(...any):...unknown, strip?: boolean)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    42,
                    20
                ],
                "name": "dump",
                "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                "start": [
                    42,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.dump",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                57,
                                22
                            ],
                            "name": "s",
                            "start": [
                                57,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                57,
                                31
                            ],
                            "name": "pattern",
                            "start": [
                                57,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                57,
                                37
                            ],
                            "name": "init",
                            "start": [
                                57,
                                33
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                57,
                                44
                            ],
                            "name": "plain",
                            "start": [
                                57,
                                39
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                    "finish": [
                        57,
                        49
                    ],
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])",
                    "returns": [
                        {
                            "name": "start",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "name": "end",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "desc": "captured",
                            "name": "...",
                            "rawdesc": "captured",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function string.find(s: string|number, pattern: string|number, init?: integer, plain?: boolean)\n  -> start: integer|nil\n  2. end: integer|nil\n  3. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    57,
                    20
                ],
                "name": "find",
                "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])",
                "start": [
                    57,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.find",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                68,
                                24
                            ],
                            "name": "s",
                            "start": [
                                68,
                                23
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                68,
                                29
                            ],
                            "start": [
                                68,
                                26
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                    "finish": [
                        68,
                        34
                    ],
                    "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        68,
                        0
                    ],
                    "type": "function",
                    "view": "function string.format(s: string|number, ...any)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    68,
                    22
                ],
                "name": "format",
                "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                "start": [
                    68,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.format",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                89,
                                24
                            ],
                            "name": "s",
                            "start": [
                                89,
                                23
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                89,
                                33
                            ],
                            "name": "pattern",
                            "start": [
                                89,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                89,
                                39
                            ],
                            "name": "init",
                            "start": [
                                89,
                                35
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                    "finish": [
                        89,
                        44
                    ],
                    "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():string, ...unknown"
                        }
                    ],
                    "start": [
                        89,
                        0
                    ],
                    "type": "function",
                    "view": "function string.gmatch(s: string|number, pattern: string|number, init?: integer)\n  -> fun():string, ...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    89,
                    22
                ],
                "name": "gmatch",
                "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                "start": [
                    89,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.gmatch",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                102,
                                22
                            ],
                            "name": "s",
                            "start": [
                                102,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                102,
                                31
                            ],
                            "name": "pattern",
                            "start": [
                                102,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                102,
                                37
                            ],
                            "name": "repl",
                            "start": [
                                102,
                                33
                            ],
                            "type": "local",
                            "view": "string|number|function|table"
                        },
                        {
                            "finish": [
                                102,
                                40
                            ],
                            "name": "n",
                            "start": [
                                102,
                                39
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                    "finish": [
                        102,
                        45
                    ],
                    "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        102,
                        0
                    ],
                    "type": "function",
                    "view": "function string.gsub(s: string|number, pattern: string|number, repl: string|number|function|table, n?: integer)\n  -> string\n  2. count: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    102,
                    20
                ],
                "name": "gsub",
                "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                "start": [
                    102,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.gsub",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                112,
                                21
                            ],
                            "name": "s",
                            "start": [
                                112,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                    "finish": [
                        112,
                        26
                    ],
                    "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        112,
                        0
                    ],
                    "type": "function",
                    "view": "function string.len(s: string|number)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    112,
                    19
                ],
                "name": "len",
                "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                "start": [
                    112,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.len",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                122,
                                23
                            ],
                            "name": "s",
                            "start": [
                                122,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                    "finish": [
                        122,
                        28
                    ],
                    "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        122,
                        0
                    ],
                    "type": "function",
                    "view": "function string.lower(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    122,
                    21
                ],
                "name": "lower",
                "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                "start": [
                    122,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.lower",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                134,
                                23
                            ],
                            "name": "s",
                            "start": [
                                134,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                134,
                                32
                            ],
                            "name": "pattern",
                            "start": [
                                134,
                                25
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                134,
                                38
                            ],
                            "name": "init",
                            "start": [
                                134,
                                34
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                    "finish": [
                        134,
                        43
                    ],
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        134,
                        0
                    ],
                    "type": "function",
                    "view": "function string.match(s: string|number, pattern: string|number, init?: integer)\n  -> ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    134,
                    21
                ],
                "name": "match",
                "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                "start": [
                    134,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.match",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                148,
                                24
                            ],
                            "name": "fmt",
                            "start": [
                                148,
                                21
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                148,
                                28
                            ],
                            "name": "v1",
                            "start": [
                                148,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                148,
                                32
                            ],
                            "name": "v2",
                            "start": [
                                148,
                                30
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "finish": [
                                148,
                                37
                            ],
                            "start": [
                                148,
                                34
                            ],
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                    "finish": [
                        148,
                        42
                    ],
                    "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                    "returns": [
                        {
                            "name": "binary",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        148,
                        0
                    ],
                    "type": "function",
                    "view": "function string.pack(fmt: string, v1: string|number, v2?: string|number, ...string|number)\n  -> binary: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    148,
                    20
                ],
                "name": "pack",
                "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                "start": [
                    148,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.pack",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                159,
                                28
                            ],
                            "name": "fmt",
                            "start": [
                                159,
                                25
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                    "finish": [
                        159,
                        33
                    ],
                    "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        159,
                        0
                    ],
                    "type": "function",
                    "view": "function string.packsize(fmt: string)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    159,
                    24
                ],
                "name": "packsize",
                "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                "start": [
                    159,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.packsize",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                171,
                                21
                            ],
                            "name": "s",
                            "start": [
                                171,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                171,
                                24
                            ],
                            "name": "n",
                            "start": [
                                171,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                171,
                                29
                            ],
                            "name": "sep",
                            "start": [
                                171,
                                26
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        }
                    ],
                    "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                    "finish": [
                        171,
                        34
                    ],
                    "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        171,
                        0
                    ],
                    "type": "function",
                    "view": "function string.rep(s: string|number, n: integer, sep?: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    171,
                    19
                ],
                "name": "rep",
                "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                "start": [
                    171,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.rep",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                181,
                                25
                            ],
                            "name": "s",
                            "start": [
                                181,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                    "finish": [
                        181,
                        30
                    ],
                    "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        181,
                        0
                    ],
                    "type": "function",
                    "view": "function string.reverse(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    181,
                    23
                ],
                "name": "reverse",
                "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                "start": [
                    181,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.reverse",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                193,
                                21
                            ],
                            "name": "s",
                            "start": [
                                193,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                193,
                                24
                            ],
                            "name": "i",
                            "start": [
                                193,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                193,
                                27
                            ],
                            "name": "j",
                            "start": [
                                193,
                                26
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                    "finish": [
                        193,
                        32
                    ],
                    "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        193,
                        0
                    ],
                    "type": "function",
                    "view": "function string.sub(s: string|number, i: integer, j?: integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    193,
                    19
                ],
                "name": "sub",
                "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                "start": [
                    193,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.sub",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                207,
                                26
                            ],
                            "name": "fmt",
                            "start": [
                                207,
                                23
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                207,
                                29
                            ],
                            "name": "s",
                            "start": [
                                207,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                207,
                                34
                            ],
                            "name": "pos",
                            "start": [
                                207,
                                31
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                    "finish": [
                        207,
                        39
                    ],
                    "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "offset",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        207,
                        0
                    ],
                    "type": "function",
                    "view": "function string.unpack(fmt: string, s: string, pos?: integer)\n  -> ...any\n  2. offset: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    207,
                    22
                ],
                "name": "unpack",
                "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                "start": [
                    207,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.unpack",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                217,
                                23
                            ],
                            "name": "s",
                            "start": [
                                217,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                    "finish": [
                        217,
                        28
                    ],
                    "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        217,
                        0
                    ],
                    "type": "function",
                    "view": "function string.upper(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    217,
                    21
                ],
                "name": "upper",
                "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                "start": [
                    217,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "string.upper",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    7,
                    19
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "stringlib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                20,
                                22
                            ],
                            "name": "s",
                            "start": [
                                20,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                20,
                                25
                            ],
                            "name": "i",
                            "start": [
                                20,
                                24
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                20,
                                28
                            ],
                            "name": "j",
                            "start": [
                                20,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                    "finish": [
                        20,
                        33
                    ],
                    "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        20,
                        0
                    ],
                    "type": "function",
                    "view": "function string.byte(s: string|number, i?: integer, j?: integer)\n  -> ...integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    20,
                    20
                ],
                "name": "byte",
                "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                "start": [
                    20,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                31,
                                25
                            ],
                            "name": "byte",
                            "start": [
                                31,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                31,
                                30
                            ],
                            "start": [
                                31,
                                27
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                    "finish": [
                        31,
                        35
                    ],
                    "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        31,
                        0
                    ],
                    "type": "function",
                    "view": "function string.char(byte: integer, ...integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    31,
                    20
                ],
                "name": "char",
                "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                "start": [
                    31,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                42,
                                22
                            ],
                            "name": "f",
                            "start": [
                                42,
                                21
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                42,
                                29
                            ],
                            "name": "strip",
                            "start": [
                                42,
                                24
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                    "finish": [
                        42,
                        34
                    ],
                    "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        42,
                        0
                    ],
                    "type": "function",
                    "view": "function string.dump(f: fun(...any):...unknown, strip?: boolean)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    42,
                    20
                ],
                "name": "dump",
                "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                "start": [
                    42,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                57,
                                22
                            ],
                            "name": "s",
                            "start": [
                                57,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                57,
                                31
                            ],
                            "name": "pattern",
                            "start": [
                                57,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                57,
                                37
                            ],
                            "name": "init",
                            "start": [
                                57,
                                33
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                57,
                                44
                            ],
                            "name": "plain",
                            "start": [
                                57,
                                39
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                    "finish": [
                        57,
                        49
                    ],
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])",
                    "returns": [
                        {
                            "name": "start",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "name": "end",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "desc": "captured",
                            "name": "...",
                            "rawdesc": "captured",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function string.find(s: string|number, pattern: string|number, init?: integer, plain?: boolean)\n  -> start: integer|nil\n  2. end: integer|nil\n  3. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    57,
                    20
                ],
                "name": "find",
                "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])",
                "start": [
                    57,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                68,
                                24
                            ],
                            "name": "s",
                            "start": [
                                68,
                                23
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                68,
                                29
                            ],
                            "start": [
                                68,
                                26
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                    "finish": [
                        68,
                        34
                    ],
                    "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        68,
                        0
                    ],
                    "type": "function",
                    "view": "function string.format(s: string|number, ...any)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    68,
                    22
                ],
                "name": "format",
                "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                "start": [
                    68,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                89,
                                24
                            ],
                            "name": "s",
                            "start": [
                                89,
                                23
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                89,
                                33
                            ],
                            "name": "pattern",
                            "start": [
                                89,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                89,
                                39
                            ],
                            "name": "init",
                            "start": [
                                89,
                                35
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                    "finish": [
                        89,
                        44
                    ],
                    "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():string, ...unknown"
                        }
                    ],
                    "start": [
                        89,
                        0
                    ],
                    "type": "function",
                    "view": "function string.gmatch(s: string|number, pattern: string|number, init?: integer)\n  -> fun():string, ...unknown"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    89,
                    22
                ],
                "name": "gmatch",
                "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                "start": [
                    89,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                102,
                                22
                            ],
                            "name": "s",
                            "start": [
                                102,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                102,
                                31
                            ],
                            "name": "pattern",
                            "start": [
                                102,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                102,
                                37
                            ],
                            "name": "repl",
                            "start": [
                                102,
                                33
                            ],
                            "type": "local",
                            "view": "string|number|function|table"
                        },
                        {
                            "finish": [
                                102,
                                40
                            ],
                            "name": "n",
                            "start": [
                                102,
                                39
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                    "finish": [
                        102,
                        45
                    ],
                    "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        102,
                        0
                    ],
                    "type": "function",
                    "view": "function string.gsub(s: string|number, pattern: string|number, repl: string|number|function|table, n?: integer)\n  -> string\n  2. count: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    102,
                    20
                ],
                "name": "gsub",
                "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                "start": [
                    102,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                112,
                                21
                            ],
                            "name": "s",
                            "start": [
                                112,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                    "finish": [
                        112,
                        26
                    ],
                    "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        112,
                        0
                    ],
                    "type": "function",
                    "view": "function string.len(s: string|number)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    112,
                    19
                ],
                "name": "len",
                "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                "start": [
                    112,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                122,
                                23
                            ],
                            "name": "s",
                            "start": [
                                122,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                    "finish": [
                        122,
                        28
                    ],
                    "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        122,
                        0
                    ],
                    "type": "function",
                    "view": "function string.lower(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    122,
                    21
                ],
                "name": "lower",
                "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                "start": [
                    122,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                134,
                                23
                            ],
                            "name": "s",
                            "start": [
                                134,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                134,
                                32
                            ],
                            "name": "pattern",
                            "start": [
                                134,
                                25
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                134,
                                38
                            ],
                            "name": "init",
                            "start": [
                                134,
                                34
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                    "finish": [
                        134,
                        43
                    ],
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        134,
                        0
                    ],
                    "type": "function",
                    "view": "function string.match(s: string|number, pattern: string|number, init?: integer)\n  -> ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    134,
                    21
                ],
                "name": "match",
                "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                "start": [
                    134,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                148,
                                24
                            ],
                            "name": "fmt",
                            "start": [
                                148,
                                21
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                148,
                                28
                            ],
                            "name": "v1",
                            "start": [
                                148,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                148,
                                32
                            ],
                            "name": "v2",
                            "start": [
                                148,
                                30
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "finish": [
                                148,
                                37
                            ],
                            "start": [
                                148,
                                34
                            ],
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                    "finish": [
                        148,
                        42
                    ],
                    "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                    "returns": [
                        {
                            "name": "binary",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        148,
                        0
                    ],
                    "type": "function",
                    "view": "function string.pack(fmt: string, v1: string|number, v2?: string|number, ...string|number)\n  -> binary: string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    148,
                    20
                ],
                "name": "pack",
                "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                "start": [
                    148,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                159,
                                28
                            ],
                            "name": "fmt",
                            "start": [
                                159,
                                25
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                    "finish": [
                        159,
                        33
                    ],
                    "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        159,
                        0
                    ],
                    "type": "function",
                    "view": "function string.packsize(fmt: string)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    159,
                    24
                ],
                "name": "packsize",
                "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                "start": [
                    159,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                171,
                                21
                            ],
                            "name": "s",
                            "start": [
                                171,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                171,
                                24
                            ],
                            "name": "n",
                            "start": [
                                171,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                171,
                                29
                            ],
                            "name": "sep",
                            "start": [
                                171,
                                26
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        }
                    ],
                    "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                    "finish": [
                        171,
                        34
                    ],
                    "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        171,
                        0
                    ],
                    "type": "function",
                    "view": "function string.rep(s: string|number, n: integer, sep?: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    171,
                    19
                ],
                "name": "rep",
                "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                "start": [
                    171,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                181,
                                25
                            ],
                            "name": "s",
                            "start": [
                                181,
                                24
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                    "finish": [
                        181,
                        30
                    ],
                    "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        181,
                        0
                    ],
                    "type": "function",
                    "view": "function string.reverse(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    181,
                    23
                ],
                "name": "reverse",
                "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                "start": [
                    181,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                193,
                                21
                            ],
                            "name": "s",
                            "start": [
                                193,
                                20
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                193,
                                24
                            ],
                            "name": "i",
                            "start": [
                                193,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                193,
                                27
                            ],
                            "name": "j",
                            "start": [
                                193,
                                26
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                    "finish": [
                        193,
                        32
                    ],
                    "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        193,
                        0
                    ],
                    "type": "function",
                    "view": "function string.sub(s: string|number, i: integer, j?: integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    193,
                    19
                ],
                "name": "sub",
                "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                "start": [
                    193,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                207,
                                26
                            ],
                            "name": "fmt",
                            "start": [
                                207,
                                23
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                207,
                                29
                            ],
                            "name": "s",
                            "start": [
                                207,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                207,
                                34
                            ],
                            "name": "pos",
                            "start": [
                                207,
                                31
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                    "finish": [
                        207,
                        39
                    ],
                    "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "offset",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        207,
                        0
                    ],
                    "type": "function",
                    "view": "function string.unpack(fmt: string, s: string, pos?: integer)\n  -> ...any\n  2. offset: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    207,
                    22
                ],
                "name": "unpack",
                "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                "start": [
                    207,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                217,
                                23
                            ],
                            "name": "s",
                            "start": [
                                217,
                                22
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                    "finish": [
                        217,
                        28
                    ],
                    "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        217,
                        0
                    ],
                    "type": "function",
                    "view": "function string.upper(s: string|number)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": [
                    217,
                    21
                ],
                "name": "upper",
                "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                "start": [
                    217,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "stringlib",
        "type": "type",
        "view": "stringlib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "fields": [
                            {
                                "finish": [
                                    11,
                                    31
                                ],
                                "name": {
                                    "finish": [
                                        11,
                                        27
                                    ],
                                    "start": [
                                        11,
                                        26
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                11,
                                                27
                                            ],
                                            "start": [
                                                11,
                                                26
                                            ],
                                            "type": "doc.generic.name",
                                            "view": "<K>"
                                        }
                                    ],
                                    "view": "<K>"
                                },
                                "start": [
                                    11,
                                    26
                                ],
                                "type": "doc.type.field",
                                "view": "<V>"
                            }
                        ],
                        "finish": [
                            11,
                            33
                        ],
                        "start": [
                            11,
                            23
                        ],
                        "type": "doc.type.table",
                        "view": "{ [<K>]: <V> }"
                    }
                ],
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    11,
                    33
                ],
                "start": [
                    11,
                    10
                ],
                "type": "doc.class",
                "view": "table",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "table",
        "type": "type",
        "view": "table"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table\"])\n",
                    "finish": [
                        8,
                        10
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table\"])\n",
                    "start": [
                        8,
                        8
                    ],
                    "type": "table",
                    "view": "tablelib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    8,
                    5
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table\"])\n",
                "start": [
                    8,
                    0
                ],
                "type": "setglobal",
                "view": "tablelib",
                "visible": "public"
            }
        ],
        "name": "table",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                21,
                                26
                            ],
                            "name": "list",
                            "start": [
                                21,
                                22
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                21,
                                31
                            ],
                            "name": "sep",
                            "start": [
                                21,
                                28
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                21,
                                34
                            ],
                            "name": "i",
                            "start": [
                                21,
                                33
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                21,
                                37
                            ],
                            "name": "j",
                            "start": [
                                21,
                                36
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                    "finish": [
                        21,
                        42
                    ],
                    "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function table.concat(list: table, sep?: string, i?: integer, j?: integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    21,
                    21
                ],
                "name": "concat",
                "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                "start": [
                    21,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.concat",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                136,
                                27
                            ],
                            "name": "list",
                            "start": [
                                136,
                                23
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                136,
                                37
                            ],
                            "name": "callback",
                            "start": [
                                136,
                                29
                            ],
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                    "finish": [
                        136,
                        42
                    ],
                    "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": [
                        136,
                        0
                    ],
                    "type": "function",
                    "view": "function table.foreach(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    136,
                    22
                ],
                "name": "foreach",
                "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                "start": [
                    136,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.foreach",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                149,
                                28
                            ],
                            "name": "list",
                            "start": [
                                149,
                                24
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                149,
                                38
                            ],
                            "name": "callback",
                            "start": [
                                149,
                                30
                            ],
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                    "finish": [
                        149,
                        43
                    ],
                    "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": [
                        149,
                        0
                    ],
                    "type": "function",
                    "view": "function table.foreachi(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    149,
                    23
                ],
                "name": "foreachi",
                "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                "start": [
                    149,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.foreachi",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                162,
                                24
                            ],
                            "name": "list",
                            "start": [
                                162,
                                20
                            ],
                            "type": "local",
                            "view": "<T>[]"
                        }
                    ],
                    "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                    "finish": [
                        162,
                        29
                    ],
                    "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        162,
                        0
                    ],
                    "type": "function",
                    "view": "function table.getn(list: <T>[])\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    162,
                    19
                ],
                "name": "getn",
                "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                "start": [
                    162,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.getn",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                32,
                                26
                            ],
                            "name": "list",
                            "start": [
                                32,
                                22
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                32,
                                31
                            ],
                            "name": "pos",
                            "start": [
                                32,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                32,
                                38
                            ],
                            "name": "value",
                            "start": [
                                32,
                                33
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                    "finish": [
                        32,
                        43
                    ],
                    "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                    "start": [
                        32,
                        0
                    ],
                    "type": "function",
                    "view": "function table.insert(list: table, pos: integer, value: any)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    32,
                    21
                ],
                "name": "insert",
                "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                "start": [
                    32,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.insert",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                25
                            ],
                            "name": "table",
                            "start": [
                                43,
                                20
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                    "finish": [
                        43,
                        30
                    ],
                    "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function table.maxn(table: table)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    43,
                    19
                ],
                "name": "maxn",
                "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.maxn",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                63,
                                22
                            ],
                            "name": "a1",
                            "start": [
                                63,
                                20
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                63,
                                25
                            ],
                            "name": "f",
                            "start": [
                                63,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                63,
                                28
                            ],
                            "name": "e",
                            "start": [
                                63,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                63,
                                31
                            ],
                            "name": "t",
                            "start": [
                                63,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                63,
                                35
                            ],
                            "name": "a2",
                            "start": [
                                63,
                                33
                            ],
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                    "finish": [
                        63,
                        40
                    ],
                    "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                    "returns": [
                        {
                            "name": "a2",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        63,
                        0
                    ],
                    "type": "function",
                    "view": "function table.move(a1: table, f: integer, e: integer, t: integer, a2?: table)\n  -> a2: table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    63,
                    19
                ],
                "name": "move",
                "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                "start": [
                    63,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.move",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                73,
                                23
                            ],
                            "start": [
                                73,
                                20
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                    "finish": [
                        73,
                        28
                    ],
                    "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        73,
                        0
                    ],
                    "type": "function",
                    "view": "function table.pack(...any)\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    73,
                    19
                ],
                "name": "pack",
                "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                "start": [
                    73,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.pack",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                83,
                                26
                            ],
                            "name": "list",
                            "start": [
                                83,
                                22
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                83,
                                31
                            ],
                            "name": "pos",
                            "start": [
                                83,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                    "finish": [
                        83,
                        36
                    ],
                    "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        83,
                        0
                    ],
                    "type": "function",
                    "view": "function table.remove(list: table, pos?: integer)\n  -> any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    83,
                    21
                ],
                "name": "remove",
                "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                "start": [
                    83,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.remove",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                93,
                                24
                            ],
                            "name": "list",
                            "start": [
                                93,
                                20
                            ],
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": [
                                93,
                                30
                            ],
                            "name": "comp",
                            "start": [
                                93,
                                26
                            ],
                            "type": "local",
                            "view": "(fun(a: <T>, b: <T>):boolean)?"
                        }
                    ],
                    "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                    "finish": [
                        93,
                        35
                    ],
                    "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                    "start": [
                        93,
                        0
                    ],
                    "type": "function",
                    "view": "function table.sort(list: <T>[], comp?: fun(a: <T>, b: <T>):boolean)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    93,
                    19
                ],
                "name": "sort",
                "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                "start": [
                    93,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.sort",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                123,
                                26
                            ],
                            "name": "list",
                            "start": [
                                123,
                                22
                            ],
                            "type": "local",
                            "view": "{ [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9>, [10]: <T10> }"
                        },
                        {
                            "finish": [
                                123,
                                29
                            ],
                            "name": "i",
                            "start": [
                                123,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                123,
                                32
                            ],
                            "name": "j",
                            "start": [
                                123,
                                31
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                    "finish": [
                        123,
                        37
                    ],
                    "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T1>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T2>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T3>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T4>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T5>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T6>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T7>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T8>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T9>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T10>"
                        }
                    ],
                    "start": [
                        123,
                        0
                    ],
                    "type": "function",
                    "view": "function table.unpack(list: { [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9>, [10]: <T10> }, i?: integer, j?: integer)\n  -> <T1>\n  2. <T2>\n  3. <T3>\n  4. <T4>\n  5. <T5>\n  6. <T6>\n  7. <T7>\n  8. <T8>\n  9. <T9>\n 10. <T10>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    123,
                    21
                ],
                "name": "unpack",
                "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                "start": [
                    123,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.unpack",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    7,
                    18
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table\"])\n",
                "start": [
                    7,
                    10
                ],
                "type": "doc.class",
                "view": "tablelib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                21,
                                26
                            ],
                            "name": "list",
                            "start": [
                                21,
                                22
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                21,
                                31
                            ],
                            "name": "sep",
                            "start": [
                                21,
                                28
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                21,
                                34
                            ],
                            "name": "i",
                            "start": [
                                21,
                                33
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                21,
                                37
                            ],
                            "name": "j",
                            "start": [
                                21,
                                36
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                    "finish": [
                        21,
                        42
                    ],
                    "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function table.concat(list: table, sep?: string, i?: integer, j?: integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    21,
                    21
                ],
                "name": "concat",
                "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                "start": [
                    21,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                136,
                                27
                            ],
                            "name": "list",
                            "start": [
                                136,
                                23
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                136,
                                37
                            ],
                            "name": "callback",
                            "start": [
                                136,
                                29
                            ],
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                    "finish": [
                        136,
                        42
                    ],
                    "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": [
                        136,
                        0
                    ],
                    "type": "function",
                    "view": "function table.foreach(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    136,
                    22
                ],
                "name": "foreach",
                "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                "start": [
                    136,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                149,
                                28
                            ],
                            "name": "list",
                            "start": [
                                149,
                                24
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                149,
                                38
                            ],
                            "name": "callback",
                            "start": [
                                149,
                                30
                            ],
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                    "finish": [
                        149,
                        43
                    ],
                    "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": [
                        149,
                        0
                    ],
                    "type": "function",
                    "view": "function table.foreachi(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    149,
                    23
                ],
                "name": "foreachi",
                "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                "start": [
                    149,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                162,
                                24
                            ],
                            "name": "list",
                            "start": [
                                162,
                                20
                            ],
                            "type": "local",
                            "view": "<T>[]"
                        }
                    ],
                    "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                    "finish": [
                        162,
                        29
                    ],
                    "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        162,
                        0
                    ],
                    "type": "function",
                    "view": "function table.getn(list: <T>[])\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    162,
                    19
                ],
                "name": "getn",
                "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                "start": [
                    162,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                32,
                                26
                            ],
                            "name": "list",
                            "start": [
                                32,
                                22
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                32,
                                31
                            ],
                            "name": "pos",
                            "start": [
                                32,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                32,
                                38
                            ],
                            "name": "value",
                            "start": [
                                32,
                                33
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                    "finish": [
                        32,
                        43
                    ],
                    "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                    "start": [
                        32,
                        0
                    ],
                    "type": "function",
                    "view": "function table.insert(list: table, pos: integer, value: any)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    32,
                    21
                ],
                "name": "insert",
                "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                "start": [
                    32,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                25
                            ],
                            "name": "table",
                            "start": [
                                43,
                                20
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                    "finish": [
                        43,
                        30
                    ],
                    "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function table.maxn(table: table)\n  -> integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    43,
                    19
                ],
                "name": "maxn",
                "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                63,
                                22
                            ],
                            "name": "a1",
                            "start": [
                                63,
                                20
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                63,
                                25
                            ],
                            "name": "f",
                            "start": [
                                63,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                63,
                                28
                            ],
                            "name": "e",
                            "start": [
                                63,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                63,
                                31
                            ],
                            "name": "t",
                            "start": [
                                63,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                63,
                                35
                            ],
                            "name": "a2",
                            "start": [
                                63,
                                33
                            ],
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                    "finish": [
                        63,
                        40
                    ],
                    "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                    "returns": [
                        {
                            "name": "a2",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        63,
                        0
                    ],
                    "type": "function",
                    "view": "function table.move(a1: table, f: integer, e: integer, t: integer, a2?: table)\n  -> a2: table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    63,
                    19
                ],
                "name": "move",
                "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                "start": [
                    63,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                73,
                                23
                            ],
                            "start": [
                                73,
                                20
                            ],
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                    "finish": [
                        73,
                        28
                    ],
                    "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        73,
                        0
                    ],
                    "type": "function",
                    "view": "function table.pack(...any)\n  -> table"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    73,
                    19
                ],
                "name": "pack",
                "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                "start": [
                    73,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                83,
                                26
                            ],
                            "name": "list",
                            "start": [
                                83,
                                22
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                83,
                                31
                            ],
                            "name": "pos",
                            "start": [
                                83,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                    "finish": [
                        83,
                        36
                    ],
                    "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        83,
                        0
                    ],
                    "type": "function",
                    "view": "function table.remove(list: table, pos?: integer)\n  -> any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    83,
                    21
                ],
                "name": "remove",
                "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                "start": [
                    83,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                93,
                                24
                            ],
                            "name": "list",
                            "start": [
                                93,
                                20
                            ],
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": [
                                93,
                                30
                            ],
                            "name": "comp",
                            "start": [
                                93,
                                26
                            ],
                            "type": "local",
                            "view": "(fun(a: <T>, b: <T>):boolean)?"
                        }
                    ],
                    "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                    "finish": [
                        93,
                        35
                    ],
                    "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                    "start": [
                        93,
                        0
                    ],
                    "type": "function",
                    "view": "function table.sort(list: <T>[], comp?: fun(a: <T>, b: <T>):boolean)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    93,
                    19
                ],
                "name": "sort",
                "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                "start": [
                    93,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                123,
                                26
                            ],
                            "name": "list",
                            "start": [
                                123,
                                22
                            ],
                            "type": "local",
                            "view": "{ [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9>, [10]: <T10> }"
                        },
                        {
                            "finish": [
                                123,
                                29
                            ],
                            "name": "i",
                            "start": [
                                123,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                123,
                                32
                            ],
                            "name": "j",
                            "start": [
                                123,
                                31
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                    "finish": [
                        123,
                        37
                    ],
                    "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T1>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T2>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T3>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T4>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T5>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T6>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T7>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T8>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T9>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T10>"
                        }
                    ],
                    "start": [
                        123,
                        0
                    ],
                    "type": "function",
                    "view": "function table.unpack(list: { [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9>, [10]: <T10> }, i?: integer, j?: integer)\n  -> <T1>\n  2. <T2>\n  3. <T3>\n  4. <T4>\n  5. <T5>\n  6. <T6>\n  7. <T7>\n  8. <T8>\n  9. <T9>\n 10. <T10>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": [
                    123,
                    21
                ],
                "name": "unpack",
                "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                "start": [
                    123,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "tablelib",
        "type": "type",
        "view": "tablelib"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    10,
                    16
                ],
                "start": [
                    10,
                    10
                ],
                "type": "doc.class",
                "view": "thread",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "thread",
        "type": "type",
        "view": "thread"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/54/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tonumber\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                361,
                                19
                            ],
                            "name": "e",
                            "start": [
                                361,
                                18
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/54/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tonumber\"])",
                    "finish": [
                        361,
                        24
                    ],
                    "rawdesc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/54/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tonumber\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        361,
                        0
                    ],
                    "type": "function",
                    "view": "function tonumber(e: any)\n  -> number?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    361,
                    17
                ],
                "rawdesc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/54/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tonumber\"])",
                "start": [
                    361,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "tonumber",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                376,
                                19
                            ],
                            "name": "v",
                            "start": [
                                376,
                                18
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"])",
                    "finish": [
                        376,
                        24
                    ],
                    "rawdesc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        376,
                        0
                    ],
                    "type": "function",
                    "view": "function tostring(v: any)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    376,
                    17
                ],
                "rawdesc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"])",
                "start": [
                    376,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "tostring",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            6,
                            23
                        ],
                        "start": [
                            6,
                            16
                        ],
                        "type": "doc.extends.name",
                        "view": "boolean"
                    }
                ],
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    6,
                    23
                ],
                "start": [
                    6,
                    10
                ],
                "type": "doc.class",
                "view": "true",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "true",
        "type": "type",
        "view": "true"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                397,
                                15
                            ],
                            "name": "v",
                            "start": [
                                397,
                                14
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "finish": [
                        397,
                        20
                    ],
                    "rawdesc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "returns": [
                        {
                            "name": "type",
                            "type": "function.return",
                            "view": "\"boolean\"|\"function\"|\"nil\"|\"number\"|\"string\"...(+3)"
                        }
                    ],
                    "start": [
                        397,
                        0
                    ],
                    "type": "function",
                    "view": "function type(v: any)\n  -> type: \"boolean\"|\"function\"|\"nil\"|\"number\"|\"string\"...(+3)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    397,
                    13
                ],
                "rawdesc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                "start": [
                    397,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "type",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                "finish": [
                    386,
                    15
                ],
                "rawdesc": "```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                "start": [
                    378,
                    10
                ],
                "type": "doc.alias",
                "view": "\"boolean\"|\"function\"|\"nil\"|\"number\"|\"string\"...(+3)"
            }
        ],
        "fields": [],
        "name": "type",
        "type": "type",
        "view": "type"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    2,
                    17
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "unknown",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "unknown",
        "type": "type",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-unpack\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                457,
                                20
                            ],
                            "name": "list",
                            "start": [
                                457,
                                16
                            ],
                            "type": "local",
                            "view": "{ [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9>, [10]: <T10> }"
                        },
                        {
                            "finish": [
                                457,
                                23
                            ],
                            "name": "i",
                            "start": [
                                457,
                                22
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                457,
                                26
                            ],
                            "name": "j",
                            "start": [
                                457,
                                25
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-unpack\"])",
                    "finish": [
                        457,
                        31
                    ],
                    "rawdesc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-unpack\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T1>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T2>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T3>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T4>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T5>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T6>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T7>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T8>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T9>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T10>"
                        }
                    ],
                    "start": [
                        457,
                        0
                    ],
                    "type": "function",
                    "view": "function unpack(list: { [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9>, [10]: <T10> }, i?: integer, j?: integer)\n  -> <T1>\n  2. <T2>\n  3. <T3>\n  4. <T4>\n  5. <T5>\n  6. <T6>\n  7. <T7>\n  8. <T8>\n  9. <T9>\n 10. <T10>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    457,
                    15
                ],
                "rawdesc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-unpack\"])",
                "start": [
                    457,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": true,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                464,
                                20
                            ],
                            "name": "list",
                            "start": [
                                464,
                                16
                            ],
                            "type": "local",
                            "view": "{ [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9> }"
                        }
                    ],
                    "finish": [
                        464,
                        25
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T1>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T2>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T3>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T4>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T5>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T6>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T7>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T8>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T9>"
                        }
                    ],
                    "start": [
                        464,
                        0
                    ],
                    "type": "function",
                    "view": "function unpack(list: { [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9> })\n  -> <T1>\n  2. <T2>\n  3. <T3>\n  4. <T4>\n  5. <T5>\n  6. <T6>\n  7. <T7>\n  8. <T8>\n  9. <T9>"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    464,
                    15
                ],
                "start": [
                    464,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "unpack",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/builtin.lua",
                "finish": [
                    13,
                    18
                ],
                "start": [
                    13,
                    10
                ],
                "type": "doc.class",
                "view": "userdata",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "userdata",
        "type": "type",
        "view": "userdata"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8\"])\n",
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8\"])\n",
                    "finish": [
                        15,
                        9
                    ],
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8\"])\n",
                    "start": [
                        15,
                        7
                    ],
                    "type": "table",
                    "view": "utf8lib"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    15,
                    4
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8\"])\n",
                "start": [
                    15,
                    0
                ],
                "type": "setglobal",
                "view": "utf8lib",
                "visible": "public"
            }
        ],
        "name": "utf8",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                26,
                                23
                            ],
                            "name": "code",
                            "start": [
                                26,
                                19
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                26,
                                28
                            ],
                            "start": [
                                26,
                                25
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                    "finish": [
                        26,
                        33
                    ],
                    "rawdesc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        26,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.char(code: integer, ...integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    26,
                    18
                ],
                "name": "char",
                "rawdesc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                "start": [
                    26,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "utf8.char",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                57,
                                25
                            ],
                            "name": "s",
                            "start": [
                                57,
                                24
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                57,
                                28
                            ],
                            "name": "i",
                            "start": [
                                57,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                57,
                                31
                            ],
                            "name": "j",
                            "start": [
                                57,
                                30
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                57,
                                36
                            ],
                            "name": "lax",
                            "start": [
                                57,
                                33
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                    "finish": [
                        57,
                        41
                    ],
                    "rawdesc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                    "returns": [
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.codepoint(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> code: integer\n  2. ...integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    57,
                    23
                ],
                "name": "codepoint",
                "rawdesc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                "start": [
                    57,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "utf8.codepoint",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                21
                            ],
                            "name": "s",
                            "start": [
                                43,
                                20
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                43,
                                26
                            ],
                            "name": "lax",
                            "start": [
                                43,
                                23
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                    "finish": [
                        43,
                        31
                    ],
                    "rawdesc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(s: string, p: integer):integer, integer"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.codes(s: string, lax?: boolean)\n  -> fun(s: string, p: integer):integer, integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    43,
                    19
                ],
                "name": "codes",
                "rawdesc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "utf8.codes",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                71,
                                19
                            ],
                            "name": "s",
                            "start": [
                                71,
                                18
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                71,
                                22
                            ],
                            "name": "i",
                            "start": [
                                71,
                                21
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                71,
                                25
                            ],
                            "name": "j",
                            "start": [
                                71,
                                24
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                71,
                                30
                            ],
                            "name": "lax",
                            "start": [
                                71,
                                27
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                    "finish": [
                        71,
                        35
                    ],
                    "rawdesc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        },
                        {
                            "name": "errpos",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        71,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.len(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> integer?\n  2. errpos: integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    71,
                    17
                ],
                "name": "len",
                "rawdesc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                "start": [
                    71,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "utf8.len",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                83,
                                22
                            ],
                            "name": "s",
                            "start": [
                                83,
                                21
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                83,
                                25
                            ],
                            "name": "n",
                            "start": [
                                83,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                83,
                                28
                            ],
                            "name": "i",
                            "start": [
                                83,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                    "finish": [
                        83,
                        33
                    ],
                    "rawdesc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                    "returns": [
                        {
                            "name": "p",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        83,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.offset(s: string, n: integer, i?: integer)\n  -> p: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    83,
                    20
                ],
                "name": "offset",
                "rawdesc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                "start": [
                    83,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "utf8.offset",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8\"])\n",
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    8,
                    17
                ],
                "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8\"])\n",
                "start": [
                    8,
                    10
                ],
                "type": "doc.class",
                "view": "utf8lib",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                26,
                                23
                            ],
                            "name": "code",
                            "start": [
                                26,
                                19
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                26,
                                28
                            ],
                            "start": [
                                26,
                                25
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                    "finish": [
                        26,
                        33
                    ],
                    "rawdesc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        26,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.char(code: integer, ...integer)\n  -> string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    26,
                    18
                ],
                "name": "char",
                "rawdesc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                "start": [
                    26,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe pattern which matches exactly one UTF-8 byte sequence, assuming that the subject is a valid UTF-8 string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.charpattern\"])\n",
                "extends": {
                    "finish": [
                        14,
                        28
                    ],
                    "start": [
                        14,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                14,
                                28
                            ],
                            "start": [
                                14,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    14,
                    28
                ],
                "name": "charpattern",
                "rawdesc": "\nThe pattern which matches exactly one UTF-8 byte sequence, assuming that the subject is a valid UTF-8 string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.charpattern\"])\n",
                "start": [
                    14,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                57,
                                25
                            ],
                            "name": "s",
                            "start": [
                                57,
                                24
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                57,
                                28
                            ],
                            "name": "i",
                            "start": [
                                57,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                57,
                                31
                            ],
                            "name": "j",
                            "start": [
                                57,
                                30
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                57,
                                36
                            ],
                            "name": "lax",
                            "start": [
                                57,
                                33
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                    "finish": [
                        57,
                        41
                    ],
                    "rawdesc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                    "returns": [
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.codepoint(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> code: integer\n  2. ...integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    57,
                    23
                ],
                "name": "codepoint",
                "rawdesc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                "start": [
                    57,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                21
                            ],
                            "name": "s",
                            "start": [
                                43,
                                20
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                43,
                                26
                            ],
                            "name": "lax",
                            "start": [
                                43,
                                23
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                    "finish": [
                        43,
                        31
                    ],
                    "rawdesc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(s: string, p: integer):integer, integer"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.codes(s: string, lax?: boolean)\n  -> fun(s: string, p: integer):integer, integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    43,
                    19
                ],
                "name": "codes",
                "rawdesc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                71,
                                19
                            ],
                            "name": "s",
                            "start": [
                                71,
                                18
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                71,
                                22
                            ],
                            "name": "i",
                            "start": [
                                71,
                                21
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                71,
                                25
                            ],
                            "name": "j",
                            "start": [
                                71,
                                24
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                71,
                                30
                            ],
                            "name": "lax",
                            "start": [
                                71,
                                27
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                    "finish": [
                        71,
                        35
                    ],
                    "rawdesc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        },
                        {
                            "name": "errpos",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        71,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.len(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> integer?\n  2. errpos: integer?"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    71,
                    17
                ],
                "name": "len",
                "rawdesc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                "start": [
                    71,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                83,
                                22
                            ],
                            "name": "s",
                            "start": [
                                83,
                                21
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                83,
                                25
                            ],
                            "name": "n",
                            "start": [
                                83,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                83,
                                28
                            ],
                            "name": "i",
                            "start": [
                                83,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                    "finish": [
                        83,
                        33
                    ],
                    "rawdesc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                    "returns": [
                        {
                            "name": "p",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        83,
                        0
                    ],
                    "type": "function",
                    "view": "function utf8.offset(s: string, n: integer, i?: integer)\n  -> p: integer"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": [
                    83,
                    20
                ],
                "name": "offset",
                "rawdesc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                "start": [
                    83,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "utf8lib",
        "type": "type",
        "view": "utf8lib"
    },
    {
        "defines": [
            {
                "desc": "```lua\nvbuf:\n    | \"no\" -- Output operation appears immediately.\n    | \"full\" -- Performed only when the buffer is full.\n    | \"line\" -- Buffered until a newline is output.\n```",
                "finish": [
                    243,
                    11
                ],
                "rawdesc": "```lua\nvbuf:\n    | \"no\" -- Output operation appears immediately.\n    | \"full\" -- Performed only when the buffer is full.\n    | \"line\" -- Buffered until a newline is output.\n```",
                "start": [
                    240,
                    10
                ],
                "type": "doc.alias",
                "view": "\"full\"|\"line\"|\"no\""
            }
        ],
        "fields": [],
        "name": "vbuf",
        "type": "type",
        "view": "vbuf"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-warn\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                414,
                                21
                            ],
                            "name": "message",
                            "start": [
                                414,
                                14
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                414,
                                26
                            ],
                            "start": [
                                414,
                                23
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-warn\"])",
                    "finish": [
                        414,
                        31
                    ],
                    "rawdesc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-warn\"])",
                    "start": [
                        414,
                        0
                    ],
                    "type": "function",
                    "view": "function warn(message: string, ...any)"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    414,
                    13
                ],
                "rawdesc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-warn\"])",
                "start": [
                    414,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "warn",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-xpcall\"])",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                428,
                                17
                            ],
                            "name": "f",
                            "start": [
                                428,
                                16
                            ],
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": [
                                428,
                                23
                            ],
                            "name": "msgh",
                            "start": [
                                428,
                                19
                            ],
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": [
                                428,
                                29
                            ],
                            "name": "arg1",
                            "start": [
                                428,
                                25
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                428,
                                34
                            ],
                            "start": [
                                428,
                                31
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-xpcall\"])",
                    "finish": [
                        428,
                        39
                    ],
                    "rawdesc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-xpcall\"])",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        428,
                        0
                    ],
                    "type": "function",
                    "view": "function xpcall(f: fun(...any):...unknown, msgh: function, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "[FORIEGN]file:///home/vnuxa/.cache/lua-language-server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": [
                    428,
                    15
                ],
                "rawdesc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-xpcall\"])",
                "start": [
                    428,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "xpcall",
        "type": "variable",
        "view": "unknown"
    }
]